!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ABS16	src/hw/audio/opus-1.2.1/arch.h	/^#define ABS16(/;"	d
ABS32	src/hw/audio/opus-1.2.1/arch.h	/^#define ABS32(/;"	d
ADD16	src/hw/audio/opus-1.2.1/arch.h	/^#define ADD16(/;"	d
ADD16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define ADD16(/;"	d
ADD16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define ADD16(/;"	d
ADD16_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short ADD16_(int a, int b, char *file, int line)$/;"	f
ADD32	src/hw/audio/opus-1.2.1/arch.h	/^#define ADD32(/;"	d
ADD32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define ADD32(/;"	d
ADD32	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define ADD32(/;"	d
ADD32_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int ADD32_(opus_int64 a, opus_int64 b, char *file, int line)$/;"	f
ADD32_ovflw	src/hw/audio/opus-1.2.1/arch.h	/^#define ADD32_ovflw(/;"	d
ADD32_ovflw	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define ADD32_ovflw(/;"	d
ADD32_ovflw	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define ADD32_ovflw(/;"	d
ALIGN	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define ALIGN(/;"	d
ALLOC	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#  define ALLOC(/;"	d
ALLOC	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define ALLOC(/;"	d
ALLOC_NONE	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define ALLOC_NONE /;"	d
ALLOC_STACK	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define ALLOC_STACK /;"	d
ALLOC_STACK	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define ALLOC_STACK$/;"	d
ALLOC_STEPS	src/hw/audio/opus-1.2.1/rate.c	/^#define ALLOC_STEPS /;"	d	file:
ANALYSIS_BUF_SIZE	src/hw/audio/opus-1.2.1/analysis.h	/^#define ANALYSIS_BUF_SIZE /;"	d
ANALYSIS_C	src/hw/audio/opus-1.2.1/analysis.c	/^#define ANALYSIS_C$/;"	d	file:
ANALYSIS_COUNT_MAX	src/hw/audio/opus-1.2.1/analysis.h	/^#define ANALYSIS_COUNT_MAX /;"	d
ANALYSIS_H	src/hw/audio/opus-1.2.1/analysis.h	/^#define ANALYSIS_H$/;"	d
API_fs_Hz	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                   API_fs_Hz;                         \/* API sampling frequency (Hz)                                      *\/$/;"	m	struct:__anon33
API_sampleRate	src/hw/audio/opus-1.2.1/control.h	/^    opus_int32 API_sampleRate;$/;"	m	struct:__anon8
API_sampleRate	src/hw/audio/opus-1.2.1/control.h	/^    opus_int32 API_sampleRate;$/;"	m	struct:__anon9
APP_DATA_BATTERY	src/event/app.h	/^	APP_DATA_BATTERY,$/;"	e	enum:app_module_data_type
APP_DATA_COUNT	src/event/app.h	/^	APP_DATA_COUNT,$/;"	e	enum:app_module_data_type
APP_DATA_MODEM_DYNAMIC	src/event/app.h	/^	APP_DATA_MODEM_DYNAMIC,$/;"	e	enum:app_module_data_type
APP_DATA_MODEM_STATIC	src/event/app.h	/^	APP_DATA_MODEM_STATIC,$/;"	e	enum:app_module_data_type
APP_DATA_NEIGHBOR_CELLS	src/event/app.h	/^	APP_DATA_NEIGHBOR_CELLS,$/;"	e	enum:app_module_data_type
APP_DATA_SERVER	src/event/app.h	/^	APP_DATA_SERVER,$/;"	e	enum:app_module_data_type
APP_DATA_STATION	src/event/app.h	/^  APP_DATA_STATION,$/;"	e	enum:app_module_data_type
APP_DATA_TALKER	src/event/app.h	/^  APP_DATA_TALKER,$/;"	e	enum:app_module_data_type
APP_DATA_TALKGROUP	src/event/app.h	/^  APP_DATA_TALKGROUP,$/;"	e	enum:app_module_data_type
APP_EVENT_ERROR	src/event/app.h	/^	APP_EVENT_ERROR$/;"	e	enum:app_module_event_type
APP_EVENT_LISTEN_END	src/event/app.h	/^  APP_EVENT_LISTEN_END,$/;"	e	enum:app_module_event_type
APP_EVENT_LISTEN_START	src/event/app.h	/^  APP_EVENT_LISTEN_START,$/;"	e	enum:app_module_event_type
APP_EVENT_LTE_CONNECT	src/event/app.h	/^	APP_EVENT_LTE_CONNECT,$/;"	e	enum:app_module_event_type
APP_EVENT_LTE_DISCONNECT	src/event/app.h	/^	APP_EVENT_LTE_DISCONNECT,$/;"	e	enum:app_module_event_type
APP_EVENT_SERVER_AUTH_FAIL	src/event/app.h	/^  APP_EVENT_SERVER_AUTH_FAIL,$/;"	e	enum:app_module_event_type
APP_EVENT_SERVER_AUTH_START	src/event/app.h	/^  APP_EVENT_SERVER_AUTH_START,$/;"	e	enum:app_module_event_type
APP_EVENT_SERVER_AUTH_SUCCESS	src/event/app.h	/^  APP_EVENT_SERVER_AUTH_SUCCESS,$/;"	e	enum:app_module_event_type
APP_EVENT_SERVER_CONNECT_FAIL	src/event/app.h	/^  APP_EVENT_SERVER_CONNECT_FAIL,$/;"	e	enum:app_module_event_type
APP_EVENT_SERVER_CONNECT_START	src/event/app.h	/^	APP_EVENT_SERVER_CONNECT_START,$/;"	e	enum:app_module_event_type
APP_EVENT_SERVER_CONNECT_SUCCESS	src/event/app.h	/^  APP_EVENT_SERVER_CONNECT_SUCCESS,$/;"	e	enum:app_module_event_type
APP_EVENT_SHUTDOWN_READY	src/event/app.h	/^	APP_EVENT_SHUTDOWN_READY,$/;"	e	enum:app_module_event_type
APP_EVENT_START	src/event/app.h	/^	APP_EVENT_START,$/;"	e	enum:app_module_event_type
APP_EVENT_STATION_CONNECT	src/event/app.h	/^  APP_EVENT_STATION_CONNECT,$/;"	e	enum:app_module_event_type
APP_EVENT_STATION_CONNECT_FAIL	src/event/app.h	/^  APP_EVENT_STATION_CONNECT_FAIL,$/;"	e	enum:app_module_event_type
APP_EVENT_STATION_CONNECT_SUCCESS	src/event/app.h	/^  APP_EVENT_STATION_CONNECT_SUCCESS,$/;"	e	enum:app_module_event_type
APP_EVENT_TALKGROUP_JOIN	src/event/app.h	/^  APP_EVENT_TALKGROUP_JOIN,$/;"	e	enum:app_module_event_type
APP_EVENT_TALKGROUP_JOIN_FAIL	src/event/app.h	/^  APP_EVENT_TALKGROUP_JOIN_FAIL,$/;"	e	enum:app_module_event_type
APP_EVENT_TALKGROUP_JOIN_SUCCESS	src/event/app.h	/^  APP_EVENT_TALKGROUP_JOIN_SUCCESS,$/;"	e	enum:app_module_event_type
APP_EVENT_TALK_END	src/event/app.h	/^  APP_EVENT_TALK_END,$/;"	e	enum:app_module_event_type
APP_EVENT_TALK_START	src/event/app.h	/^  APP_EVENT_TALK_START,$/;"	e	enum:app_module_event_type
APP_QUEUE_BYTE_ALIGNMENT	src/main.c	/^#define APP_QUEUE_BYTE_ALIGNMENT	/;"	d	file:
APP_QUEUE_ENTRY_COUNT	src/main.c	/^#define APP_QUEUE_ENTRY_COUNT	/;"	d	file:
ARCH_H	src/hw/audio/opus-1.2.1/arch.h	/^#define ARCH_H$/;"	d
ARMCPU_H	src/hw/audio/opus-1.2.1/arm/armcpu.h	/^# define ARMCPU_H$/;"	d
AR_Q13	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    silk_DWORD_ALIGN opus_int16 AR_Q13[ MAX_NB_SUBFR * MAX_SHAPE_LPC_ORDER ];$/;"	m	struct:__anon14
AUDIO_ANA_ADC_CTRL_ADC_VOL_LINEIN	src/hw/driver/sgtl5000.h	/^#define AUDIO_ANA_ADC_CTRL_ADC_VOL_LINEIN /;"	d
AUDIO_ANA_ADC_CTRL_ADC_VOL_MIC	src/hw/driver/sgtl5000.h	/^#define AUDIO_ANA_ADC_CTRL_ADC_VOL_MIC /;"	d
AUDIO_FRAME_BUF_BYTES	src/hw/audio/codec2.c	/^#define AUDIO_FRAME_BUF_BYTES /;"	d	file:
AUDIO_FRAME_WORDS	src/hw/audio/codec-i2s.c	/^#define AUDIO_FRAME_WORDS /;"	d	file:
AUDIO_INPUT_LINEIN	src/hw/driver/sgtl5000.h	/^#define AUDIO_INPUT_LINEIN /;"	d
AUDIO_INPUT_MIC	src/hw/driver/sgtl5000.h	/^#define AUDIO_INPUT_MIC /;"	d
AUDIO_NUM_CHANNELS	src/hw/audio/codec2.c	/^#define AUDIO_NUM_CHANNELS /;"	d	file:
AUDIO_SAMPLES_PER_CH_PER_FRAME	src/hw/audio/codec2.c	/^#define AUDIO_SAMPLES_PER_CH_PER_FRAME /;"	d	file:
AUDIO_SAMPLES_PER_FRAME	src/hw/audio/codec2.c	/^#define AUDIO_SAMPLES_PER_FRAME /;"	d	file:
AUDIO_SAMPLE_BIT_WIDTH	src/hw/audio/codec2.c	/^#define AUDIO_SAMPLE_BIT_WIDTH /;"	d	file:
AUDIO_SAMPLE_BYTES	src/hw/audio/codec2.c	/^#define AUDIO_SAMPLE_BYTES /;"	d	file:
AUDIO_SAMPLE_FREQ	src/hw/audio/codec2.c	/^#define AUDIO_SAMPLE_FREQ /;"	d	file:
AUTHENTICATING	src/module/ui.c	/^  AUTHENTICATING,$/;"	e	enum:screen_id	file:
AUTH_FAILED	src/module/ui.c	/^  AUTH_FAILED,$/;"	e	enum:screen_id	file:
A_LIMIT	src/hw/audio/opus-1.2.1/LPC_inv_pred_gain.c	/^#define A_LIMIT /;"	d	file:
A_fb1_20	src/hw/audio/opus-1.2.1/ana_filt_bank_1.c	/^static opus_int16 A_fb1_20 = 5394 << 1;$/;"	v	file:
A_fb1_21	src/hw/audio/opus-1.2.1/ana_filt_bank_1.c	/^static opus_int16 A_fb1_21 = -24290; \/* (opus_int16)(20623 << 1) *\/$/;"	v	file:
AnaState	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  AnaState[ 2 ];                  \/* Analysis filterbank state: 0-8 kHz                                   *\/$/;"	m	struct:__anon27
AnaState1	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  AnaState1[ 2 ];                 \/* Analysis filterbank state: 0-4 kHz                                   *\/$/;"	m	struct:__anon27
AnaState2	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  AnaState2[ 2 ];                 \/* Analysis filterbank state: 0-2 kHz                                   *\/$/;"	m	struct:__anon27
AnalysisInfo	src/hw/audio/opus-1.2.1/celt.h	/^} AnalysisInfo;$/;"	t	typeref:struct:__anon10
BANDS_H	src/hw/audio/opus-1.2.1/bands.h	/^#define BANDS_H$/;"	d
BANDWIDTH_EXPANSION	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define BANDWIDTH_EXPANSION /;"	d
BARK_BANDS	src/hw/audio/opus-1.2.1/modes.c	/^#define BARK_BANDS /;"	d	file:
BG_SNR_DECR_dB	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define BG_SNR_DECR_dB /;"	d
BIGBLOCKSIZE	src/hw/audio/libc_opus/newlib_libc_string_memmove.c	/^#define BIGBLOCKSIZE /;"	d	file:
BIGBLOCKSIZE	src/hw/audio/libc_opus/newlib_libc_string_mempcpy.c	/^#define BIGBLOCKSIZE /;"	d	file:
BIN_DIV_STEPS_A2NLSF_FIX	src/hw/audio/opus-1.2.1/A2NLSF.c	/^#define BIN_DIV_STEPS_A2NLSF_FIX /;"	d	file:
BITALLOC_SIZE	src/hw/audio/opus-1.2.1/modes.c	/^#define BITALLOC_SIZE /;"	d	file:
BITRES	src/hw/audio/opus-1.2.1/entcode.h	/^# define BITRES /;"	d
BITRESERVOIR_DECAY_TIME_MS	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define BITRESERVOIR_DECAY_TIME_MS /;"	d
BOOT	src/module/ui.c	/^  BOOT = 0,$/;"	e	enum:screen_id	file:
BWE_AFTER_LOSS_Q16	src/hw/audio/opus-1.2.1/define.h	/^#define BWE_AFTER_LOSS_Q16 /;"	d
BWE_COEF	src/hw/audio/opus-1.2.1/PLC.h	/^#define BWE_COEF /;"	d
CB1_NLSF_Q8	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_uint8             *CB1_NLSF_Q8;$/;"	m	struct:__anon29
CB1_Wght_Q9	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_int16             *CB1_Wght_Q9;$/;"	m	struct:__anon29
CB1_iCDF	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_uint8             *CB1_iCDF;$/;"	m	struct:__anon29
CELTDecoder	src/hw/audio/opus-1.2.1/celt.h	/^#define CELTDecoder /;"	d
CELTEncoder	src/hw/audio/opus-1.2.1/celt.h	/^#define CELTEncoder /;"	d
CELTMode	src/hw/audio/opus-1.2.1/celt.h	/^#define CELTMode /;"	d
CELT_C	src/hw/audio/opus-1.2.1/celt.c	/^#define CELT_C$/;"	d	file:
CELT_DECODER_C	src/hw/audio/opus-1.2.1/celt_decoder.c	/^#define CELT_DECODER_C$/;"	d	file:
CELT_ENCODER_C	src/hw/audio/opus-1.2.1/celt_encoder.c	/^#define CELT_ENCODER_C$/;"	d	file:
CELT_GET_AND_CLEAR_ERROR	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_GET_AND_CLEAR_ERROR(/;"	d
CELT_GET_AND_CLEAR_ERROR_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_GET_AND_CLEAR_ERROR_REQUEST /;"	d
CELT_GET_MODE	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_GET_MODE(/;"	d
CELT_GET_MODE_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_GET_MODE_REQUEST /;"	d
CELT_H	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_H$/;"	d
CELT_MAX_PULSES	src/hw/audio/opus-1.2.1/rate.h	/^#define CELT_MAX_PULSES /;"	d
CELT_PVQ_U	src/hw/audio/opus-1.2.1/cwrs.c	/^# define CELT_PVQ_U(/;"	d	file:
CELT_PVQ_U_DATA	src/hw/audio/opus-1.2.1/cwrs.c	/^static const opus_uint32 CELT_PVQ_U_DATA[1488]={$/;"	v	file:
CELT_PVQ_U_ROW	src/hw/audio/opus-1.2.1/cwrs.c	/^static const opus_uint32 *const CELT_PVQ_U_ROW[15]={$/;"	v	file:
CELT_PVQ_V	src/hw/audio/opus-1.2.1/cwrs.c	/^# define CELT_PVQ_V(/;"	d	file:
CELT_SET_ANALYSIS	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_ANALYSIS(/;"	d
CELT_SET_ANALYSIS_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_ANALYSIS_REQUEST /;"	d
CELT_SET_CHANNELS	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_CHANNELS(/;"	d
CELT_SET_CHANNELS_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_CHANNELS_REQUEST /;"	d
CELT_SET_END_BAND	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_END_BAND(/;"	d
CELT_SET_END_BAND_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_END_BAND_REQUEST /;"	d
CELT_SET_INPUT_CLIPPING	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_INPUT_CLIPPING(/;"	d
CELT_SET_INPUT_CLIPPING_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_INPUT_CLIPPING_REQUEST /;"	d
CELT_SET_PREDICTION	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_PREDICTION(/;"	d
CELT_SET_PREDICTION_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_PREDICTION_REQUEST /;"	d
CELT_SET_SIGNALLING	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_SIGNALLING(/;"	d
CELT_SET_SIGNALLING_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_SIGNALLING_REQUEST /;"	d
CELT_SET_SILK_INFO	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_SILK_INFO(/;"	d
CELT_SET_SILK_INFO_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_SILK_INFO_REQUEST /;"	d
CELT_SET_START_BAND	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_START_BAND(/;"	d
CELT_SET_START_BAND_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_START_BAND_REQUEST /;"	d
CELT_SET_TONALITY	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_TONALITY(/;"	d
CELT_SET_TONALITY_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_TONALITY_REQUEST /;"	d
CELT_SET_TONALITY_SLOPE	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_TONALITY_SLOPE(/;"	d
CELT_SET_TONALITY_SLOPE_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define CELT_SET_TONALITY_SLOPE_REQUEST /;"	d
CELT_SIG_SCALE	src/hw/audio/opus-1.2.1/arch.h	/^#define CELT_SIG_SCALE /;"	d
CHECK_OVERFLOW_OP	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#  define CHECK_OVERFLOW_OP(/;"	d
CHIP_ADCDAC_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL /;"	d
CHIP_ADCDAC_CTRL_ADC_HPF_BYPASS_Bypassed	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL_ADC_HPF_BYPASS_Bypassed /;"	d
CHIP_ADCDAC_CTRL_ADC_HPF_BYPASS_Normal	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL_ADC_HPF_BYPASS_Normal /;"	d
CHIP_ADCDAC_CTRL_ADC_HPF_BYPASS_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL_ADC_HPF_BYPASS_POS /;"	d
CHIP_ADCDAC_CTRL_ADC_HPF_FREEZE_Freeze	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL_ADC_HPF_FREEZE_Freeze /;"	d
CHIP_ADCDAC_CTRL_ADC_HPF_FREEZE_Normal	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL_ADC_HPF_FREEZE_Normal /;"	d
CHIP_ADCDAC_CTRL_ADC_HPF_FREEZE_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL_ADC_HPF_FREEZE_POS /;"	d
CHIP_ADCDAC_CTRL_DAC_MUTE_LEFT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL_DAC_MUTE_LEFT_POS /;"	d
CHIP_ADCDAC_CTRL_DAC_MUTE_RIGHT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL_DAC_MUTE_RIGHT_POS /;"	d
CHIP_ADCDAC_CTRL_VOL_BUSY_DAC_LEFT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL_VOL_BUSY_DAC_LEFT_POS /;"	d
CHIP_ADCDAC_CTRL_VOL_BUSY_DAC_RIGHT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL_VOL_BUSY_DAC_RIGHT_POS /;"	d
CHIP_ADCDAC_CTRL_VOL_EXPO_RAMP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL_VOL_EXPO_RAMP_POS /;"	d
CHIP_ADCDAC_CTRL_VOL_RAM_EN_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ADCDAC_CTRL_VOL_RAM_EN_POS /;"	d
CHIP_ANA_ADC_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_ADC_CTRL /;"	d
CHIP_ANA_ADC_CTRL_ADC_VOL_LEFT_0dB	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_ADC_CTRL_ADC_VOL_LEFT_0dB /;"	d
CHIP_ANA_ADC_CTRL_ADC_VOL_LEFT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_ADC_CTRL_ADC_VOL_LEFT_POS /;"	d
CHIP_ANA_ADC_CTRL_ADC_VOL_LEFT_p22_5dB	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_ADC_CTRL_ADC_VOL_LEFT_p22_5dB /;"	d
CHIP_ANA_ADC_CTRL_ADC_VOL_M6DB_ADCrangereduce6dB	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_ADC_CTRL_ADC_VOL_M6DB_ADCrangereduce6dB /;"	d
CHIP_ANA_ADC_CTRL_ADC_VOL_M6DB_NoChange	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_ADC_CTRL_ADC_VOL_M6DB_NoChange /;"	d
CHIP_ANA_ADC_CTRL_ADC_VOL_M6DB_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_ADC_CTRL_ADC_VOL_M6DB_POS /;"	d
CHIP_ANA_ADC_CTRL_ADC_VOL_RIGHT_0dB	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_ADC_CTRL_ADC_VOL_RIGHT_0dB /;"	d
CHIP_ANA_ADC_CTRL_ADC_VOL_RIGHT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_ADC_CTRL_ADC_VOL_RIGHT_POS /;"	d
CHIP_ANA_ADC_CTRL_ADC_VOL_RIGHT_p22_5dB	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_ADC_CTRL_ADC_VOL_RIGHT_p22_5dB /;"	d
CHIP_ANA_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL /;"	d
CHIP_ANA_CTRL_EN_ZCD_ADC_Disabled	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_EN_ZCD_ADC_Disabled /;"	d
CHIP_ANA_CTRL_EN_ZCD_ADC_Enabled	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_EN_ZCD_ADC_Enabled /;"	d
CHIP_ANA_CTRL_EN_ZCD_ADC_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_EN_ZCD_ADC_POS /;"	d
CHIP_ANA_CTRL_EN_ZCD_HP_Disabled	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_EN_ZCD_HP_Disabled /;"	d
CHIP_ANA_CTRL_EN_ZCD_HP_Enabled	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_EN_ZCD_HP_Enabled /;"	d
CHIP_ANA_CTRL_EN_ZCD_HP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_EN_ZCD_HP_POS /;"	d
CHIP_ANA_CTRL_MUTE_ADC_Mute	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_MUTE_ADC_Mute /;"	d
CHIP_ANA_CTRL_MUTE_ADC_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_MUTE_ADC_POS /;"	d
CHIP_ANA_CTRL_MUTE_ADC_Unmute	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_MUTE_ADC_Unmute /;"	d
CHIP_ANA_CTRL_MUTE_HP_Mute	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_MUTE_HP_Mute /;"	d
CHIP_ANA_CTRL_MUTE_HP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_MUTE_HP_POS /;"	d
CHIP_ANA_CTRL_MUTE_HP_Unmute	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_MUTE_HP_Unmute /;"	d
CHIP_ANA_CTRL_MUTE_LO_Mute	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_MUTE_LO_Mute /;"	d
CHIP_ANA_CTRL_MUTE_LO_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_MUTE_LO_POS /;"	d
CHIP_ANA_CTRL_MUTE_LO_Unmute	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_MUTE_LO_Unmute /;"	d
CHIP_ANA_CTRL_SELECT_ADC_LINEIN	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_SELECT_ADC_LINEIN /;"	d
CHIP_ANA_CTRL_SELECT_ADC_Microphone	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_SELECT_ADC_Microphone /;"	d
CHIP_ANA_CTRL_SELECT_ADC_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_SELECT_ADC_POS /;"	d
CHIP_ANA_CTRL_SELECT_HP_DAC	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_SELECT_HP_DAC /;"	d
CHIP_ANA_CTRL_SELECT_HP_LINEIN	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_SELECT_HP_LINEIN /;"	d
CHIP_ANA_CTRL_SELECT_HP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_CTRL_SELECT_HP_POS /;"	d
CHIP_ANA_HP_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_HP_CTRL /;"	d
CHIP_ANA_HP_CTRL_HP_VOL_LEFT_0dB	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_HP_CTRL_HP_VOL_LEFT_0dB /;"	d
CHIP_ANA_HP_CTRL_HP_VOL_LEFT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_HP_CTRL_HP_VOL_LEFT_POS /;"	d
CHIP_ANA_HP_CTRL_HP_VOL_LEFT_neg20dB	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_HP_CTRL_HP_VOL_LEFT_neg20dB /;"	d
CHIP_ANA_HP_CTRL_HP_VOL_LEFT_neg51_5dB	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_HP_CTRL_HP_VOL_LEFT_neg51_5dB /;"	d
CHIP_ANA_HP_CTRL_HP_VOL_LEFT_p12dB	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_HP_CTRL_HP_VOL_LEFT_p12dB /;"	d
CHIP_ANA_HP_CTRL_HP_VOL_RIGHT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_HP_CTRL_HP_VOL_RIGHT_POS /;"	d
CHIP_ANA_HP_CTRL_HP_VOL_RIGHT_neg20dB	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_HP_CTRL_HP_VOL_RIGHT_neg20dB /;"	d
CHIP_ANA_POWER	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER /;"	d
CHIP_ANA_POWER_ADC_MONO_Mono	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_ADC_MONO_Mono /;"	d
CHIP_ANA_POWER_ADC_MONO_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_ADC_MONO_POS /;"	d
CHIP_ANA_POWER_ADC_MONO_Stereo	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_ADC_MONO_Stereo /;"	d
CHIP_ANA_POWER_ADC_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_ADC_POWERUP_POS /;"	d
CHIP_ANA_POWER_ADC_POWERUP_Powerdown	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_ADC_POWERUP_Powerdown /;"	d
CHIP_ANA_POWER_ADC_POWERUP_Powerup	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_ADC_POWERUP_Powerup /;"	d
CHIP_ANA_POWER_CAPLESS_HEADPHONE_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_CAPLESS_HEADPHONE_POWERUP_POS /;"	d
CHIP_ANA_POWER_CAPLESS_HEADPHONE_POWERUP_Powerdown	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_CAPLESS_HEADPHONE_POWERUP_Powerdown /;"	d
CHIP_ANA_POWER_CAPLESS_HEADPHONE_POWERUP_Powerup	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_CAPLESS_HEADPHONE_POWERUP_Powerup /;"	d
CHIP_ANA_POWER_DAC_MONO_Mono	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_DAC_MONO_Mono /;"	d
CHIP_ANA_POWER_DAC_MONO_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_DAC_MONO_POS /;"	d
CHIP_ANA_POWER_DAC_MONO_Stereo	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_DAC_MONO_Stereo /;"	d
CHIP_ANA_POWER_DAC_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_DAC_POWERUP_POS /;"	d
CHIP_ANA_POWER_DAC_POWERUP_Powerdown	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_DAC_POWERUP_Powerdown /;"	d
CHIP_ANA_POWER_DAC_POWERUP_Powerup	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_DAC_POWERUP_Powerup /;"	d
CHIP_ANA_POWER_HEADPHONE_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_HEADPHONE_POWERUP_POS /;"	d
CHIP_ANA_POWER_HEADPHONE_POWERUP_Powerdown	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_HEADPHONE_POWERUP_Powerdown /;"	d
CHIP_ANA_POWER_HEADPHONE_POWERUP_Powerup	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_HEADPHONE_POWERUP_Powerup /;"	d
CHIP_ANA_POWER_LINEOUT_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_LINEOUT_POWERUP_POS /;"	d
CHIP_ANA_POWER_LINEOUT_POWERUP_Powerdown	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_LINEOUT_POWERUP_Powerdown /;"	d
CHIP_ANA_POWER_LINEOUT_POWERUP_Powerup	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_LINEOUT_POWERUP_Powerup /;"	d
CHIP_ANA_POWER_PLL_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_PLL_POWERUP_POS /;"	d
CHIP_ANA_POWER_PLL_POWERUP_Powerdown	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_PLL_POWERUP_Powerdown /;"	d
CHIP_ANA_POWER_PLL_POWERUP_Powerup	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_PLL_POWERUP_Powerup /;"	d
CHIP_ANA_POWER_REFTOP_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_REFTOP_POWERUP_POS /;"	d
CHIP_ANA_POWER_REFTOP_POWERUP_Powerdown	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_REFTOP_POWERUP_Powerdown /;"	d
CHIP_ANA_POWER_REFTOP_POWERUP_Powerup	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_REFTOP_POWERUP_Powerup /;"	d
CHIP_ANA_POWER_VAG_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_VAG_POWERUP_POS /;"	d
CHIP_ANA_POWER_VAG_POWERUP_Powerdown	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_VAG_POWERUP_Powerdown /;"	d
CHIP_ANA_POWER_VAG_POWERUP_Powerup	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_VAG_POWERUP_Powerup /;"	d
CHIP_ANA_POWER_VCOAMP_POWERUP	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_VCOAMP_POWERUP /;"	d
CHIP_ANA_POWER_VCOAMP_POWERUP_Powerdown	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_VCOAMP_POWERUP_Powerdown /;"	d
CHIP_ANA_POWER_VCOAMP_POWERUP_Powerup	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_POWER_VCOAMP_POWERUP_Powerup /;"	d
CHIP_ANA_STATUS	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_STATUS	/;"	d
CHIP_ANA_TEST1	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_TEST1	/;"	d
CHIP_ANA_TEST2	src/hw/driver/sgtl5000.h	/^#define CHIP_ANA_TEST2	/;"	d
CHIP_CLK_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_CLK_CTRL /;"	d
CHIP_CLK_CTRL_MCLK_FREQ_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_CLK_CTRL_MCLK_FREQ_POS /;"	d
CHIP_CLK_CTRL_RATE_MODE_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_CLK_CTRL_RATE_MODE_POS /;"	d
CHIP_CLK_CTRL_SYS_FS_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_CLK_CTRL_SYS_FS_POS /;"	d
CHIP_CLK_TOP_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_CLK_TOP_CTRL /;"	d
CHIP_DAC_VOL	src/hw/driver/sgtl5000.h	/^#define CHIP_DAC_VOL /;"	d
CHIP_DAP_CONTROL_DAP_EN_Disable	src/hw/driver/sgtl5000.h	/^#define CHIP_DAP_CONTROL_DAP_EN_Disable /;"	d
CHIP_DAP_CONTROL_DAP_EN_Enable	src/hw/driver/sgtl5000.h	/^#define CHIP_DAP_CONTROL_DAP_EN_Enable /;"	d
CHIP_DAP_CONTROL_DAP_EN_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_DAP_CONTROL_DAP_EN_POS /;"	d
CHIP_DIG_POWER	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER /;"	d
CHIP_DIG_POWER_ADC_POWERUP_Disable	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_ADC_POWERUP_Disable /;"	d
CHIP_DIG_POWER_ADC_POWERUP_Enable	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_ADC_POWERUP_Enable /;"	d
CHIP_DIG_POWER_ADC_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_ADC_POWERUP_POS /;"	d
CHIP_DIG_POWER_DAC_POWERUP_Disable	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_DAC_POWERUP_Disable /;"	d
CHIP_DIG_POWER_DAC_POWERUP_Enable	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_DAC_POWERUP_Enable /;"	d
CHIP_DIG_POWER_DAC_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_DAC_POWERUP_POS /;"	d
CHIP_DIG_POWER_DAP_POWERUP_Disable	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_DAP_POWERUP_Disable /;"	d
CHIP_DIG_POWER_DAP_POWERUP_Enable	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_DAP_POWERUP_Enable /;"	d
CHIP_DIG_POWER_DAP_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_DAP_POWERUP_POS /;"	d
CHIP_DIG_POWER_I2S_IN_POWERUP_Disable	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_I2S_IN_POWERUP_Disable /;"	d
CHIP_DIG_POWER_I2S_IN_POWERUP_Enable	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_I2S_IN_POWERUP_Enable /;"	d
CHIP_DIG_POWER_I2S_IN_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_I2S_IN_POWERUP_POS /;"	d
CHIP_DIG_POWER_I2S_OUT_POWERUP_Disable	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_I2S_OUT_POWERUP_Disable /;"	d
CHIP_DIG_POWER_I2S_OUT_POWERUP_Enable	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_I2S_OUT_POWERUP_Enable /;"	d
CHIP_DIG_POWER_I2S_OUT_POWERUP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_DIG_POWER_I2S_OUT_POWERUP_POS /;"	d
CHIP_I2S_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_I2S_CTRL /;"	d
CHIP_I2S_CTRL_DLEN_16bits	src/hw/driver/sgtl5000.h	/^#define CHIP_I2S_CTRL_DLEN_16bits /;"	d
CHIP_I2S_CTRL_DLEN_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_I2S_CTRL_DLEN_POS /;"	d
CHIP_I2S_CTRL_MS_MASTER	src/hw/driver/sgtl5000.h	/^#define CHIP_I2S_CTRL_MS_MASTER /;"	d
CHIP_I2S_CTRL_MS_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_I2S_CTRL_MS_POS /;"	d
CHIP_I2S_CTRL_MS_SLAVE	src/hw/driver/sgtl5000.h	/^#define CHIP_I2S_CTRL_MS_SLAVE /;"	d
CHIP_I2S_CTRL_SCLKFREQ_32Fs	src/hw/driver/sgtl5000.h	/^#define CHIP_I2S_CTRL_SCLKFREQ_32Fs /;"	d
CHIP_I2S_CTRL_SCLKFREQ_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_I2S_CTRL_SCLKFREQ_POS /;"	d
CHIP_ID	src/hw/driver/sgtl5000.h	/^#define CHIP_ID /;"	d
CHIP_LINE_OUT_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_LINE_OUT_CTRL /;"	d
CHIP_LINE_OUT_CTRL_LO_VAGCNTRL_1_175V	src/hw/driver/sgtl5000.h	/^#define CHIP_LINE_OUT_CTRL_LO_VAGCNTRL_1_175V /;"	d
CHIP_LINE_OUT_CTRL_LO_VAGCNTRL_1_650V	src/hw/driver/sgtl5000.h	/^#define CHIP_LINE_OUT_CTRL_LO_VAGCNTRL_1_650V /;"	d
CHIP_LINE_OUT_CTRL_LO_VAGCNTRL_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_LINE_OUT_CTRL_LO_VAGCNTRL_POS /;"	d
CHIP_LINE_OUT_CTRL_OUT_CURRENT_0_54mA	src/hw/driver/sgtl5000.h	/^#define CHIP_LINE_OUT_CTRL_OUT_CURRENT_0_54mA /;"	d
CHIP_LINE_OUT_CTRL_OUT_CURRENT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_LINE_OUT_CTRL_OUT_CURRENT_POS /;"	d
CHIP_LINE_OUT_VOL	src/hw/driver/sgtl5000.h	/^#define CHIP_LINE_OUT_VOL /;"	d
CHIP_LINREG_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_LINREG_CTRL /;"	d
CHIP_MIC_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL /;"	d
CHIP_MIC_CTRL_BIAS_RESISTOR_2k	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_RESISTOR_2k /;"	d
CHIP_MIC_CTRL_BIAS_RESISTOR_4k	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_RESISTOR_4k /;"	d
CHIP_MIC_CTRL_BIAS_RESISTOR_8k	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_RESISTOR_8k /;"	d
CHIP_MIC_CTRL_BIAS_RESISTOR_Off	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_RESISTOR_Off /;"	d
CHIP_MIC_CTRL_BIAS_RESISTOR_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_RESISTOR_POS /;"	d
CHIP_MIC_CTRL_BIAS_VOLT_1_25v	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_VOLT_1_25v /;"	d
CHIP_MIC_CTRL_BIAS_VOLT_1_50v	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_VOLT_1_50v /;"	d
CHIP_MIC_CTRL_BIAS_VOLT_1_75v	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_VOLT_1_75v /;"	d
CHIP_MIC_CTRL_BIAS_VOLT_2_00v	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_VOLT_2_00v /;"	d
CHIP_MIC_CTRL_BIAS_VOLT_2_25v	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_VOLT_2_25v /;"	d
CHIP_MIC_CTRL_BIAS_VOLT_2_50v	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_VOLT_2_50v /;"	d
CHIP_MIC_CTRL_BIAS_VOLT_3_00v	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_VOLT_3_00v /;"	d
CHIP_MIC_CTRL_BIAS_VOLT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_BIAS_VOLT_POS /;"	d
CHIP_MIC_CTRL_GAIN_0dB	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_GAIN_0dB /;"	d
CHIP_MIC_CTRL_GAIN_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_GAIN_POS /;"	d
CHIP_MIC_CTRL_GAIN_p20dB	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_GAIN_p20dB /;"	d
CHIP_MIC_CTRL_GAIN_p30dB	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_GAIN_p30dB /;"	d
CHIP_MIC_CTRL_GAIN_p40dB	src/hw/driver/sgtl5000.h	/^#define CHIP_MIC_CTRL_GAIN_p40dB /;"	d
CHIP_PAD_STRENGTH	src/hw/driver/sgtl5000.h	/^#define CHIP_PAD_STRENGTH	/;"	d
CHIP_PLL_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_PLL_CTRL /;"	d
CHIP_PLL_CTRL_FRAC_DIVISOR_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_PLL_CTRL_FRAC_DIVISOR_POS /;"	d
CHIP_PLL_CTRL_INT_DIVISOR_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_PLL_CTRL_INT_DIVISOR_POS /;"	d
CHIP_REF_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_REF_CTRL /;"	d
CHIP_REF_CTRL_BIAS_CTRL_Nominal	src/hw/driver/sgtl5000.h	/^#define CHIP_REF_CTRL_BIAS_CTRL_Nominal /;"	d
CHIP_REF_CTRL_BIAS_CTRL_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_REF_CTRL_BIAS_CTRL_POS /;"	d
CHIP_REF_CTRL_BIAS_CTRL_p12_5	src/hw/driver/sgtl5000.h	/^#define CHIP_REF_CTRL_BIAS_CTRL_p12_5 /;"	d
CHIP_REF_CTRL_SMALL_POP_Normal	src/hw/driver/sgtl5000.h	/^#define CHIP_REF_CTRL_SMALL_POP_Normal /;"	d
CHIP_REF_CTRL_SMALL_POP_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_REF_CTRL_SMALL_POP_POS /;"	d
CHIP_REF_CTRL_SMALL_POP_Slowdown	src/hw/driver/sgtl5000.h	/^#define CHIP_REF_CTRL_SMALL_POP_Slowdown /;"	d
CHIP_REF_CTRL_VAG_VAL_1_575V	src/hw/driver/sgtl5000.h	/^#define CHIP_REF_CTRL_VAG_VAL_1_575V /;"	d
CHIP_REF_CTRL_VAG_VAL_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_REF_CTRL_VAG_VAL_POS /;"	d
CHIP_SHORT_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_SHORT_CTRL /;"	d
CHIP_SHORT_CTRL_LVLADJC_250mA	src/hw/driver/sgtl5000.h	/^#define CHIP_SHORT_CTRL_LVLADJC_250mA /;"	d
CHIP_SHORT_CTRL_LVLADJC_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_SHORT_CTRL_LVLADJC_POS /;"	d
CHIP_SHORT_CTRL_LVLADJL_125mA	src/hw/driver/sgtl5000.h	/^#define CHIP_SHORT_CTRL_LVLADJL_125mA /;"	d
CHIP_SHORT_CTRL_LVLADJL_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_SHORT_CTRL_LVLADJL_POS /;"	d
CHIP_SHORT_CTRL_LVLADJR_125mA	src/hw/driver/sgtl5000.h	/^#define CHIP_SHORT_CTRL_LVLADJR_125mA /;"	d
CHIP_SHORT_CTRL_LVLADJR_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_SHORT_CTRL_LVLADJR_POS /;"	d
CHIP_SHORT_CTRL_MODE_CM_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_SHORT_CTRL_MODE_CM_POS /;"	d
CHIP_SHORT_CTRL_MODE_CM_ShortDetectAutoReset	src/hw/driver/sgtl5000.h	/^#define CHIP_SHORT_CTRL_MODE_CM_ShortDetectAutoReset /;"	d
CHIP_SHORT_CTRL_MODE_LR_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_SHORT_CTRL_MODE_LR_POS /;"	d
CHIP_SHORT_CTRL_MODE_LR_ShortDetectResetLatch	src/hw/driver/sgtl5000.h	/^#define CHIP_SHORT_CTRL_MODE_LR_ShortDetectResetLatch /;"	d
CHIP_SSS_CTRL	src/hw/driver/sgtl5000.h	/^#define CHIP_SSS_CTRL /;"	d
CHIP_SSS_CTRL_DAC_SELECT_ADC	src/hw/driver/sgtl5000.h	/^#define CHIP_SSS_CTRL_DAC_SELECT_ADC /;"	d
CHIP_SSS_CTRL_DAC_SELECT_DAP	src/hw/driver/sgtl5000.h	/^#define CHIP_SSS_CTRL_DAC_SELECT_DAP /;"	d
CHIP_SSS_CTRL_DAC_SELECT_I2S_IN	src/hw/driver/sgtl5000.h	/^#define CHIP_SSS_CTRL_DAC_SELECT_I2S_IN /;"	d
CHIP_SSS_CTRL_DAC_SELECT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_SSS_CTRL_DAC_SELECT_POS /;"	d
CHIP_SSS_CTRL_DAP_SELECT_ADC	src/hw/driver/sgtl5000.h	/^#define CHIP_SSS_CTRL_DAP_SELECT_ADC /;"	d
CHIP_SSS_CTRL_DAP_SELECT_I2S_IN	src/hw/driver/sgtl5000.h	/^#define CHIP_SSS_CTRL_DAP_SELECT_I2S_IN /;"	d
CHIP_SSS_CTRL_DAP_SELECT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_SSS_CTRL_DAP_SELECT_POS /;"	d
CHIP_SSS_CTRL_I2S_SELECT_ADC	src/hw/driver/sgtl5000.h	/^#define CHIP_SSS_CTRL_I2S_SELECT_ADC /;"	d
CHIP_SSS_CTRL_I2S_SELECT_DAP	src/hw/driver/sgtl5000.h	/^#define CHIP_SSS_CTRL_I2S_SELECT_DAP /;"	d
CHIP_SSS_CTRL_I2S_SELECT_I2S_IN	src/hw/driver/sgtl5000.h	/^#define CHIP_SSS_CTRL_I2S_SELECT_I2S_IN /;"	d
CHIP_SSS_CTRL_I2S_SELECT_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_SSS_CTRL_I2S_SELECT_POS /;"	d
CHIP_TOP_CTRL_ENABLE_INT_OSC_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_TOP_CTRL_ENABLE_INT_OSC_POS /;"	d
CHIP_TOP_CTRL_INPUT_FREQ_DIV2_POS	src/hw/driver/sgtl5000.h	/^#define CHIP_TOP_CTRL_INPUT_FREQ_DIV2_POS /;"	d
CHIP_TOP_CTRL_INPUT_FREQ_DIV2_Passthrough	src/hw/driver/sgtl5000.h	/^#define CHIP_TOP_CTRL_INPUT_FREQ_DIV2_Passthrough /;"	d
CHIP_TOP_CTRL_INPUT_FREQ_DIV2_SYS_MCLKdiv2	src/hw/driver/sgtl5000.h	/^#define CHIP_TOP_CTRL_INPUT_FREQ_DIV2_SYS_MCLKdiv2 /;"	d
CNG_BUF_MASK_MAX	src/hw/audio/opus-1.2.1/define.h	/^#define CNG_BUF_MASK_MAX /;"	d
CNG_GAIN_SMTH_Q16	src/hw/audio/opus-1.2.1/define.h	/^#define CNG_GAIN_SMTH_Q16 /;"	d
CNG_NLSF_SMTH_Q16	src/hw/audio/opus-1.2.1/define.h	/^#define CNG_NLSF_SMTH_Q16 /;"	d
CNG_exc_buf_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  CNG_exc_buf_Q14[ MAX_FRAME_LENGTH ];$/;"	m	struct:__anon35
CNG_smth_Gain_Q16	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  CNG_smth_Gain_Q16;$/;"	m	struct:__anon35
CNG_smth_NLSF_Q15	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                  CNG_smth_NLSF_Q15[ MAX_LPC_ORDER ];$/;"	m	struct:__anon35
CNG_synth_state	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  CNG_synth_state[ MAX_LPC_ORDER ];$/;"	m	struct:__anon35
CODEC_PRIORITY	src/hw/audio/codec2.c	/^#define CODEC_PRIORITY /;"	d	file:
CODEC_PRIORITY	src/hw/old-codec.c	/^#define CODEC_PRIORITY /;"	d	file:
CODEC_THREAD_STACK_SIZE	src/hw/audio/codec2.c	/^#define CODEC_THREAD_STACK_SIZE /;"	d	file:
CODEC_THREAD_STACK_SIZE	src/hw/old-codec.c	/^#define CODEC_THREAD_STACK_SIZE /;"	d	file:
CODE_CONDITIONALLY	src/hw/audio/opus-1.2.1/define.h	/^#define CODE_CONDITIONALLY /;"	d
CODE_INDEPENDENTLY	src/hw/audio/opus-1.2.1/define.h	/^#define CODE_INDEPENDENTLY /;"	d
CODE_INDEPENDENTLY_NO_LTP_SCALING	src/hw/audio/opus-1.2.1/define.h	/^#define CODE_INDEPENDENTLY_NO_LTP_SCALING /;"	d
COMBFILTER_MAXPERIOD	src/hw/audio/opus-1.2.1/celt.h	/^#define COMBFILTER_MAXPERIOD /;"	d
COMBFILTER_MINPERIOD	src/hw/audio/opus-1.2.1/celt.h	/^#define COMBFILTER_MINPERIOD /;"	d
CONNECTED_IDLE	src/module/ui.c	/^  CONNECTED_IDLE,$/;"	e	enum:screen_id	file:
CONNECTING_LTE	src/module/ui.c	/^  CONNECTING_LTE,$/;"	e	enum:screen_id	file:
CONNECTING_SERVER	src/module/ui.c	/^  CONNECTING_SERVER,$/;"	e	enum:screen_id	file:
CPU_SUPPORT_H	src/hw/audio/opus-1.2.1/cpu_support.h	/^#define CPU_SUPPORT_H$/;"	d
CSTRIDE_4KHZ	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^#define CSTRIDE_4KHZ /;"	d	file:
CSTRIDE_8KHZ	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^#define CSTRIDE_8KHZ /;"	d	file:
CWRS_H	src/hw/audio/opus-1.2.1/cwrs.h	/^#define CWRS_H$/;"	d
C_ADD	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define  C_ADD(/;"	d
C_ADDTO	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define C_ADDTO(/;"	d
C_FIXDIV	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#   define C_FIXDIV(/;"	d
C_MUL	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#   define C_MUL(/;"	d
C_MUL	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define C_MUL(/;"	d
C_MUL	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv4.h	/^#define C_MUL(/;"	d
C_MUL	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv4.h	/^#undef C_MUL$/;"	d
C_MUL	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv5e.h	/^#define C_MUL(/;"	d
C_MUL	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv5e.h	/^#undef C_MUL$/;"	d
C_MUL4	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define C_MUL4(/;"	d
C_MUL4	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv4.h	/^#define C_MUL4(/;"	d
C_MUL4	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv4.h	/^#undef C_MUL4$/;"	d
C_MUL4	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv5e.h	/^#define C_MUL4(/;"	d
C_MUL4	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv5e.h	/^#undef C_MUL4$/;"	d
C_MULBYSCALAR	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#   define C_MULBYSCALAR(/;"	d
C_MULC	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#   define C_MULC(/;"	d
C_MULC	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define C_MULC(/;"	d
C_MULC	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv4.h	/^#define C_MULC(/;"	d
C_MULC	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv4.h	/^#undef C_MULC$/;"	d
C_MULC	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv5e.h	/^#define C_MULC(/;"	d
C_MULC	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv5e.h	/^#undef C_MULC$/;"	d
C_SUB	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define  C_SUB(/;"	d
C_SUBFROM	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define C_SUBFROM(/;"	d
ChannelLayout	src/hw/audio/opus-1.2.1/opus_private.h	/^typedef struct ChannelLayout {$/;"	s
ChannelLayout	src/hw/audio/opus-1.2.1/opus_private.h	/^} ChannelLayout;$/;"	t	typeref:struct:ChannelLayout
Coefs	src/hw/audio/opus-1.2.1/resampler_structs.h	/^    const opus_int16 *Coefs;$/;"	m	struct:_silk_resampler_state_struct
Complexity	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     Complexity;                        \/* Complexity setting                                               *\/$/;"	m	struct:__anon33
D0	src/hw/audio/opus-1.2.1/mathops.h	/^#define D0 /;"	d
D1	src/hw/audio/opus-1.2.1/mathops.h	/^#define D1 /;"	d
D2	src/hw/audio/opus-1.2.1/mathops.h	/^#define D2 /;"	d
D3	src/hw/audio/opus-1.2.1/mathops.h	/^#define D3 /;"	d
DAP_AUDIO_EQ	src/hw/driver/sgtl5000.h	/^#define DAP_AUDIO_EQ /;"	d
DAP_AUDIO_EQ_BAND1	src/hw/driver/sgtl5000.h	/^#define DAP_AUDIO_EQ_BAND1	/;"	d
DAP_AUDIO_EQ_BAND2	src/hw/driver/sgtl5000.h	/^#define DAP_AUDIO_EQ_BAND2	/;"	d
DAP_AUDIO_EQ_BAND3	src/hw/driver/sgtl5000.h	/^#define DAP_AUDIO_EQ_BAND3	/;"	d
DAP_AUDIO_EQ_BASS_BAND0	src/hw/driver/sgtl5000.h	/^#define DAP_AUDIO_EQ_BASS_BAND0	/;"	d
DAP_AUDIO_EQ_EN_Disabled	src/hw/driver/sgtl5000.h	/^#define DAP_AUDIO_EQ_EN_Disabled /;"	d
DAP_AUDIO_EQ_EN_EnabledPEQ	src/hw/driver/sgtl5000.h	/^#define DAP_AUDIO_EQ_EN_EnabledPEQ /;"	d
DAP_AUDIO_EQ_EN_POS	src/hw/driver/sgtl5000.h	/^#define DAP_AUDIO_EQ_EN_POS /;"	d
DAP_AUDIO_EQ_TREBLE_BAND4	src/hw/driver/sgtl5000.h	/^#define DAP_AUDIO_EQ_TREBLE_BAND4	/;"	d
DAP_AVC_ATTACK	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_ATTACK /;"	d
DAP_AVC_ATTACK_RATE_16dB_s	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_ATTACK_RATE_16dB_s /;"	d
DAP_AVC_ATTACK_RATE_POS	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_ATTACK_RATE_POS /;"	d
DAP_AVC_CTRL	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_CTRL /;"	d
DAP_AVC_CTRL_EN_Disable	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_CTRL_EN_Disable /;"	d
DAP_AVC_CTRL_EN_Enable	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_CTRL_EN_Enable /;"	d
DAP_AVC_CTRL_EN_POS	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_CTRL_EN_POS /;"	d
DAP_AVC_DECAY	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_DECAY /;"	d
DAP_AVC_DECAY_RATE_2dB_s	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_DECAY_RATE_2dB_s /;"	d
DAP_AVC_DECAY_RATE_POS	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_DECAY_RATE_POS /;"	d
DAP_AVC_THRESHOLD	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_THRESHOLD /;"	d
DAP_AVC_THRESHOLD_THRESH_POS	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_THRESHOLD_THRESH_POS /;"	d
DAP_AVC_THRESHOLD_THRESH_neg12dB	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_THRESHOLD_THRESH_neg12dB /;"	d
DAP_AVC_THRESHOLD_THRESH_neg18dB	src/hw/driver/sgtl5000.h	/^#define DAP_AVC_THRESHOLD_THRESH_neg18dB /;"	d
DAP_BASS_ENHANCE	src/hw/driver/sgtl5000.h	/^#define DAP_BASS_ENHANCE	/;"	d
DAP_BASS_ENHANCE_CTRL	src/hw/driver/sgtl5000.h	/^#define DAP_BASS_ENHANCE_CTRL	/;"	d
DAP_COEF_WR_A1_LSB	src/hw/driver/sgtl5000.h	/^#define DAP_COEF_WR_A1_LSB	/;"	d
DAP_COEF_WR_A1_MSB	src/hw/driver/sgtl5000.h	/^#define DAP_COEF_WR_A1_MSB	/;"	d
DAP_COEF_WR_A2_LSB	src/hw/driver/sgtl5000.h	/^#define DAP_COEF_WR_A2_LSB	/;"	d
DAP_COEF_WR_A2_MSB	src/hw/driver/sgtl5000.h	/^#define DAP_COEF_WR_A2_MSB	/;"	d
DAP_COEF_WR_B0_LSB	src/hw/driver/sgtl5000.h	/^#define DAP_COEF_WR_B0_LSB	/;"	d
DAP_COEF_WR_B0_MSB	src/hw/driver/sgtl5000.h	/^#define DAP_COEF_WR_B0_MSB	/;"	d
DAP_COEF_WR_B1_LSB	src/hw/driver/sgtl5000.h	/^#define DAP_COEF_WR_B1_LSB	/;"	d
DAP_COEF_WR_B1_MSB	src/hw/driver/sgtl5000.h	/^#define DAP_COEF_WR_B1_MSB	/;"	d
DAP_COEF_WR_B2_LSB	src/hw/driver/sgtl5000.h	/^#define DAP_COEF_WR_B2_LSB	/;"	d
DAP_COEF_WR_B2_MSB	src/hw/driver/sgtl5000.h	/^#define DAP_COEF_WR_B2_MSB	/;"	d
DAP_CONTROL	src/hw/driver/sgtl5000.h	/^#define DAP_CONTROL /;"	d
DAP_FILTER_COEF_ACCESS	src/hw/driver/sgtl5000.h	/^#define DAP_FILTER_COEF_ACCESS	/;"	d
DAP_MAIN_CHAN	src/hw/driver/sgtl5000.h	/^#define DAP_MAIN_CHAN	/;"	d
DAP_MIX_CHAN	src/hw/driver/sgtl5000.h	/^#define DAP_MIX_CHAN	/;"	d
DAP_PEQ	src/hw/driver/sgtl5000.h	/^#define DAP_PEQ /;"	d
DAP_PEQ_EN_2Filters	src/hw/driver/sgtl5000.h	/^#define DAP_PEQ_EN_2Filters /;"	d
DAP_PEQ_EN_7Filters	src/hw/driver/sgtl5000.h	/^#define DAP_PEQ_EN_7Filters /;"	d
DAP_PEQ_EN_Disabled	src/hw/driver/sgtl5000.h	/^#define DAP_PEQ_EN_Disabled /;"	d
DAP_PEQ_EN_POS	src/hw/driver/sgtl5000.h	/^#define DAP_PEQ_EN_POS /;"	d
DAP_SGTL_SURROUND	src/hw/driver/sgtl5000.h	/^#define DAP_SGTL_SURROUND	/;"	d
DATA_QUEUE_ALIGNMENT	src/module/modem.c	/^#define DATA_QUEUE_ALIGNMENT /;"	d	file:
DATA_QUEUE_ALIGNMENT	src/module/motorola.c	/^#define DATA_QUEUE_ALIGNMENT /;"	d	file:
DATA_QUEUE_ALIGNMENT	src/module/radio.c	/^#define DATA_QUEUE_ALIGNMENT /;"	d	file:
DATA_QUEUE_ENTRY_COUNT	src/module/modem.c	/^#define DATA_QUEUE_ENTRY_COUNT /;"	d	file:
DATA_QUEUE_ENTRY_COUNT	src/module/motorola.c	/^#define DATA_QUEUE_ENTRY_COUNT /;"	d	file:
DATA_QUEUE_ENTRY_COUNT	src/module/radio.c	/^#define DATA_QUEUE_ENTRY_COUNT /;"	d	file:
DB_SHIFT	src/hw/audio/opus-1.2.1/arch.h	/^#define DB_SHIFT /;"	d
DEBUG_STORE_DATA	src/hw/audio/opus-1.2.1/debug.h	/^#define DEBUG_STORE_DATA(/;"	d
DECISION_DELAY	src/hw/audio/opus-1.2.1/define.h	/^#define DECISION_DELAY /;"	d
DECODER_NUM_CHANNELS	src/hw/audio/opus-1.2.1/define.h	/^#define DECODER_NUM_CHANNELS /;"	d
DECODER_RESET_START	src/hw/audio/opus-1.2.1/celt_decoder.c	/^#define DECODER_RESET_START /;"	d	file:
DECODE_BUFFER_SIZE	src/hw/audio/opus-1.2.1/celt_decoder.c	/^#define DECODE_BUFFER_SIZE /;"	d	file:
DEF_LOGN400	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define DEF_LOGN400$/;"	d
DEF_LOGN400	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define DEF_LOGN400$/;"	d
DEF_PULSE_CACHE50	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define DEF_PULSE_CACHE50$/;"	d
DEF_PULSE_CACHE50	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define DEF_PULSE_CACHE50$/;"	d
DEF_WINDOW120	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define DEF_WINDOW120$/;"	d
DEF_WINDOW120	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define DEF_WINDOW120$/;"	d
DETECT_SIZE	src/hw/audio/opus-1.2.1/analysis.h	/^#define DETECT_SIZE /;"	d
DIV32	src/hw/audio/opus-1.2.1/arch.h	/^#define DIV32(/;"	d
DIV32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define DIV32(/;"	d
DIV32	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define DIV32(/;"	d
DIV32_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int DIV32_(opus_int64 a, opus_int64 b, char *file, int line)$/;"	f
DIV32_16	src/hw/audio/opus-1.2.1/arch.h	/^#define DIV32_16(/;"	d
DIV32_16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define DIV32_16(/;"	d
DIV32_16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define DIV32_16(/;"	d
DIV32_16_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int DIV32_16_(opus_int64 a, opus_int64 b, char *file, int line)$/;"	f
DIVSCALAR	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#   define DIVSCALAR(/;"	d
DRV_SGTL5000_EVT_I2S_RX_BUF_RECEIVED	src/hw/audio/codec-i2s.h	/^    DRV_SGTL5000_EVT_I2S_RX_BUF_RECEIVED,   \/* I2S RX buffer received *\/$/;"	e	enum:__anon3
DRV_SGTL5000_EVT_I2S_TX_BUF_REQ	src/hw/audio/codec-i2s.h	/^    DRV_SGTL5000_EVT_I2S_TX_BUF_REQ,        \/* Request for I2S TX buffer *\/$/;"	e	enum:__anon3
DTX_ACTIVITY_THRESHOLD	src/hw/audio/opus-1.2.1/define.h	/^#define DTX_ACTIVITY_THRESHOLD /;"	d
D_COMP_MAX	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^#define D_COMP_MAX /;"	d	file:
D_COMP_MIN	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^#define D_COMP_MIN /;"	d	file:
D_COMP_STRIDE	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^#define D_COMP_STRIDE /;"	d	file:
DecControl	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   silk_DecControlStruct DecControl;$/;"	m	struct:OpusDecoder	file:
Diff_Q14	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 Diff_Q14;$/;"	m	struct:__anon19	file:
Diff_Q14	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 Diff_Q14;$/;"	m	struct:__anon20	file:
DroppedPackets	src/module/motorola.c	/^const int DroppedPackets;$/;"	v
E	src/hw/audio/opus-1.2.1/analysis.h	/^   float E[NB_FRAMES][NB_TBANDS];$/;"	m	struct:__anon41
EC_CLZ	src/hw/audio/opus-1.2.1/ecintrin.h	/^#  define EC_CLZ(/;"	d
EC_CLZ	src/hw/audio/opus-1.2.1/ecintrin.h	/^# define EC_CLZ(/;"	d
EC_CLZ	src/hw/audio/opus-1.2.1/ecintrin.h	/^#define EC_CLZ(/;"	d
EC_CLZ0	src/hw/audio/opus-1.2.1/ecintrin.h	/^#  define EC_CLZ0 /;"	d
EC_CLZ0	src/hw/audio/opus-1.2.1/ecintrin.h	/^# define EC_CLZ0 /;"	d
EC_CLZ0	src/hw/audio/opus-1.2.1/ecintrin.h	/^#define EC_CLZ0 /;"	d
EC_CODE_BITS	src/hw/audio/opus-1.2.1/mfrngcod.h	/^# define EC_CODE_BITS /;"	d
EC_CODE_BOT	src/hw/audio/opus-1.2.1/mfrngcod.h	/^# define EC_CODE_BOT /;"	d
EC_CODE_EXTRA	src/hw/audio/opus-1.2.1/mfrngcod.h	/^# define EC_CODE_EXTRA /;"	d
EC_CODE_SHIFT	src/hw/audio/opus-1.2.1/mfrngcod.h	/^# define EC_CODE_SHIFT /;"	d
EC_CODE_TOP	src/hw/audio/opus-1.2.1/mfrngcod.h	/^# define EC_CODE_TOP /;"	d
EC_ILOG	src/hw/audio/opus-1.2.1/ecintrin.h	/^# define EC_ILOG(/;"	d
EC_MINI	src/hw/audio/opus-1.2.1/ecintrin.h	/^# define EC_MINI(/;"	d
EC_SYM_BITS	src/hw/audio/opus-1.2.1/mfrngcod.h	/^# define EC_SYM_BITS /;"	d
EC_SYM_MAX	src/hw/audio/opus-1.2.1/mfrngcod.h	/^# define EC_SYM_MAX /;"	d
EC_UINT_BITS	src/hw/audio/opus-1.2.1/entcode.h	/^# define EC_UINT_BITS /;"	d
EC_WINDOW_SIZE	src/hw/audio/opus-1.2.1/entcode.h	/^# define EC_WINDOW_SIZE /;"	d
ENCODER_NUM_CHANNELS	src/hw/audio/opus-1.2.1/define.h	/^#define ENCODER_NUM_CHANNELS /;"	d
ENCODER_RESET_START	src/hw/audio/opus-1.2.1/celt_encoder.c	/^#define ENCODER_RESET_START /;"	d	file:
ENERGY_VARIATION_THRESHOLD_QNT_OFFSET	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define ENERGY_VARIATION_THRESHOLD_QNT_OFFSET /;"	d
EPSILON	src/hw/audio/opus-1.2.1/arch.h	/^#define EPSILON /;"	d
EXTEND32	src/hw/audio/opus-1.2.1/arch.h	/^#define EXTEND32(/;"	d
EXTEND32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define EXTEND32(/;"	d
EXTEND32	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define EXTEND32(/;"	d
EXTEND32_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int EXTEND32_(int x, char *file, int line)$/;"	f
EXTRACT16	src/hw/audio/opus-1.2.1/arch.h	/^#define EXTRACT16(/;"	d
EXTRACT16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define EXTRACT16(/;"	d
EXTRACT16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define EXTRACT16(/;"	d
EXTRACT16_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short EXTRACT16_(int x, char *file, int line)$/;"	f
E_count	src/hw/audio/opus-1.2.1/analysis.h	/^   int E_count;$/;"	m	struct:__anon41
Etracker	src/hw/audio/opus-1.2.1/analysis.h	/^   float Etracker;$/;"	m	struct:__anon41
FFT_BITREV120	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define FFT_BITREV120$/;"	d
FFT_BITREV120	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define FFT_BITREV120$/;"	d
FFT_BITREV240	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define FFT_BITREV240$/;"	d
FFT_BITREV240	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define FFT_BITREV240$/;"	d
FFT_BITREV480	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define FFT_BITREV480$/;"	d
FFT_BITREV480	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define FFT_BITREV480$/;"	d
FFT_BITREV60	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define FFT_BITREV60$/;"	d
FFT_BITREV60	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define FFT_BITREV60$/;"	d
FFT_STATE48000_960_0	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define FFT_STATE48000_960_0$/;"	d
FFT_STATE48000_960_0	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define FFT_STATE48000_960_0$/;"	d
FFT_STATE48000_960_1	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define FFT_STATE48000_960_1$/;"	d
FFT_STATE48000_960_1	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define FFT_STATE48000_960_1$/;"	d
FFT_STATE48000_960_2	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define FFT_STATE48000_960_2$/;"	d
FFT_STATE48000_960_2	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define FFT_STATE48000_960_2$/;"	d
FFT_STATE48000_960_3	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define FFT_STATE48000_960_3$/;"	d
FFT_STATE48000_960_3	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define FFT_STATE48000_960_3$/;"	d
FFT_TWIDDLES48000_960	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define FFT_TWIDDLES48000_960$/;"	d
FFT_TWIDDLES48000_960	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define FFT_TWIDDLES48000_960$/;"	d
FILTER_BANDPASS	src/hw/driver/sgtl5000.h	/^#define FILTER_BANDPASS /;"	d
FILTER_HIPASS	src/hw/driver/sgtl5000.h	/^#define FILTER_HIPASS /;"	d
FILTER_HISHELF	src/hw/driver/sgtl5000.h	/^#define FILTER_HISHELF /;"	d
FILTER_LOPASS	src/hw/driver/sgtl5000.h	/^#define FILTER_LOPASS /;"	d
FILTER_LOSHELF	src/hw/driver/sgtl5000.h	/^#define FILTER_LOSHELF /;"	d
FILTER_NOTCH	src/hw/driver/sgtl5000.h	/^#define FILTER_NOTCH /;"	d
FILTER_PARAEQ	src/hw/driver/sgtl5000.h	/^#define FILTER_PARAEQ /;"	d
FIND_LPC_COND_FAC	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define FIND_LPC_COND_FAC /;"	d
FIND_PITCH_BANDWIDTH_EXPANSION	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define FIND_PITCH_BANDWIDTH_EXPANSION /;"	d
FIND_PITCH_LPC_WIN_MAX	src/hw/audio/opus-1.2.1/define.h	/^#define FIND_PITCH_LPC_WIN_MAX /;"	d
FIND_PITCH_LPC_WIN_MS	src/hw/audio/opus-1.2.1/define.h	/^#define FIND_PITCH_LPC_WIN_MS /;"	d
FIND_PITCH_LPC_WIN_MS_2_SF	src/hw/audio/opus-1.2.1/define.h	/^#define FIND_PITCH_LPC_WIN_MS_2_SF /;"	d
FIND_PITCH_WHITE_NOISE_FRACTION	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define FIND_PITCH_WHITE_NOISE_FRACTION /;"	d
FINE_OFFSET	src/hw/audio/opus-1.2.1/rate.h	/^#define FINE_OFFSET /;"	d
FIR_Fracs	src/hw/audio/opus-1.2.1/resampler_structs.h	/^    opus_int         FIR_Fracs;$/;"	m	struct:_silk_resampler_state_struct
FIR_Order	src/hw/audio/opus-1.2.1/resampler_structs.h	/^    opus_int         FIR_Order;$/;"	m	struct:_silk_resampler_state_struct
FIXED_ARMv4_H	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^#define FIXED_ARMv4_H$/;"	d
FIXED_ARMv5E_H	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#define FIXED_ARMv5E_H$/;"	d
FIXED_DEBUG_H	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define FIXED_DEBUG_H$/;"	d
FIXED_GENERIC_H	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define FIXED_GENERIC_H$/;"	d
FLAG_DECODE_LBRR	src/hw/audio/opus-1.2.1/control.h	/^#define FLAG_DECODE_LBRR /;"	d
FLAG_DECODE_NORMAL	src/hw/audio/opus-1.2.1/control.h	/^#define FLAG_DECODE_NORMAL /;"	d
FLAG_PACKET_LOST	src/hw/audio/opus-1.2.1/control.h	/^#define FLAG_PACKET_LOST /;"	d
FLOAT2INT16	src/hw/audio/opus-1.2.1/float_cast.h	/^static OPUS_INLINE opus_int16 FLOAT2INT16(float x)$/;"	f
FLOAT_CAST_H	src/hw/audio/opus-1.2.1/float_cast.h	/^#define FLOAT_CAST_H$/;"	d
FRAC_MUL16	src/hw/audio/opus-1.2.1/mathops.h	/^#define FRAC_MUL16(/;"	d
FRAME_SIZE	src/module/radio.c	/^#define FRAME_SIZE /;"	d	file:
Fs	src/hw/audio/opus-1.2.1/analysis.h	/^   opus_int32 Fs;$/;"	m	struct:__anon41
Fs	src/hw/audio/opus-1.2.1/modes.h	/^   opus_int32 Fs;$/;"	m	struct:OpusCustomMode
Fs	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   opus_int32   Fs;          \/** Sampling rate (at the API level) *\/$/;"	m	struct:OpusDecoder	file:
Fs	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    opus_int32   Fs;$/;"	m	struct:OpusEncoder	file:
Fs_in_kHz	src/hw/audio/opus-1.2.1/resampler_structs.h	/^    opus_int         Fs_in_kHz;$/;"	m	struct:_silk_resampler_state_struct
Fs_out_kHz	src/hw/audio/opus-1.2.1/resampler_structs.h	/^    opus_int         Fs_out_kHz;$/;"	m	struct:_silk_resampler_state_struct
GLOBAL_STACK_SIZE	src/hw/audio/opus-1.2.1/arch.h	/^#define GLOBAL_STACK_SIZE /;"	d
GPIOTE_CHANNEL	src/hw/audio/codec-i2s.c	/^#define GPIOTE_CHANNEL /;"	d	file:
GainsIndices	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    GainsIndices[ MAX_NB_SUBFR ];$/;"	m	struct:__anon32
GainsUnq_Q16	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int32                  GainsUnq_Q16[ MAX_NB_SUBFR ];$/;"	m	struct:__anon14
Gains_Q16	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  Gains_Q16[ MAX_NB_SUBFR ];$/;"	m	struct:__anon37
Gains_Q16	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int32                  Gains_Q16[ MAX_NB_SUBFR ];$/;"	m	struct:__anon14
GetHighResolutionTime	src/hw/audio/opus-1.2.1/debug.c	/^unsigned long GetHighResolutionTime(void) \/* O  time in usec*\/$/;"	f
HALF16	src/hw/audio/opus-1.2.1/arch.h	/^#define HALF16(/;"	d
HALF16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define HALF16(/;"	d
HALF16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define HALF16(/;"	d
HALF32	src/hw/audio/opus-1.2.1/arch.h	/^#define HALF32(/;"	d
HALF32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define HALF32(/;"	d
HALF32	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define HALF32(/;"	d
HALF_OF	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#  define HALF_OF(/;"	d
HARMONIC_SHAPING	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define HARMONIC_SHAPING /;"	d
HARM_ATT_Q15	src/hw/audio/opus-1.2.1/PLC.c	/^static const opus_int16 HARM_ATT_Q15[NB_ATT]              = { 32440, 31130 }; \/* 0.99, 0.95 *\/$/;"	v	file:
HARM_HP_NOISE_COEF	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define HARM_HP_NOISE_COEF /;"	d
HARM_SHAPE_FIR_TAPS	src/hw/audio/opus-1.2.1/define.h	/^#define HARM_SHAPE_FIR_TAPS /;"	d
HARM_SNR_INCR_dB	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define HARM_SNR_INCR_dB /;"	d
HIGH_RATE_INPUT_TILT	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define HIGH_RATE_INPUT_TILT /;"	d
HIGH_RATE_OR_LOW_QUALITY_HARMONIC_SHAPING	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define HIGH_RATE_OR_LOW_QUALITY_HARMONIC_SHAPING /;"	d
HP_NOISE_COEF	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define HP_NOISE_COEF /;"	d
HPstate	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                  HPstate;                        \/* State of differentiator in the lowest band                           *\/$/;"	m	struct:__anon27
HW_EVENT_ERROR	src/event/hw_event.h	/^  HW_EVENT_ERROR$/;"	e	enum:hw_event_type
HW_EVENT_I2S_DONE_PLAYING	src/event/hw_event.h	/^  HW_EVENT_I2S_DONE_PLAYING,$/;"	e	enum:hw_event_type
HW_EVENT_I2S_PLAYING	src/event/hw_event.h	/^  HW_EVENT_I2S_PLAYING,$/;"	e	enum:hw_event_type
HW_EVENT_I2S_TRANSMIT_READY	src/event/hw_event.h	/^  HW_EVENT_I2S_TRANSMIT_READY,$/;"	e	enum:hw_event_type
HW_EVENT_PTT_DOWN	src/event/hw_event.h	/^  HW_EVENT_PTT_DOWN,$/;"	e	enum:hw_event_type
HW_EVENT_PTT_UP	src/event/hw_event.h	/^  HW_EVENT_PTT_UP,$/;"	e	enum:hw_event_type
HW_EVENT_VOLUME_POT_CHANGE	src/event/hw_event.h	/^  HW_EVENT_VOLUME_POT_CHANGE,$/;"	e	enum:hw_event_type
HarmBoost_smth_Q16	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int32                  HarmBoost_smth_Q16;$/;"	m	struct:__anon12
HarmShapeGain_Q14	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    HarmShapeGain_Q14[ MAX_NB_SUBFR ];$/;"	m	struct:__anon14
HarmShapeGain_smth_Q16	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int32                  HarmShapeGain_smth_Q16;$/;"	m	struct:__anon12
I2C_DEV_NAME	src/hw/audio/codec-i2s.c	/^#define I2C_DEV_NAME /;"	d	file:
I2S_PLAY_BUF_COUNT	src/hw/audio/codec2.c	/^#define I2S_PLAY_BUF_COUNT /;"	d	file:
IMAX	src/hw/audio/opus-1.2.1/arch.h	/^#define IMAX(/;"	d
IMIN	src/hw/audio/opus-1.2.1/arch.h	/^#define IMIN(/;"	d
IMUL32	src/hw/audio/opus-1.2.1/arch.h	/^#define IMUL32(/;"	d
INPUT_DATA_SIZE	src/hw/audio/audio.c	/^#define INPUT_DATA_SIZE /;"	d	file:
INPUT_STATE_IDLE	src/hw/uart.c	/^  INPUT_STATE_IDLE = 0,$/;"	e	enum:input_state	file:
INPUT_STATE_PROCESSING	src/hw/uart.c	/^  INPUT_STATE_PROCESSING$/;"	e	enum:input_state	file:
INPUT_STATE_WAITING_FOR_NEWLINE	src/hw/uart.c	/^  INPUT_STATE_WAITING_FOR_NEWLINE,$/;"	e	enum:input_state	file:
INPUT_TILT	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define INPUT_TILT /;"	d
INV_SCALE_Q16	src/hw/audio/opus-1.2.1/gain_quant.c	/^#define INV_SCALE_Q16 /;"	d	file:
IS_EVENT	src/module/common.h	/^#define IS_EVENT(/;"	d
In_HP_State	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                   In_HP_State[ 2 ];                  \/* High pass filter state                                           *\/$/;"	m	struct:__anon33
In_LP_State	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                   In_LP_State[ 2 ];           \/* Low pass filter state *\/$/;"	m	struct:__anon28
InitializedFlag	src/hw/audio/codec2.c	/^bool InitializedFlag = 0;$/;"	v
InitializedFlag	src/hw/audio/codec2_pdm_mic.c	/^bool InitializedFlag = 0;$/;"	v
InitializedFlag	src/hw/old-codec.c	/^bool InitializedFlag = 0;$/;"	v
KF_SUFFIX	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#   define KF_SUFFIX /;"	d
KISS_FFT_ARMv4_H	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv4.h	/^#define KISS_FFT_ARMv4_H$/;"	d
KISS_FFT_ARMv5E_H	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv5e.h	/^#define KISS_FFT_ARMv5E_H$/;"	d
KISS_FFT_COS	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#  define KISS_FFT_COS(/;"	d
KISS_FFT_GUTS_H	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define KISS_FFT_GUTS_H$/;"	d
KISS_FFT_H	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#define KISS_FFT_H$/;"	d
KISS_FFT_MALLOC	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#define KISS_FFT_MALLOC /;"	d
KISS_FFT_MALLOC	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#define KISS_FFT_MALLOC(/;"	d
KISS_FFT_SIN	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#  define KISS_FFT_SIN(/;"	d
L1	src/hw/audio/opus-1.2.1/mathops.c	/^#define L1 /;"	d	file:
L1	src/hw/audio/opus-1.2.1/mathops.c	/^#undef L1$/;"	d	file:
L2	src/hw/audio/opus-1.2.1/mathops.c	/^#define L2 /;"	d	file:
L2	src/hw/audio/opus-1.2.1/mathops.c	/^#undef L2$/;"	d	file:
L3	src/hw/audio/opus-1.2.1/mathops.c	/^#define L3 /;"	d	file:
L3	src/hw/audio/opus-1.2.1/mathops.c	/^#undef L3$/;"	d	file:
L4	src/hw/audio/opus-1.2.1/mathops.c	/^#define L4 /;"	d	file:
L4	src/hw/audio/opus-1.2.1/mathops.c	/^#undef L4$/;"	d	file:
LAMBDA_CODING_QUALITY	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define LAMBDA_CODING_QUALITY /;"	d
LAMBDA_DELAYED_DECISIONS	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define LAMBDA_DELAYED_DECISIONS /;"	d
LAMBDA_INPUT_QUALITY	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define LAMBDA_INPUT_QUALITY /;"	d
LAMBDA_OFFSET	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define LAMBDA_OFFSET /;"	d
LAMBDA_QUANT_OFFSET	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define LAMBDA_QUANT_OFFSET /;"	d
LAMBDA_SPEECH_ACT	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define LAMBDA_SPEECH_ACT /;"	d
LAPLACE_LOG_MINP	src/hw/audio/opus-1.2.1/laplace.c	/^#define LAPLACE_LOG_MINP /;"	d	file:
LAPLACE_MINP	src/hw/audio/opus-1.2.1/laplace.c	/^#define LAPLACE_MINP /;"	d	file:
LAPLACE_NMIN	src/hw/audio/opus-1.2.1/laplace.c	/^#define LAPLACE_NMIN /;"	d	file:
LA_PITCH_MAX	src/hw/audio/opus-1.2.1/define.h	/^#define LA_PITCH_MAX /;"	d
LA_PITCH_MS	src/hw/audio/opus-1.2.1/define.h	/^#define LA_PITCH_MS /;"	d
LA_SHAPE_MAX	src/hw/audio/opus-1.2.1/define.h	/^#define LA_SHAPE_MAX /;"	d
LA_SHAPE_MS	src/hw/audio/opus-1.2.1/define.h	/^#define LA_SHAPE_MS /;"	d
LBLOCKSIZE	src/hw/audio/libc_opus/newlib_libc_string_memset.c	/^#define LBLOCKSIZE /;"	d	file:
LBRR_GainIncreases	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     LBRR_GainIncreases;                \/* Gains increment for coding LBRR frames                           *\/$/;"	m	struct:__anon33
LBRR_MB_MIN_RATE_BPS	src/hw/audio/opus-1.2.1/define.h	/^#define LBRR_MB_MIN_RATE_BPS /;"	d
LBRR_NB_MIN_RATE_BPS	src/hw/audio/opus-1.2.1/define.h	/^#define LBRR_NB_MIN_RATE_BPS /;"	d
LBRR_SPEECH_ACTIVITY_THRES	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define LBRR_SPEECH_ACTIVITY_THRES /;"	d
LBRR_WB_MIN_RATE_BPS	src/hw/audio/opus-1.2.1/define.h	/^#define LBRR_WB_MIN_RATE_BPS /;"	d
LBRR_coded	src/hw/audio/opus-1.2.1/control.h	/^    opus_int LBRR_coded;$/;"	m	struct:__anon8
LBRR_enabled	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     LBRR_enabled;                      \/* Depends on useInBandFRC, bitrate and packet loss rate            *\/$/;"	m	struct:__anon33
LBRR_flag	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    LBRR_flag;$/;"	m	struct:__anon36
LBRR_flag	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    LBRR_flag;$/;"	m	struct:__anon33
LBRR_flags	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     LBRR_flags[ MAX_FRAMES_PER_PACKET ];$/;"	m	struct:__anon33
LBRR_flags	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    LBRR_flags[ MAX_FRAMES_PER_PACKET ];$/;"	m	struct:__anon36
LBRRprevLastGainIndex	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    LBRRprevLastGainIndex;$/;"	m	struct:__anon33
LDRD_CONS	src/hw/audio/opus-1.2.1/arm/kiss_fft_armv5e.h	/^#define LDRD_CONS /;"	d
LEAKAGE_OFFSET	src/hw/audio/opus-1.2.1/analysis.c	/^#define LEAKAGE_OFFSET /;"	d	file:
LEAKAGE_SLOPE	src/hw/audio/opus-1.2.1/analysis.c	/^#define LEAKAGE_SLOPE /;"	d	file:
LEAK_BANDS	src/hw/audio/opus-1.2.1/celt.h	/^#define LEAK_BANDS /;"	d
LF_AR_Q14	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 LF_AR_Q14;$/;"	m	struct:__anon19	file:
LF_AR_Q14	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 LF_AR_Q14;$/;"	m	struct:__anon20	file:
LF_shp_Q14	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int32                  LF_shp_Q14[        MAX_NB_SUBFR ];      \/* Packs two int16 coefficients per int32 value         *\/$/;"	m	struct:__anon14
LISTENING	src/module/ui.c	/^  LISTENING,$/;"	e	enum:screen_id	file:
LITTLEBLOCKSIZE	src/hw/audio/libc_opus/newlib_libc_string_memmove.c	/^#define LITTLEBLOCKSIZE /;"	d	file:
LITTLEBLOCKSIZE	src/hw/audio/libc_opus/newlib_libc_string_mempcpy.c	/^#define LITTLEBLOCKSIZE /;"	d	file:
LOG2_FRAC_TABLE	src/hw/audio/opus-1.2.1/rate.c	/^static const unsigned char LOG2_FRAC_TABLE[24]={$/;"	v	file:
LOG2_INV_LPC_GAIN_HIGH_THRES	src/hw/audio/opus-1.2.1/PLC.h	/^#define LOG2_INV_LPC_GAIN_HIGH_THRES /;"	d
LOG2_INV_LPC_GAIN_LOW_THRES	src/hw/audio/opus-1.2.1/PLC.h	/^#define LOG2_INV_LPC_GAIN_LOW_THRES /;"	d
LOG2_SHELL_CODEC_FRAME_LENGTH	src/hw/audio/opus-1.2.1/define.h	/^#define LOG2_SHELL_CODEC_FRAME_LENGTH /;"	d
LOG_LEVEL	src/main.c	/^#define LOG_LEVEL /;"	d	file:
LOG_MAX_PSEUDO	src/hw/audio/opus-1.2.1/rate.h	/^#define LOG_MAX_PSEUDO /;"	d
LOW_FREQ_SHAPING	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define LOW_FREQ_SHAPING /;"	d
LOW_QUALITY_LOW_FREQ_SHAPING_DECR	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define LOW_QUALITY_LOW_FREQ_SHAPING_DECR /;"	d
LPC_ORDER	src/hw/audio/opus-1.2.1/celt_lpc.h	/^#define LPC_ORDER /;"	d
LPC_exc_Q14	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 LPC_exc_Q14;$/;"	m	struct:__anon20	file:
LPC_inverse_pred_gain_QA_c	src/hw/audio/opus-1.2.1/LPC_inv_pred_gain.c	/^static opus_int32 LPC_inverse_pred_gain_QA_c(               \/* O   Returns inverse prediction gain in energy domain, Q30    *\/$/;"	f	file:
LPC_order	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    LPC_order;                          \/* LPC order                                                        *\/$/;"	m	struct:__anon36
LSF_COS_TAB_SZ_FIX	src/hw/audio/opus-1.2.1/define.h	/^#define LSF_COS_TAB_SZ_FIX /;"	d
LTPCoef_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                  LTPCoef_Q14[ LTP_ORDER * MAX_NB_SUBFR ];$/;"	m	struct:__anon37
LTPCoef_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                  LTPCoef_Q14[ LTP_ORDER ];           \/* LTP coeficients to use for voiced concealment                    *\/$/;"	m	struct:__anon34
LTPCoef_Q14	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int16                  LTPCoef_Q14[ LTP_ORDER * MAX_NB_SUBFR ];$/;"	m	struct:__anon14
LTPCorr_Q15	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    LTPCorr_Q15;                            \/* Normalized correlation from pitch lag estimator      *\/$/;"	m	struct:__anon13
LTPIndex	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    LTPIndex[ MAX_NB_SUBFR ];$/;"	m	struct:__anon32
LTP_BUF_LENGTH	src/hw/audio/opus-1.2.1/define.h	/^#define LTP_BUF_LENGTH /;"	d
LTP_CORR_INV_MAX	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define LTP_CORR_INV_MAX /;"	d
LTP_MASK	src/hw/audio/opus-1.2.1/define.h	/^#define LTP_MASK /;"	d
LTP_MEM_LENGTH_MS	src/hw/audio/opus-1.2.1/define.h	/^#define LTP_MEM_LENGTH_MS /;"	d
LTP_ORDER	src/hw/audio/opus-1.2.1/define.h	/^#define LTP_ORDER /;"	d
LTP_scaleIndex	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    LTP_scaleIndex;$/;"	m	struct:__anon32
LTP_scale_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    LTP_scale_Q14;$/;"	m	struct:__anon37
LTP_scale_Q14	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    LTP_scale_Q14;$/;"	m	struct:__anon14
LTPredCodGain_Q7	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    LTPredCodGain_Q7;$/;"	m	struct:__anon14
LVGL_DISPLAY_DEV_NAME	src/module/ui.c	/^#define LVGL_DISPLAY_DEV_NAME /;"	d	file:
Lambda_Q10	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    Lambda_Q10;$/;"	m	struct:__anon14
LastGainIndex	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                   LastGainIndex;                      \/* Previous gain index                                              *\/$/;"	m	struct:__anon36
LastGainIndex	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int8                   LastGainIndex;$/;"	m	struct:__anon12
M1	src/hw/audio/opus-1.2.1/mathops.h	/^#define M1 /;"	d
M1	src/hw/audio/opus-1.2.1/mathops.h	/^#undef M1$/;"	d
M2	src/hw/audio/opus-1.2.1/mathops.h	/^#define M2 /;"	d
M2	src/hw/audio/opus-1.2.1/mathops.h	/^#undef M2$/;"	d
M3	src/hw/audio/opus-1.2.1/mathops.h	/^#define M3 /;"	d
M3	src/hw/audio/opus-1.2.1/mathops.h	/^#undef M3$/;"	d
M4	src/hw/audio/opus-1.2.1/mathops.h	/^#define M4 /;"	d
M4	src/hw/audio/opus-1.2.1/mathops.h	/^#undef M4$/;"	d
MAC16_16	src/hw/audio/opus-1.2.1/arch.h	/^#define MAC16_16(/;"	d
MAC16_16	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#define MAC16_16(/;"	d
MAC16_16	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#undef MAC16_16$/;"	d
MAC16_16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define MAC16_16(/;"	d
MAC16_16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MAC16_16(/;"	d
MAC16_16_armv5e	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^static OPUS_INLINE opus_val32 MAC16_16_armv5e(opus_val32 c, opus_val16 a,$/;"	f
MAC16_32_Q15	src/hw/audio/opus-1.2.1/arch.h	/^#define MAC16_32_Q15(/;"	d
MAC16_32_Q15	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^#define MAC16_32_Q15(/;"	d
MAC16_32_Q15	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^#undef MAC16_32_Q15$/;"	d
MAC16_32_Q15	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#define MAC16_32_Q15(/;"	d
MAC16_32_Q15	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#undef MAC16_32_Q15$/;"	d
MAC16_32_Q15	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define MAC16_32_Q15(/;"	d
MAC16_32_Q15	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MAC16_32_Q15(/;"	d
MAC16_32_Q15_armv5e	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^static OPUS_INLINE opus_val32 MAC16_32_Q15_armv5e(opus_val32 c, opus_val16 a,$/;"	f
MAC16_32_Q16	src/hw/audio/opus-1.2.1/arch.h	/^#define MAC16_32_Q16(/;"	d
MAC16_32_Q16	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^#define MAC16_32_Q16(/;"	d
MAC16_32_Q16	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^#undef MAC16_32_Q16$/;"	d
MAC16_32_Q16	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#define MAC16_32_Q16(/;"	d
MAC16_32_Q16	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#undef MAC16_32_Q16$/;"	d
MAC16_32_Q16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define MAC16_32_Q16(/;"	d
MAC16_32_Q16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MAC16_32_Q16(/;"	d
MAC16_32_Q16_armv5e	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^static OPUS_INLINE opus_val32 MAC16_32_Q16_armv5e(opus_val32 c, opus_val16 a,$/;"	f
MACRO_DEBUG_H	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define MACRO_DEBUG_H$/;"	d
MAPPING_TYPE_AMBISONICS	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^  MAPPING_TYPE_AMBISONICS$/;"	e	enum:__anon17	file:
MAPPING_TYPE_NONE	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^  MAPPING_TYPE_NONE,$/;"	e	enum:__anon17	file:
MAPPING_TYPE_SURROUND	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^  MAPPING_TYPE_SURROUND$/;"	e	enum:__anon17	file:
MATHOPS_H	src/hw/audio/opus-1.2.1/mathops.h	/^#define MATHOPS_H$/;"	d
MAX16	src/hw/audio/opus-1.2.1/arch.h	/^#define MAX16(/;"	d
MAX32	src/hw/audio/opus-1.2.1/arch.h	/^#define MAX32(/;"	d
MAXFACTORS	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#define MAXFACTORS /;"	d
MAX_API_FS_KHZ	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_API_FS_KHZ /;"	d
MAX_BANDWIDTH_SWITCH_DELAY_MS	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define MAX_BANDWIDTH_SWITCH_DELAY_MS /;"	d
MAX_CONSECUTIVE_DTX	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_CONSECUTIVE_DTX /;"	d
MAX_DELTA_GAIN_QUANT	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_DELTA_GAIN_QUANT /;"	d
MAX_DEL_DEC_STATES	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_DEL_DEC_STATES /;"	d
MAX_ENCODER_BUFFER	src/hw/audio/opus-1.2.1/opus_encoder.c	/^#define MAX_ENCODER_BUFFER /;"	d	file:
MAX_FIND_PITCH_LPC_ORDER	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_FIND_PITCH_LPC_ORDER /;"	d
MAX_FINE_BITS	src/hw/audio/opus-1.2.1/rate.h	/^#define MAX_FINE_BITS /;"	d
MAX_FRAMES_PER_PACKET	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_FRAMES_PER_PACKET /;"	d
MAX_FRAME_LENGTH	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_FRAME_LENGTH /;"	d
MAX_FRAME_LENGTH_MS	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_FRAME_LENGTH_MS /;"	d
MAX_FRAME_SIZE	src/hw/audio/opus-1.2.1/burg_modified_FIX.c	/^#define MAX_FRAME_SIZE /;"	d	file:
MAX_FS_KHZ	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_FS_KHZ /;"	d
MAX_ITERATIONS_A2NLSF_FIX	src/hw/audio/opus-1.2.1/A2NLSF.c	/^#define MAX_ITERATIONS_A2NLSF_FIX /;"	d	file:
MAX_LAG_4KHZ	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^#define MAX_LAG_4KHZ /;"	d	file:
MAX_LAG_8KHZ	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^#define MAX_LAG_8KHZ /;"	d	file:
MAX_LOOPS	src/hw/audio/opus-1.2.1/NLSF_stabilize.c	/^#define MAX_LOOPS /;"	d	file:
MAX_LPC_ORDER	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_LPC_ORDER /;"	d
MAX_LPC_STABILIZE_ITERATIONS	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_LPC_STABILIZE_ITERATIONS /;"	d
MAX_MATRIX_SIZE	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_MATRIX_SIZE /;"	d
MAX_NB_SHELL_BLOCKS	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_NB_SHELL_BLOCKS /;"	d
MAX_NB_SUBFR	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_NB_SUBFR /;"	d
MAX_NEURONS	src/hw/audio/opus-1.2.1/mlp.c	/^#define MAX_NEURONS /;"	d	file:
MAX_PERIOD	src/hw/audio/opus-1.2.1/modes.h	/^#define MAX_PERIOD /;"	d
MAX_PITCH_LAG_MS	src/hw/audio/opus-1.2.1/PLC.h	/^#define MAX_PITCH_LAG_MS /;"	d
MAX_PREDICTION_POWER_GAIN	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_PREDICTION_POWER_GAIN /;"	d
MAX_PREDICTION_POWER_GAIN_AFTER_RESET	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_PREDICTION_POWER_GAIN_AFTER_RESET /;"	d
MAX_PSEUDO	src/hw/audio/opus-1.2.1/rate.h	/^#define MAX_PSEUDO /;"	d
MAX_QGAIN_DB	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_QGAIN_DB /;"	d
MAX_RSHIFTS	src/hw/audio/opus-1.2.1/burg_modified_FIX.c	/^#define MAX_RSHIFTS /;"	d	file:
MAX_SHAPE_LPC_ORDER	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_SHAPE_LPC_ORDER /;"	d
MAX_SUB_FRAME_LENGTH	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_SUB_FRAME_LENGTH /;"	d
MAX_SUM_LOG_GAIN_DB	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define MAX_SUM_LOG_GAIN_DB /;"	d
MAX_TARGET_RATE_BPS	src/hw/audio/opus-1.2.1/define.h	/^#define MAX_TARGET_RATE_BPS /;"	d
MAX_USERNAME_LENGTH	src/module/ui.c	/^#define MAX_USERNAME_LENGTH /;"	d	file:
MAX_USERS	src/module/ui.c	/^#define MAX_USERS /;"	d	file:
MAY_HAVE_EDSP	src/hw/audio/opus-1.2.1/arm/armcpu.h	/^#  define MAY_HAVE_EDSP(/;"	d
MAY_HAVE_MEDIA	src/hw/audio/opus-1.2.1/arm/armcpu.h	/^#  define MAY_HAVE_MEDIA(/;"	d
MAY_HAVE_NEON	src/hw/audio/opus-1.2.1/arm/armcpu.h	/^#  define MAY_HAVE_NEON(/;"	d
MDCT_H	src/hw/audio/opus-1.2.1/mdct.h	/^#define MDCT_H$/;"	d
MDCT_TWIDDLES960	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define MDCT_TWIDDLES960$/;"	d
MDCT_TWIDDLES960	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define MDCT_TWIDDLES960$/;"	d
MIN16	src/hw/audio/opus-1.2.1/arch.h	/^#define MIN16(/;"	d
MIN32	src/hw/audio/opus-1.2.1/arch.h	/^#define MIN32(/;"	d
MIN_DELTA_GAIN_QUANT	src/hw/audio/opus-1.2.1/define.h	/^#define MIN_DELTA_GAIN_QUANT /;"	d
MIN_LAG_4KHZ	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^#define MIN_LAG_4KHZ /;"	d	file:
MIN_LAG_8KHZ	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^#define MIN_LAG_8KHZ /;"	d	file:
MIN_LPC_ORDER	src/hw/audio/opus-1.2.1/define.h	/^#define MIN_LPC_ORDER /;"	d
MIN_QGAIN_DB	src/hw/audio/opus-1.2.1/define.h	/^#define MIN_QGAIN_DB /;"	d
MIN_RSHIFTS	src/hw/audio/opus-1.2.1/burg_modified_FIX.c	/^#define MIN_RSHIFTS /;"	d	file:
MIN_TARGET_RATE_BPS	src/hw/audio/opus-1.2.1/define.h	/^#define MIN_TARGET_RATE_BPS /;"	d
MLP	src/hw/audio/opus-1.2.1/mlp.h	/^} MLP;$/;"	t	typeref:struct:__anon21
MODEM_EVENT_BATTERY_DATA_NOT_READY	src/event/modem_event.h	/^	MODEM_EVENT_BATTERY_DATA_NOT_READY,$/;"	e	enum:modem_event_type
MODEM_EVENT_BATTERY_DATA_READY	src/event/modem_event.h	/^	MODEM_EVENT_BATTERY_DATA_READY,$/;"	e	enum:modem_event_type
MODEM_EVENT_CARRIER_FOTA_PENDING	src/event/modem_event.h	/^	MODEM_EVENT_CARRIER_FOTA_PENDING,$/;"	e	enum:modem_event_type
MODEM_EVENT_CARRIER_FOTA_STOPPED	src/event/modem_event.h	/^	MODEM_EVENT_CARRIER_FOTA_STOPPED,$/;"	e	enum:modem_event_type
MODEM_EVENT_CARRIER_INITIALIZED	src/event/modem_event.h	/^	MODEM_EVENT_CARRIER_INITIALIZED,$/;"	e	enum:modem_event_type
MODEM_EVENT_CARRIER_REBOOT_REQUEST	src/event/modem_event.h	/^	MODEM_EVENT_CARRIER_REBOOT_REQUEST,$/;"	e	enum:modem_event_type
MODEM_EVENT_ERROR	src/event/modem_event.h	/^	MODEM_EVENT_ERROR,$/;"	e	enum:modem_event_type
MODEM_EVENT_INITIALIZED	src/event/modem_event.h	/^	MODEM_EVENT_INITIALIZED,$/;"	e	enum:modem_event_type
MODEM_EVENT_LTE_CELL_UPDATE	src/event/modem_event.h	/^	MODEM_EVENT_LTE_CELL_UPDATE,$/;"	e	enum:modem_event_type
MODEM_EVENT_LTE_CONNECTED	src/event/modem_event.h	/^	MODEM_EVENT_LTE_CONNECTED,$/;"	e	enum:modem_event_type
MODEM_EVENT_LTE_CONNECTING	src/event/modem_event.h	/^	MODEM_EVENT_LTE_CONNECTING,$/;"	e	enum:modem_event_type
MODEM_EVENT_LTE_DISCONNECTED	src/event/modem_event.h	/^	MODEM_EVENT_LTE_DISCONNECTED,$/;"	e	enum:modem_event_type
MODEM_EVENT_LTE_EDRX_UPDATE	src/event/modem_event.h	/^	MODEM_EVENT_LTE_EDRX_UPDATE,$/;"	e	enum:modem_event_type
MODEM_EVENT_LTE_PSM_UPDATE	src/event/modem_event.h	/^	MODEM_EVENT_LTE_PSM_UPDATE,$/;"	e	enum:modem_event_type
MODEM_EVENT_MODEM_DYNAMIC_DATA_NOT_READY	src/event/modem_event.h	/^	MODEM_EVENT_MODEM_DYNAMIC_DATA_NOT_READY,$/;"	e	enum:modem_event_type
MODEM_EVENT_MODEM_DYNAMIC_DATA_READY	src/event/modem_event.h	/^	MODEM_EVENT_MODEM_DYNAMIC_DATA_READY,$/;"	e	enum:modem_event_type
MODEM_EVENT_MODEM_STATIC_DATA_NOT_READY	src/event/modem_event.h	/^	MODEM_EVENT_MODEM_STATIC_DATA_NOT_READY,$/;"	e	enum:modem_event_type
MODEM_EVENT_MODEM_STATIC_DATA_READY	src/event/modem_event.h	/^	MODEM_EVENT_MODEM_STATIC_DATA_READY,$/;"	e	enum:modem_event_type
MODEM_EVENT_NEIGHBOR_CELLS_DATA_NOT_READY	src/event/modem_event.h	/^	MODEM_EVENT_NEIGHBOR_CELLS_DATA_NOT_READY,$/;"	e	enum:modem_event_type
MODEM_EVENT_NEIGHBOR_CELLS_DATA_READY	src/event/modem_event.h	/^	MODEM_EVENT_NEIGHBOR_CELLS_DATA_READY,$/;"	e	enum:modem_event_type
MODEM_EVENT_SHUTDOWN_READY	src/event/modem_event.h	/^	MODEM_EVENT_SHUTDOWN_READY,$/;"	e	enum:modem_event_type
MODEM_QUEUE_BYTE_ALIGNMENT	src/module/sdk_modem.c	/^#define MODEM_QUEUE_BYTE_ALIGNMENT	/;"	d	file:
MODEM_QUEUE_ENTRY_COUNT	src/module/sdk_modem.c	/^#define MODEM_QUEUE_ENTRY_COUNT	/;"	d	file:
MODES_H	src/hw/audio/opus-1.2.1/modes.h	/^#define MODES_H$/;"	d
MODE_CELT_ONLY	src/hw/audio/opus-1.2.1/opus_private.h	/^#define MODE_CELT_ONLY /;"	d
MODE_HYBRID	src/hw/audio/opus-1.2.1/opus_private.h	/^#define MODE_HYBRID /;"	d
MODE_SILK_ONLY	src/hw/audio/opus-1.2.1/opus_private.h	/^#define MODE_SILK_ONLY /;"	d
MODULE	src/module/sdk_modem.c	/^#define MODULE /;"	d	file:
MSWAP	src/hw/audio/opus-1.2.1/celt_encoder.c	/^#define MSWAP(/;"	d	file:
MS_FRAME_TMP	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^#define MS_FRAME_TMP /;"	d	file:
MUL32_FRAC_Q	src/hw/audio/opus-1.2.1/LPC_inv_pred_gain.c	/^#define MUL32_FRAC_Q(/;"	d	file:
MULT16_16	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_16(/;"	d
MULT16_16	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#define MULT16_16(/;"	d
MULT16_16	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#undef MULT16_16$/;"	d
MULT16_16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define MULT16_16(/;"	d
MULT16_16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_16(/;"	d
MULT16_16SU	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define MULT16_16SU(/;"	d
MULT16_16SU	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_16SU(/;"	d
MULT16_16_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int MULT16_16_(int a, int b, char *file, int line)$/;"	f
MULT16_16_16	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_16_16(/;"	d
MULT16_16_16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short MULT16_16_16(int a, int b)$/;"	f
MULT16_16_16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_16_16(/;"	d
MULT16_16_P13	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_16_P13(/;"	d
MULT16_16_P13	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short MULT16_16_P13(int a, int b)$/;"	f
MULT16_16_P13	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_16_P13(/;"	d
MULT16_16_P14	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_16_P14(/;"	d
MULT16_16_P14	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short MULT16_16_P14(int a, int b)$/;"	f
MULT16_16_P14	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_16_P14(/;"	d
MULT16_16_P15	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_16_P15(/;"	d
MULT16_16_P15	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short MULT16_16_P15(int a, int b)$/;"	f
MULT16_16_P15	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_16_P15(/;"	d
MULT16_16_Q11	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_16_Q11(/;"	d
MULT16_16_Q11	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_16_Q11(/;"	d
MULT16_16_Q11_32	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_16_Q11_32(/;"	d
MULT16_16_Q11_32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int MULT16_16_Q11_32(int a, int b)$/;"	f
MULT16_16_Q11_32	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_16_Q11_32(/;"	d
MULT16_16_Q13	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_16_Q13(/;"	d
MULT16_16_Q13	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short MULT16_16_Q13(int a, int b)$/;"	f
MULT16_16_Q13	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_16_Q13(/;"	d
MULT16_16_Q14	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_16_Q14(/;"	d
MULT16_16_Q14	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short MULT16_16_Q14(int a, int b)$/;"	f
MULT16_16_Q14	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_16_Q14(/;"	d
MULT16_16_Q15	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_16_Q15(/;"	d
MULT16_16_Q15	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define MULT16_16_Q15(/;"	d
MULT16_16_Q15	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_16_Q15(/;"	d
MULT16_16_Q15_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short MULT16_16_Q15_(int a, int b, char *file, int line)$/;"	f
MULT16_16_armv5e	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^static OPUS_INLINE opus_val32 MULT16_16_armv5e(opus_val16 a, opus_val16 b)$/;"	f
MULT16_32_P16	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_32_P16(/;"	d
MULT16_32_P16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define MULT16_32_P16(/;"	d
MULT16_32_P16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_32_P16(/;"	d
MULT16_32_PX	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define MULT16_32_PX(/;"	d
MULT16_32_PX_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int MULT16_32_PX_(int a, opus_int64 b, int Q, char *file, int line)$/;"	f
MULT16_32_Q15	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_32_Q15(/;"	d
MULT16_32_Q15	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^#define MULT16_32_Q15(/;"	d
MULT16_32_Q15	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^#undef MULT16_32_Q15$/;"	d
MULT16_32_Q15	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#define MULT16_32_Q15(/;"	d
MULT16_32_Q15	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#undef MULT16_32_Q15$/;"	d
MULT16_32_Q15	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define MULT16_32_Q15(/;"	d
MULT16_32_Q15	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_32_Q15(/;"	d
MULT16_32_Q15_armv4	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^static OPUS_INLINE opus_val32 MULT16_32_Q15_armv4(opus_val16 a, opus_val32 b)$/;"	f
MULT16_32_Q15_armv5e	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^static OPUS_INLINE opus_val32 MULT16_32_Q15_armv5e(opus_val16 a, opus_val32 b)$/;"	f
MULT16_32_Q16	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT16_32_Q16(/;"	d
MULT16_32_Q16	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^#define MULT16_32_Q16(/;"	d
MULT16_32_Q16	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^#undef MULT16_32_Q16$/;"	d
MULT16_32_Q16	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#define MULT16_32_Q16(/;"	d
MULT16_32_Q16	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#undef MULT16_32_Q16$/;"	d
MULT16_32_Q16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define MULT16_32_Q16(/;"	d
MULT16_32_Q16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT16_32_Q16(/;"	d
MULT16_32_Q16_armv4	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^static OPUS_INLINE opus_val32 MULT16_32_Q16_armv4(opus_val16 a, opus_val32 b)$/;"	f
MULT16_32_Q16_armv5e	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^static OPUS_INLINE opus_val32 MULT16_32_Q16_armv5e(opus_val16 a, opus_val32 b)$/;"	f
MULT16_32_QX	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define MULT16_32_QX(/;"	d
MULT16_32_QX_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int MULT16_32_QX_(int a, opus_int64 b, int Q, char *file, int line)$/;"	f
MULT32_32_Q31	src/hw/audio/opus-1.2.1/arch.h	/^#define MULT32_32_Q31(/;"	d
MULT32_32_Q31	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^#define MULT32_32_Q31(/;"	d
MULT32_32_Q31	src/hw/audio/opus-1.2.1/arm/fixed_armv4.h	/^#undef MULT32_32_Q31$/;"	d
MULT32_32_Q31	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define MULT32_32_Q31(/;"	d
MULT32_32_Q31	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define MULT32_32_Q31(/;"	d
M_PI	src/hw/audio/opus-1.2.1/analysis.c	/^#define M_PI /;"	d	file:
M_PI	src/hw/audio/opus-1.2.1/modes.c	/^#define M_PI /;"	d	file:
MappingType	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^} MappingType;$/;"	t	typeref:enum:__anon17	file:
NB_ATT	src/hw/audio/opus-1.2.1/PLC.c	/^#define NB_ATT /;"	d	file:
NB_FRAMES	src/hw/audio/opus-1.2.1/analysis.h	/^#define NB_FRAMES /;"	d
NB_LTP_CBKS	src/hw/audio/opus-1.2.1/define.h	/^#define NB_LTP_CBKS /;"	d
NB_SPEECH_FRAMES_BEFORE_DTX	src/hw/audio/opus-1.2.1/define.h	/^#define NB_SPEECH_FRAMES_BEFORE_DTX /;"	d
NB_TBANDS	src/hw/audio/opus-1.2.1/analysis.h	/^#define NB_TBANDS /;"	d
NB_TONAL_SKIP_BANDS	src/hw/audio/opus-1.2.1/analysis.c	/^#define NB_TONAL_SKIP_BANDS /;"	d	file:
NE10_FFT_PARAMS48000_960	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^#define NE10_FFT_PARAMS48000_960$/;"	d
NE10_FFT_PARAMS48000_960	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^#define NE10_FFT_PARAMS48000_960$/;"	d
NEG16	src/hw/audio/opus-1.2.1/arch.h	/^#define NEG16(/;"	d
NEG16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short NEG16(int x)$/;"	f
NEG16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define NEG16(/;"	d
NEG32	src/hw/audio/opus-1.2.1/arch.h	/^#define NEG32(/;"	d
NEG32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int NEG32(opus_int64 x)$/;"	f
NEG32	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define NEG32(/;"	d
NEG32_ovflw	src/hw/audio/opus-1.2.1/arch.h	/^#define NEG32_ovflw(/;"	d
NEG32_ovflw	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define NEG32_ovflw(/;"	d
NEG32_ovflw	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define NEG32_ovflw(/;"	d
NL	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  NL[ VAD_N_BANDS ];              \/* Noise energy level in each band                                      *\/$/;"	m	struct:__anon27
NLSFIndices	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    NLSFIndices[ MAX_LPC_ORDER + 1 ];$/;"	m	struct:__anon32
NLSFInterpCoef_Q2	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    NLSFInterpCoef_Q2;$/;"	m	struct:__anon32
NLSF_MSVQ_Survivors	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     NLSF_MSVQ_Survivors;               \/* Number of survivors in NLSF MSVQ                                 *\/$/;"	m	struct:__anon33
NLSF_QUANT_DEL_DEC_STATES	src/hw/audio/opus-1.2.1/define.h	/^#define NLSF_QUANT_DEL_DEC_STATES /;"	d
NLSF_QUANT_DEL_DEC_STATES_LOG2	src/hw/audio/opus-1.2.1/define.h	/^#define NLSF_QUANT_DEL_DEC_STATES_LOG2 /;"	d
NLSF_QUANT_LEVEL_ADJ	src/hw/audio/opus-1.2.1/define.h	/^#define NLSF_QUANT_LEVEL_ADJ /;"	d
NLSF_QUANT_MAX_AMPLITUDE	src/hw/audio/opus-1.2.1/define.h	/^#define NLSF_QUANT_MAX_AMPLITUDE /;"	d
NLSF_QUANT_MAX_AMPLITUDE_EXT	src/hw/audio/opus-1.2.1/define.h	/^#define NLSF_QUANT_MAX_AMPLITUDE_EXT /;"	d
NLSF_VQ_MAX_VECTORS	src/hw/audio/opus-1.2.1/define.h	/^#define NLSF_VQ_MAX_VECTORS /;"	d
NLSF_W_Q	src/hw/audio/opus-1.2.1/define.h	/^#define NLSF_W_Q /;"	d
NORM_ALIASING_HACK	src/hw/audio/opus-1.2.1/celt_decoder.c	/^#define NORM_ALIASING_HACK$/;"	d	file:
NORM_SCALING	src/hw/audio/opus-1.2.1/arch.h	/^#define NORM_SCALING /;"	d
NRFX_I2S_CONFIG_IRQ_PRIORITY	src/hw/audio/codec-i2s.c	/^#define NRFX_I2S_CONFIG_IRQ_PRIORITY /;"	d	file:
NRF_LOG_INFO	src/hw/audio/codec-i2s.c	/^#define NRF_LOG_INFO /;"	d	file:
NSQ_LPC_BUF_LENGTH	src/hw/audio/opus-1.2.1/define.h	/^# define NSQ_LPC_BUF_LENGTH /;"	d
NSQ_del_dec_struct	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^} NSQ_del_dec_struct;$/;"	t	typeref:struct:__anon19	file:
NSQ_sample_pair	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^typedef NSQ_sample_struct  NSQ_sample_pair[ 2 ];$/;"	t	file:
NSQ_sample_struct	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^} NSQ_sample_struct;$/;"	t	typeref:struct:__anon20	file:
N_BITS_HEAD_ROOM	src/hw/audio/opus-1.2.1/burg_modified_FIX.c	/^#define N_BITS_HEAD_ROOM /;"	d	file:
N_LEVELS_QGAIN	src/hw/audio/opus-1.2.1/define.h	/^#define N_LEVELS_QGAIN /;"	d
N_RATE_LEVELS	src/hw/audio/opus-1.2.1/define.h	/^#define N_RATE_LEVELS /;"	d
NoiseLevelBias	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  NoiseLevelBias[ VAD_N_BANDS ];  \/* Noise level estimator bias\/offset                                    *\/$/;"	m	struct:__anon27
NrgRatioSmth_Q8	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  NrgRatioSmth_Q8[ VAD_N_BANDS ]; \/* Smoothed energy level in each band                                   *\/$/;"	m	struct:__anon27
OFFSET	src/hw/audio/opus-1.2.1/gain_quant.c	/^#define OFFSET /;"	d	file:
OFFSET_UVH_Q10	src/hw/audio/opus-1.2.1/define.h	/^#define OFFSET_UVH_Q10 /;"	d
OFFSET_UVL_Q10	src/hw/audio/opus-1.2.1/define.h	/^#define OFFSET_UVL_Q10 /;"	d
OFFSET_VH_Q10	src/hw/audio/opus-1.2.1/define.h	/^#define OFFSET_VH_Q10 /;"	d
OFFSET_VL_Q10	src/hw/audio/opus-1.2.1/define.h	/^#define OFFSET_VL_Q10 /;"	d
OPUS_ALLOC_FAIL	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_ALLOC_FAIL /;"	d
OPUS_APPLICATION	src/hw/audio/opus.c	/^# define OPUS_APPLICATION /;"	d	file:
OPUS_APPLICATION	src/hw/old-codec.c	/^# define OPUS_APPLICATION /;"	d	file:
OPUS_APPLICATION_AUDIO	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_APPLICATION_AUDIO /;"	d
OPUS_APPLICATION_RESTRICTED_LOWDELAY	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_APPLICATION_RESTRICTED_LOWDELAY /;"	d
OPUS_APPLICATION_VOIP	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_APPLICATION_VOIP /;"	d
OPUS_ARCHMASK	src/hw/audio/opus-1.2.1/cpu_support.h	/^#define OPUS_ARCHMASK /;"	d
OPUS_ARCH_ARM_EDSP	src/hw/audio/opus-1.2.1/arm/armcpu.h	/^#define OPUS_ARCH_ARM_EDSP /;"	d
OPUS_ARCH_ARM_MEDIA	src/hw/audio/opus-1.2.1/arm/armcpu.h	/^#define OPUS_ARCH_ARM_MEDIA /;"	d
OPUS_ARCH_ARM_NEON	src/hw/audio/opus-1.2.1/arm/armcpu.h	/^#define OPUS_ARCH_ARM_NEON /;"	d
OPUS_ARCH_ARM_V4	src/hw/audio/opus-1.2.1/arm/armcpu.h	/^#define OPUS_ARCH_ARM_V4 /;"	d
OPUS_ARG_NONNULL	src/hw/audio/opus-1.2.1/opus_defines.h	/^# define OPUS_ARG_NONNULL(/;"	d
OPUS_AUTO	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_AUTO /;"	d
OPUS_BAD_ARG	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_BAD_ARG /;"	d
OPUS_BANDWIDTH_FULLBAND	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_BANDWIDTH_FULLBAND /;"	d
OPUS_BANDWIDTH_MEDIUMBAND	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_BANDWIDTH_MEDIUMBAND /;"	d
OPUS_BANDWIDTH_NARROWBAND	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_BANDWIDTH_NARROWBAND /;"	d
OPUS_BANDWIDTH_SUPERWIDEBAND	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_BANDWIDTH_SUPERWIDEBAND /;"	d
OPUS_BANDWIDTH_WIDEBAND	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_BANDWIDTH_WIDEBAND /;"	d
OPUS_BITRATE_MAX	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_BITRATE_MAX /;"	d
OPUS_BUFFER_TOO_SMALL	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_BUFFER_TOO_SMALL /;"	d
OPUS_CHECK_ARRAY	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define OPUS_CHECK_ARRAY(/;"	d
OPUS_CHECK_ARRAY_COND	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define OPUS_CHECK_ARRAY_COND(/;"	d
OPUS_CHECK_VALUE	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define OPUS_CHECK_VALUE(/;"	d
OPUS_CHECK_VALUE_COND	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define OPUS_CHECK_VALUE_COND(/;"	d
OPUS_CLEAR	src/hw/audio/opus-1.2.1/os_support.h	/^#define OPUS_CLEAR(/;"	d
OPUS_COPY	src/hw/audio/opus-1.2.1/os_support.h	/^#define OPUS_COPY(/;"	d
OPUS_CUSTOM_EXPORT	src/hw/audio/opus-1.2.1/opus_custom.h	/^# define OPUS_CUSTOM_EXPORT /;"	d
OPUS_CUSTOM_EXPORT	src/hw/audio/opus-1.2.1/opus_custom.h	/^# define OPUS_CUSTOM_EXPORT$/;"	d
OPUS_CUSTOM_EXPORT_STATIC	src/hw/audio/opus-1.2.1/opus_custom.h	/^#  define OPUS_CUSTOM_EXPORT_STATIC /;"	d
OPUS_CUSTOM_EXPORT_STATIC	src/hw/audio/opus-1.2.1/opus_custom.h	/^#  define OPUS_CUSTOM_EXPORT_STATIC$/;"	d
OPUS_CUSTOM_EXPORT_STATIC	src/hw/audio/opus-1.2.1/opus_custom.h	/^# define OPUS_CUSTOM_EXPORT_STATIC /;"	d
OPUS_CUSTOM_H	src/hw/audio/opus-1.2.1/opus_custom.h	/^#define OPUS_CUSTOM_H$/;"	d
OPUS_CUSTOM_NOSTATIC	src/hw/audio/opus-1.2.1/celt.h	/^#define OPUS_CUSTOM_NOSTATIC /;"	d
OPUS_CUSTOM_NOSTATIC	src/hw/audio/opus-1.2.1/celt.h	/^#define OPUS_CUSTOM_NOSTATIC$/;"	d
OPUS_DECODER_RESET_START	src/hw/audio/opus-1.2.1/opus_decoder.c	/^#define OPUS_DECODER_RESET_START /;"	d	file:
OPUS_DECODER_SIZE	src/hw/audio/opus.c	/^#define OPUS_DECODER_SIZE /;"	d	file:
OPUS_DECODER_SIZE	src/hw/old-codec.c	/^# define OPUS_DECODER_SIZE /;"	d	file:
OPUS_DECODE_STACK_SIZE	src/hw/audio/audio.c	/^#define OPUS_DECODE_STACK_SIZE /;"	d	file:
OPUS_DEFINES_H	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_DEFINES_H$/;"	d
OPUS_ENCODER_RESET_START	src/hw/audio/opus-1.2.1/opus_encoder.c	/^#define OPUS_ENCODER_RESET_START /;"	d	file:
OPUS_ENCODER_SIZE	src/hw/audio/opus.c	/^# define OPUS_ENCODER_SIZE /;"	d	file:
OPUS_ENCODER_SIZE	src/hw/old-codec.c	/^# define OPUS_ENCODER_SIZE /;"	d	file:
OPUS_ENCODE_STACK_SIZE	src/hw/audio/audio.c	/^#define OPUS_ENCODE_STACK_SIZE /;"	d	file:
OPUS_EXPORT	src/hw/audio/opus-1.2.1/opus_defines.h	/^#   define OPUS_EXPORT /;"	d
OPUS_EXPORT	src/hw/audio/opus-1.2.1/opus_defines.h	/^#   define OPUS_EXPORT$/;"	d
OPUS_EXPORT	src/hw/audio/opus-1.2.1/opus_defines.h	/^#  define OPUS_EXPORT /;"	d
OPUS_EXPORT	src/hw/audio/opus-1.2.1/opus_defines.h	/^#  define OPUS_EXPORT$/;"	d
OPUS_FAST_INT64	src/hw/audio/opus-1.2.1/arch.h	/^#define OPUS_FAST_INT64 /;"	d
OPUS_FPRINTF	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define OPUS_FPRINTF /;"	d
OPUS_FRAMESIZE_100_MS	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_FRAMESIZE_100_MS /;"	d
OPUS_FRAMESIZE_10_MS	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_FRAMESIZE_10_MS /;"	d
OPUS_FRAMESIZE_120_MS	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_FRAMESIZE_120_MS /;"	d
OPUS_FRAMESIZE_20_MS	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_FRAMESIZE_20_MS /;"	d
OPUS_FRAMESIZE_2_5_MS	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_FRAMESIZE_2_5_MS /;"	d
OPUS_FRAMESIZE_40_MS	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_FRAMESIZE_40_MS /;"	d
OPUS_FRAMESIZE_5_MS	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_FRAMESIZE_5_MS /;"	d
OPUS_FRAMESIZE_60_MS	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_FRAMESIZE_60_MS /;"	d
OPUS_FRAMESIZE_80_MS	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_FRAMESIZE_80_MS /;"	d
OPUS_FRAMESIZE_ARG	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_FRAMESIZE_ARG /;"	d
OPUS_GET_APPLICATION	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_APPLICATION(/;"	d
OPUS_GET_APPLICATION_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_APPLICATION_REQUEST /;"	d
OPUS_GET_BANDWIDTH	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_BANDWIDTH(/;"	d
OPUS_GET_BANDWIDTH_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_BANDWIDTH_REQUEST /;"	d
OPUS_GET_BITRATE	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_BITRATE(/;"	d
OPUS_GET_BITRATE_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_BITRATE_REQUEST /;"	d
OPUS_GET_COMPLEXITY	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_COMPLEXITY(/;"	d
OPUS_GET_COMPLEXITY_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_COMPLEXITY_REQUEST /;"	d
OPUS_GET_DTX	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_DTX(/;"	d
OPUS_GET_DTX_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_DTX_REQUEST /;"	d
OPUS_GET_EXPERT_FRAME_DURATION	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_EXPERT_FRAME_DURATION(/;"	d
OPUS_GET_EXPERT_FRAME_DURATION_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_EXPERT_FRAME_DURATION_REQUEST /;"	d
OPUS_GET_FINAL_RANGE	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_FINAL_RANGE(/;"	d
OPUS_GET_FINAL_RANGE_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_FINAL_RANGE_REQUEST /;"	d
OPUS_GET_FORCE_CHANNELS	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_FORCE_CHANNELS(/;"	d
OPUS_GET_FORCE_CHANNELS_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_FORCE_CHANNELS_REQUEST /;"	d
OPUS_GET_GAIN	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_GAIN(/;"	d
OPUS_GET_GAIN_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_GAIN_REQUEST /;"	d
OPUS_GET_INBAND_FEC	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_INBAND_FEC(/;"	d
OPUS_GET_INBAND_FEC_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_INBAND_FEC_REQUEST /;"	d
OPUS_GET_LAST_PACKET_DURATION	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_LAST_PACKET_DURATION(/;"	d
OPUS_GET_LAST_PACKET_DURATION_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_LAST_PACKET_DURATION_REQUEST /;"	d
OPUS_GET_LOOKAHEAD	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_LOOKAHEAD(/;"	d
OPUS_GET_LOOKAHEAD_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_LOOKAHEAD_REQUEST /;"	d
OPUS_GET_LSB_DEPTH	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_LSB_DEPTH(/;"	d
OPUS_GET_LSB_DEPTH_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_LSB_DEPTH_REQUEST /;"	d
OPUS_GET_MAX_BANDWIDTH	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_MAX_BANDWIDTH(/;"	d
OPUS_GET_MAX_BANDWIDTH_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_MAX_BANDWIDTH_REQUEST /;"	d
OPUS_GET_PACKET_LOSS_PERC	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_PACKET_LOSS_PERC(/;"	d
OPUS_GET_PACKET_LOSS_PERC_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_PACKET_LOSS_PERC_REQUEST /;"	d
OPUS_GET_PHASE_INVERSION_DISABLED	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_PHASE_INVERSION_DISABLED(/;"	d
OPUS_GET_PHASE_INVERSION_DISABLED_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_PHASE_INVERSION_DISABLED_REQUEST /;"	d
OPUS_GET_PITCH	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_PITCH(/;"	d
OPUS_GET_PITCH_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_PITCH_REQUEST /;"	d
OPUS_GET_PREDICTION_DISABLED	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_PREDICTION_DISABLED(/;"	d
OPUS_GET_PREDICTION_DISABLED_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_PREDICTION_DISABLED_REQUEST /;"	d
OPUS_GET_SAMPLE_RATE	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_SAMPLE_RATE(/;"	d
OPUS_GET_SAMPLE_RATE_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_SAMPLE_RATE_REQUEST /;"	d
OPUS_GET_SIGNAL	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_SIGNAL(/;"	d
OPUS_GET_SIGNAL_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_SIGNAL_REQUEST /;"	d
OPUS_GET_VBR	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_VBR(/;"	d
OPUS_GET_VBR_CONSTRAINT	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_VBR_CONSTRAINT(/;"	d
OPUS_GET_VBR_CONSTRAINT_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_VBR_CONSTRAINT_REQUEST /;"	d
OPUS_GET_VBR_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_GET_VBR_REQUEST /;"	d
OPUS_GET_VOICE_RATIO	src/hw/audio/opus-1.2.1/opus_private.h	/^#define OPUS_GET_VOICE_RATIO(/;"	d
OPUS_GET_VOICE_RATIO_REQUEST	src/hw/audio/opus-1.2.1/opus_private.h	/^#define OPUS_GET_VOICE_RATIO_REQUEST /;"	d
OPUS_GNUC_PREREQ	src/hw/audio/opus-1.2.1/opus_defines.h	/^#   define OPUS_GNUC_PREREQ(/;"	d
OPUS_H	src/hw/audio/opus-1.2.1/opus.h	/^#define OPUS_H$/;"	d
OPUS_INLINE	src/hw/audio/opus-1.2.1/opus_defines.h	/^#  define OPUS_INLINE /;"	d
OPUS_INLINE	src/hw/audio/opus-1.2.1/opus_defines.h	/^#  define OPUS_INLINE$/;"	d
OPUS_INLINE	src/hw/audio/opus-1.2.1/opus_defines.h	/^# define OPUS_INLINE /;"	d
OPUS_INTERNAL_ERROR	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_INTERNAL_ERROR /;"	d
OPUS_INVALID_PACKET	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_INVALID_PACKET /;"	d
OPUS_INVALID_STATE	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_INVALID_STATE /;"	d
OPUS_MAX_FRAME_SIZE	src/hw/audio/opus.c	/^#define OPUS_MAX_FRAME_SIZE /;"	d	file:
OPUS_MAX_FRAME_SIZE	src/hw/old-codec.c	/^#define OPUS_MAX_FRAME_SIZE /;"	d	file:
OPUS_MODE	src/hw/audio/opus.c	/^# define OPUS_MODE /;"	d	file:
OPUS_MODE	src/hw/old-codec.c	/^# define OPUS_MODE /;"	d	file:
OPUS_MOVE	src/hw/audio/opus-1.2.1/os_support.h	/^#define OPUS_MOVE(/;"	d
OPUS_MULTISTREAM_GET_DECODER_STATE	src/hw/audio/opus-1.2.1/opus_multistream.h	/^#define OPUS_MULTISTREAM_GET_DECODER_STATE(/;"	d
OPUS_MULTISTREAM_GET_DECODER_STATE_REQUEST	src/hw/audio/opus-1.2.1/opus_multistream.h	/^#define OPUS_MULTISTREAM_GET_DECODER_STATE_REQUEST /;"	d
OPUS_MULTISTREAM_GET_ENCODER_STATE	src/hw/audio/opus-1.2.1/opus_multistream.h	/^#define OPUS_MULTISTREAM_GET_ENCODER_STATE(/;"	d
OPUS_MULTISTREAM_GET_ENCODER_STATE_REQUEST	src/hw/audio/opus-1.2.1/opus_multistream.h	/^#define OPUS_MULTISTREAM_GET_ENCODER_STATE_REQUEST /;"	d
OPUS_MULTISTREAM_H	src/hw/audio/opus-1.2.1/opus_multistream.h	/^#define OPUS_MULTISTREAM_H$/;"	d
OPUS_OK	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_OK /;"	d
OPUS_PRINT_INT	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define OPUS_PRINT_INT(/;"	d
OPUS_PRIORITY	src/hw/audio/audio.c	/^#define OPUS_PRIORITY /;"	d	file:
OPUS_PRIVATE_H	src/hw/audio/opus-1.2.1/opus_private.h	/^#define OPUS_PRIVATE_H$/;"	d
OPUS_RESET_STATE	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_RESET_STATE /;"	d
OPUS_RESTRICT	src/hw/audio/opus-1.2.1/opus_defines.h	/^#  define OPUS_RESTRICT /;"	d
OPUS_RESTRICT	src/hw/audio/opus-1.2.1/opus_defines.h	/^#  define OPUS_RESTRICT$/;"	d
OPUS_RESTRICT	src/hw/audio/opus-1.2.1/opus_defines.h	/^# define OPUS_RESTRICT /;"	d
OPUS_SET_APPLICATION	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_APPLICATION(/;"	d
OPUS_SET_APPLICATION_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_APPLICATION_REQUEST /;"	d
OPUS_SET_BANDWIDTH	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_BANDWIDTH(/;"	d
OPUS_SET_BANDWIDTH_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_BANDWIDTH_REQUEST /;"	d
OPUS_SET_BITRATE	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_BITRATE(/;"	d
OPUS_SET_BITRATE_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_BITRATE_REQUEST /;"	d
OPUS_SET_COMPLEXITY	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_COMPLEXITY(/;"	d
OPUS_SET_COMPLEXITY_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_COMPLEXITY_REQUEST /;"	d
OPUS_SET_DTX	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_DTX(/;"	d
OPUS_SET_DTX_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_DTX_REQUEST /;"	d
OPUS_SET_ENERGY_MASK	src/hw/audio/opus-1.2.1/celt.h	/^#define OPUS_SET_ENERGY_MASK(/;"	d
OPUS_SET_ENERGY_MASK_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define OPUS_SET_ENERGY_MASK_REQUEST /;"	d
OPUS_SET_EXPERT_FRAME_DURATION	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_EXPERT_FRAME_DURATION(/;"	d
OPUS_SET_EXPERT_FRAME_DURATION_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_EXPERT_FRAME_DURATION_REQUEST /;"	d
OPUS_SET_FORCE_CHANNELS	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_FORCE_CHANNELS(/;"	d
OPUS_SET_FORCE_CHANNELS_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_FORCE_CHANNELS_REQUEST /;"	d
OPUS_SET_FORCE_MODE	src/hw/audio/opus-1.2.1/opus_private.h	/^#define OPUS_SET_FORCE_MODE(/;"	d
OPUS_SET_FORCE_MODE_REQUEST	src/hw/audio/opus-1.2.1/opus_private.h	/^#define OPUS_SET_FORCE_MODE_REQUEST /;"	d
OPUS_SET_GAIN	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_GAIN(/;"	d
OPUS_SET_GAIN_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_GAIN_REQUEST /;"	d
OPUS_SET_INBAND_FEC	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_INBAND_FEC(/;"	d
OPUS_SET_INBAND_FEC_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_INBAND_FEC_REQUEST /;"	d
OPUS_SET_LFE	src/hw/audio/opus-1.2.1/celt.h	/^#define OPUS_SET_LFE(/;"	d
OPUS_SET_LFE_REQUEST	src/hw/audio/opus-1.2.1/celt.h	/^#define OPUS_SET_LFE_REQUEST /;"	d
OPUS_SET_LSB_DEPTH	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_LSB_DEPTH(/;"	d
OPUS_SET_LSB_DEPTH_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_LSB_DEPTH_REQUEST /;"	d
OPUS_SET_MAX_BANDWIDTH	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_MAX_BANDWIDTH(/;"	d
OPUS_SET_MAX_BANDWIDTH_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_MAX_BANDWIDTH_REQUEST /;"	d
OPUS_SET_PACKET_LOSS_PERC	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_PACKET_LOSS_PERC(/;"	d
OPUS_SET_PACKET_LOSS_PERC_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_PACKET_LOSS_PERC_REQUEST /;"	d
OPUS_SET_PHASE_INVERSION_DISABLED	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_PHASE_INVERSION_DISABLED(/;"	d
OPUS_SET_PHASE_INVERSION_DISABLED_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_PHASE_INVERSION_DISABLED_REQUEST /;"	d
OPUS_SET_PREDICTION_DISABLED	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_PREDICTION_DISABLED(/;"	d
OPUS_SET_PREDICTION_DISABLED_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_PREDICTION_DISABLED_REQUEST /;"	d
OPUS_SET_SIGNAL	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_SIGNAL(/;"	d
OPUS_SET_SIGNAL_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_SIGNAL_REQUEST /;"	d
OPUS_SET_VBR	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_VBR(/;"	d
OPUS_SET_VBR_CONSTRAINT	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_VBR_CONSTRAINT(/;"	d
OPUS_SET_VBR_CONSTRAINT_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_VBR_CONSTRAINT_REQUEST /;"	d
OPUS_SET_VBR_REQUEST	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SET_VBR_REQUEST /;"	d
OPUS_SET_VOICE_RATIO	src/hw/audio/opus-1.2.1/opus_private.h	/^#define OPUS_SET_VOICE_RATIO(/;"	d
OPUS_SET_VOICE_RATIO_REQUEST	src/hw/audio/opus-1.2.1/opus_private.h	/^#define OPUS_SET_VOICE_RATIO_REQUEST /;"	d
OPUS_SIGNAL_MUSIC	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SIGNAL_MUSIC /;"	d
OPUS_SIGNAL_VOICE	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_SIGNAL_VOICE /;"	d
OPUS_TYPES_H	src/hw/audio/opus-1.2.1/opus_types.h	/^#define OPUS_TYPES_H$/;"	d
OPUS_UNIMPLEMENTED	src/hw/audio/opus-1.2.1/opus_defines.h	/^#define OPUS_UNIMPLEMENTED /;"	d
OPUS_WARN_UNUSED_RESULT	src/hw/audio/opus-1.2.1/opus_defines.h	/^# define OPUS_WARN_UNUSED_RESULT /;"	d
OPUS_WARN_UNUSED_RESULT	src/hw/audio/opus-1.2.1/opus_defines.h	/^# define OPUS_WARN_UNUSED_RESULT$/;"	d
ORDER_FIR	src/hw/audio/opus-1.2.1/resampler_down2_3.c	/^#define ORDER_FIR /;"	d	file:
OS_SUPPORT_H	src/hw/audio/opus-1.2.1/os_support.h	/^#define OS_SUPPORT_H$/;"	d
OUTGOING_BUFFER_SIZE	src/hw/audio/codec2.c	/^#define OUTGOING_BUFFER_SIZE /;"	d	file:
OUTGOING_BUFFER_SIZE	src/hw/old-codec.c	/^#define OUTGOING_BUFFER_SIZE /;"	d	file:
OUTPUT_DATA_SIZE	src/hw/audio/audio.c	/^#define OUTPUT_DATA_SIZE /;"	d	file:
OVERRIDE_CELT_INNER_PROD	src/hw/audio/opus-1.2.1/arm/pitch_arm.h	/^#   define OVERRIDE_CELT_INNER_PROD /;"	d
OVERRIDE_DUAL_INNER_PROD	src/hw/audio/opus-1.2.1/arm/pitch_arm.h	/^#   define OVERRIDE_DUAL_INNER_PROD /;"	d
OVERRIDE_FFT	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define OVERRIDE_FFT /;"	d
OVERRIDE_FFT	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define OVERRIDE_FFT /;"	d
OVERRIDE_PITCH_XCORR	src/hw/audio/opus-1.2.1/arm/pitch_arm.h	/^#   define OVERRIDE_PITCH_XCORR /;"	d
OVERRIDE_PITCH_XCORR	src/hw/audio/opus-1.2.1/arm/pitch_arm.h	/^#  define OVERRIDE_PITCH_XCORR /;"	d
OVERRIDE_XCORR_KERNEL	src/hw/audio/opus-1.2.1/arm/pitch_arm.h	/^#   define OVERRIDE_XCORR_KERNEL /;"	d
OVERRIDE_silk_LPC_inverse_pred_gain	src/hw/audio/opus-1.2.1/arm/LPC_inv_pred_gain_arm.h	/^#   define OVERRIDE_silk_LPC_inverse_pred_gain /;"	d
OVERRIDE_silk_NSQ_del_dec	src/hw/audio/opus-1.2.1/arm/NSQ_del_dec_arm.h	/^#define OVERRIDE_silk_NSQ_del_dec /;"	d
OVERRIDE_silk_biquad_alt_stride2	src/hw/audio/opus-1.2.1/arm/biquad_alt_arm.h	/^#   define OVERRIDE_silk_biquad_alt_stride2 /;"	d
OVERRIDE_silk_warped_autocorrelation_FIX	src/hw/audio/opus-1.2.1/arm/warped_autocorrelation_FIX_arm.h	/^#    define OVERRIDE_silk_warped_autocorrelation_FIX /;"	d
OVERRIDE_silk_warped_autocorrelation_FIX	src/hw/audio/opus-1.2.1/arm/warped_autocorrelation_FIX_arm.h	/^#   define OVERRIDE_silk_warped_autocorrelation_FIX /;"	d
OpusCustomDecoder	src/hw/audio/opus-1.2.1/celt_decoder.c	/^struct OpusCustomDecoder {$/;"	s	file:
OpusCustomDecoder	src/hw/audio/opus-1.2.1/opus_custom.h	/^typedef struct OpusCustomDecoder OpusCustomDecoder;$/;"	t	typeref:struct:OpusCustomDecoder
OpusCustomEncoder	src/hw/audio/opus-1.2.1/celt_encoder.c	/^struct OpusCustomEncoder {$/;"	s	file:
OpusCustomEncoder	src/hw/audio/opus-1.2.1/opus_custom.h	/^typedef struct OpusCustomEncoder OpusCustomEncoder;$/;"	t	typeref:struct:OpusCustomEncoder
OpusCustomMode	src/hw/audio/opus-1.2.1/modes.h	/^struct OpusCustomMode {$/;"	s
OpusCustomMode	src/hw/audio/opus-1.2.1/opus_custom.h	/^typedef struct OpusCustomMode OpusCustomMode;$/;"	t	typeref:struct:OpusCustomMode
OpusDecoder	src/hw/audio/opus-1.2.1/opus.h	/^typedef struct OpusDecoder OpusDecoder;$/;"	t	typeref:struct:OpusDecoder
OpusDecoder	src/hw/audio/opus-1.2.1/opus_decoder.c	/^struct OpusDecoder {$/;"	s	file:
OpusEncoder	src/hw/audio/opus-1.2.1/opus.h	/^typedef struct OpusEncoder OpusEncoder;$/;"	t	typeref:struct:OpusEncoder
OpusEncoder	src/hw/audio/opus-1.2.1/opus_encoder.c	/^struct OpusEncoder {$/;"	s	file:
OpusMSDecoder	src/hw/audio/opus-1.2.1/opus_multistream.h	/^typedef struct OpusMSDecoder OpusMSDecoder;$/;"	t	typeref:struct:OpusMSDecoder
OpusMSDecoder	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^struct OpusMSDecoder {$/;"	s	file:
OpusMSEncoder	src/hw/audio/opus-1.2.1/opus_multistream.h	/^typedef struct OpusMSEncoder OpusMSEncoder;$/;"	t	typeref:struct:OpusMSEncoder
OpusMSEncoder	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^struct OpusMSEncoder {$/;"	s	file:
OpusRepacketizer	src/hw/audio/opus-1.2.1/opus.h	/^typedef struct OpusRepacketizer OpusRepacketizer;$/;"	t	typeref:struct:OpusRepacketizer
OpusRepacketizer	src/hw/audio/opus-1.2.1/opus_private.h	/^struct OpusRepacketizer {$/;"	s
PACKAGE_VERSION	src/hw/audio/opus-1.2.1/celt.c	/^#define PACKAGE_VERSION /;"	d	file:
PCM2VAL	src/hw/audio/opus-1.2.1/opus_encoder.c	/^#define PCM2VAL(/;"	d	file:
PDM_BUF_ADDRESS	src/hw/audio/codec2_pdm_mic.c	/^#define PDM_BUF_ADDRESS /;"	d	file:
PDM_BUF_SIZE	src/hw/audio/codec2_pdm_mic.c	/^#define PDM_BUF_SIZE /;"	d	file:
PERIndex	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    PERIndex;$/;"	m	struct:__anon32
PE_D_SRCH_LENGTH	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_D_SRCH_LENGTH /;"	d
PE_FLATCONTOUR_BIAS	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_FLATCONTOUR_BIAS /;"	d
PE_LTP_MEM_LENGTH_MS	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_LTP_MEM_LENGTH_MS /;"	d
PE_MAX_FRAME_LENGTH	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_MAX_FRAME_LENGTH /;"	d
PE_MAX_FRAME_LENGTH_MS	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_MAX_FRAME_LENGTH_MS /;"	d
PE_MAX_FRAME_LENGTH_ST_1	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_MAX_FRAME_LENGTH_ST_1 /;"	d
PE_MAX_FRAME_LENGTH_ST_2	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_MAX_FRAME_LENGTH_ST_2 /;"	d
PE_MAX_FS_KHZ	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_MAX_FS_KHZ /;"	d
PE_MAX_LAG	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_MAX_LAG /;"	d
PE_MAX_LAG_MS	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_MAX_LAG_MS /;"	d
PE_MAX_NB_SUBFR	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_MAX_NB_SUBFR /;"	d
PE_MIN_LAG	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_MIN_LAG /;"	d
PE_MIN_LAG_MS	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_MIN_LAG_MS /;"	d
PE_NB_CBKS_STAGE2	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_NB_CBKS_STAGE2 /;"	d
PE_NB_CBKS_STAGE2_10MS	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_NB_CBKS_STAGE2_10MS /;"	d
PE_NB_CBKS_STAGE2_EXT	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_NB_CBKS_STAGE2_EXT /;"	d
PE_NB_CBKS_STAGE3_10MS	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_NB_CBKS_STAGE3_10MS /;"	d
PE_NB_CBKS_STAGE3_MAX	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_NB_CBKS_STAGE3_MAX /;"	d
PE_NB_CBKS_STAGE3_MID	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_NB_CBKS_STAGE3_MID /;"	d
PE_NB_CBKS_STAGE3_MIN	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_NB_CBKS_STAGE3_MIN /;"	d
PE_NB_STAGE3_LAGS	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_NB_STAGE3_LAGS /;"	d
PE_PREVLAG_BIAS	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_PREVLAG_BIAS /;"	d
PE_SHORTLAG_BIAS	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_SHORTLAG_BIAS /;"	d
PE_SUBFR_LENGTH_MS	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define PE_SUBFR_LENGTH_MS /;"	d
PI	src/hw/audio/opus-1.2.1/mathops.h	/^#define PI /;"	d
PIN_CLK	src/hw/audio/codec2_pdm_mic.c	/^#define PIN_CLK /;"	d	file:
PIN_DIN	src/hw/audio/codec2_pdm_mic.c	/^#define PIN_DIN /;"	d	file:
PITCH_ARM_H	src/hw/audio/opus-1.2.1/arm/pitch_arm.h	/^# define PITCH_ARM_H$/;"	d
PITCH_DRIFT_FAC_Q16	src/hw/audio/opus-1.2.1/PLC.h	/^#define PITCH_DRIFT_FAC_Q16 /;"	d
PITCH_EST_MAX_LAG_MS	src/hw/audio/opus-1.2.1/define.h	/^#define PITCH_EST_MAX_LAG_MS /;"	d
PITCH_EST_MIN_LAG_MS	src/hw/audio/opus-1.2.1/define.h	/^#define PITCH_EST_MIN_LAG_MS /;"	d
PITCH_H	src/hw/audio/opus-1.2.1/pitch.h	/^#define PITCH_H$/;"	d
PLC_H	src/hw/audio/opus-1.2.1/celt_lpc.h	/^#define PLC_H$/;"	d
PLC_PITCH_LAG_MAX	src/hw/audio/opus-1.2.1/celt_decoder.c	/^#define PLC_PITCH_LAG_MAX /;"	d	file:
PLC_PITCH_LAG_MIN	src/hw/audio/opus-1.2.1/celt_decoder.c	/^#define PLC_PITCH_LAG_MIN /;"	d	file:
PLC_RAND_ATTENUATE_UV_Q15	src/hw/audio/opus-1.2.1/PLC.c	/^static const opus_int16 PLC_RAND_ATTENUATE_UV_Q15[NB_ATT] = { 32440, 29491 }; \/* 0.99, 0.9 *\/$/;"	v	file:
PLC_RAND_ATTENUATE_V_Q15	src/hw/audio/opus-1.2.1/PLC.c	/^static const opus_int16 PLC_RAND_ATTENUATE_V_Q15[NB_ATT]  = { 31130, 26214 }; \/* 0.95, 0.8 *\/$/;"	v	file:
PPI_CHANNEL	src/hw/audio/codec-i2s.c	/^#define PPI_CHANNEL /;"	d	file:
PRESUME_EDSP	src/hw/audio/opus-1.2.1/arm/armcpu.h	/^#  define PRESUME_EDSP(/;"	d
PRESUME_MEDIA	src/hw/audio/opus-1.2.1/arm/armcpu.h	/^#  define PRESUME_MEDIA(/;"	d
PRESUME_NEON	src/hw/audio/opus-1.2.1/arm/armcpu.h	/^#  define PRESUME_NEON(/;"	d
PRINT_MIPS	src/hw/audio/opus-1.2.1/arch.h	/^#define PRINT_MIPS(/;"	d
PRINT_MIPS	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define PRINT_MIPS(/;"	d
PRINT_MIPS	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#undef PRINT_MIPS$/;"	d
PSEUDO_SNR_THRESHOLD	src/hw/audio/opus-1.2.1/opus_encoder.c	/^#define PSEUDO_SNR_THRESHOLD /;"	d	file:
PSHR	src/hw/audio/opus-1.2.1/arch.h	/^#define PSHR(/;"	d
PSHR	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define PSHR(/;"	d
PSHR	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define PSHR(/;"	d
PSHR32	src/hw/audio/opus-1.2.1/arch.h	/^#define PSHR32(/;"	d
PSHR32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define PSHR32(/;"	d
PSHR32	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define PSHR32(/;"	d
PUSH	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define PUSH(/;"	d
PacketLoss_perc	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     PacketLoss_perc;                   \/* Packet loss rate measured by farend                              *\/$/;"	m	struct:__anon33
PacketSize_ms	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     PacketSize_ms;                     \/* Number of milliseconds to put in each packet                     *\/$/;"	m	struct:__anon33
PredCoef_Q12	src/hw/audio/opus-1.2.1/structs.h	/^    silk_DWORD_ALIGN opus_int16 PredCoef_Q12[ 2 ][ MAX_LPC_ORDER ];$/;"	m	struct:__anon37
PredCoef_Q12	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    silk_DWORD_ALIGN opus_int16 PredCoef_Q12[ 2 ][ MAX_LPC_ORDER ];$/;"	m	struct:__anon14
Pred_Q15	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 Pred_Q15[  DECISION_DELAY ];$/;"	m	struct:__anon19	file:
PulseCache	src/hw/audio/opus-1.2.1/modes.h	/^} PulseCache;$/;"	t	typeref:struct:__anon39
Q15ONE	src/hw/audio/opus-1.2.1/arch.h	/^#define Q15ONE /;"	d
Q15_ONE	src/hw/audio/opus-1.2.1/arch.h	/^#define Q15_ONE /;"	d
QA	src/hw/audio/opus-1.2.1/LPC_inv_pred_gain.c	/^#define QA /;"	d	file:
QA	src/hw/audio/opus-1.2.1/NLSF2A.c	/^#define QA /;"	d	file:
QA	src/hw/audio/opus-1.2.1/burg_modified_FIX.c	/^#define QA /;"	d	file:
QC	src/hw/audio/opus-1.2.1/main_FIX.h	/^#define QC /;"	d
QCONST16	src/hw/audio/opus-1.2.1/arch.h	/^#define QCONST16(/;"	d
QCONST16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define QCONST16(/;"	d
QCONST16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define QCONST16(/;"	d
QCONST32	src/hw/audio/opus-1.2.1/arch.h	/^#define QCONST32(/;"	d
QCONST32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define QCONST32(/;"	d
QCONST32	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define QCONST32(/;"	d
QOS	src/module/motorola.c	/^static mqtt_qos QOS = 0x00;$/;"	v	file:
QS	src/hw/audio/opus-1.2.1/main_FIX.h	/^#define QS /;"	d
QTHETA_OFFSET	src/hw/audio/opus-1.2.1/rate.h	/^#define QTHETA_OFFSET /;"	d
QTHETA_OFFSET_TWOPHASE	src/hw/audio/opus-1.2.1/rate.h	/^#define QTHETA_OFFSET_TWOPHASE /;"	d
QUANT_BANDS	src/hw/audio/opus-1.2.1/quant_bands.h	/^#define QUANT_BANDS$/;"	d
QUANT_LEVEL_ADJUST_Q10	src/hw/audio/opus-1.2.1/define.h	/^#define QUANT_LEVEL_ADJUST_Q10 /;"	d
Q_Q10	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 Q_Q10;$/;"	m	struct:__anon20	file:
Q_Q10	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 Q_Q10[     DECISION_DELAY ];$/;"	m	struct:__anon19	file:
RADIO_EVENT_ERR	src/event/radio_event.h	/^  RADIO_EVENT_ERR$/;"	e	enum:radio_event_type
RADIO_EVENT_ERR	src/event/server_event.h	/^  RADIO_EVENT_ERR$/;"	e	enum:server_event_type
RADIO_EVENT_INCOMING_MSG_DONE	src/event/radio_event.h	/^  RADIO_EVENT_INCOMING_MSG_DONE,$/;"	e	enum:radio_event_type
RADIO_EVENT_INCOMING_MSG_START	src/event/radio_event.h	/^  RADIO_EVENT_INCOMING_MSG_START,$/;"	e	enum:radio_event_type
RAND_BUF_MASK	src/hw/audio/opus-1.2.1/PLC.h	/^#define RAND_BUF_MASK /;"	d
RAND_BUF_SIZE	src/hw/audio/opus-1.2.1/PLC.h	/^#define RAND_BUF_SIZE /;"	d
RAND_INCREMENT	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define RAND_INCREMENT /;"	d
RAND_MULTIPLIER	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define RAND_MULTIPLIER /;"	d
RATE_H	src/hw/audio/opus-1.2.1/rate.h	/^#define RATE_H$/;"	d
RD_Q10	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 RD_Q10;$/;"	m	struct:__anon19	file:
RD_Q10	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 RD_Q10;$/;"	m	struct:__anon20	file:
REDUCE_BITRATE_10_MS_BPS	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define REDUCE_BITRATE_10_MS_BPS /;"	d
RESAMPLER_DOWN_ORDER_FIR0	src/hw/audio/opus-1.2.1/resampler_rom.h	/^#define RESAMPLER_DOWN_ORDER_FIR0 /;"	d
RESAMPLER_DOWN_ORDER_FIR1	src/hw/audio/opus-1.2.1/resampler_rom.h	/^#define RESAMPLER_DOWN_ORDER_FIR1 /;"	d
RESAMPLER_DOWN_ORDER_FIR2	src/hw/audio/opus-1.2.1/resampler_rom.h	/^#define RESAMPLER_DOWN_ORDER_FIR2 /;"	d
RESAMPLER_MAX_BATCH_SIZE_IN	src/hw/audio/opus-1.2.1/resampler_private.h	/^#define RESAMPLER_MAX_BATCH_SIZE_IN /;"	d
RESAMPLER_MAX_BATCH_SIZE_MS	src/hw/audio/opus-1.2.1/resampler_private.h	/^#define RESAMPLER_MAX_BATCH_SIZE_MS /;"	d
RESAMPLER_MAX_FS_KHZ	src/hw/audio/opus-1.2.1/resampler_private.h	/^#define RESAMPLER_MAX_FS_KHZ /;"	d
RESAMPLER_ORDER_FIR_12	src/hw/audio/opus-1.2.1/resampler_rom.h	/^#define RESAMPLER_ORDER_FIR_12 /;"	d
RESTORE_STACK	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define RESTORE_STACK /;"	d
RESTORE_STACK	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define RESTORE_STACK$/;"	d
ROUND16	src/hw/audio/opus-1.2.1/arch.h	/^#define ROUND16(/;"	d
ROUND16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define ROUND16(/;"	d
ROUND16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define ROUND16(/;"	d
RX_BUFFER	src/module/radio.c	/^static char RX_BUFFER[FRAME_SIZE];   $/;"	v	file:
RandState	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 RandState[ DECISION_DELAY ];$/;"	m	struct:__anon19	file:
ResNrg	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int32                  ResNrg[ MAX_NB_SUBFR ];                 \/* Residual energy per subframe                         *\/$/;"	m	struct:__anon14
ResNrgQ	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    ResNrgQ[ MAX_NB_SUBFR ];                \/* Q domain for the residual energy > 0                 *\/$/;"	m	struct:__anon14
SAFE_SHL	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#define SAFE_SHL(/;"	d
SAFE_SHL	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#undef SAFE_SHL$/;"	d
SAFE_SHL	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define SAFE_SHL(/;"	d
SAFE_SHL	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef SAFE_SHL$/;"	d
SAMPLES_AUDIO_NET_OPUS_RADIO_SRC_AUDIO_AUDIO_CODEC_I2S_API_H_	src/hw/audio/codec-i2s.h	/^#define SAMPLES_AUDIO_NET_OPUS_RADIO_SRC_AUDIO_AUDIO_CODEC_I2S_API_H_$/;"	d
SAMPLE_LEN	src/hw/audio/codec-i2s.c	/^#define SAMPLE_LEN /;"	d	file:
SAMP_MAX	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define SAMP_MAX /;"	d
SAMP_MIN	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define SAMP_MIN /;"	d
SAT16	src/hw/audio/opus-1.2.1/arch.h	/^static OPUS_INLINE opus_int16 SAT16(opus_int32 x) {$/;"	f
SATURATE	src/hw/audio/opus-1.2.1/arch.h	/^#define SATURATE(/;"	d
SATURATE	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int SATURATE(int a, int b)$/;"	f
SATURATE	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SATURATE(/;"	d
SATURATE16	src/hw/audio/opus-1.2.1/arch.h	/^#define SATURATE16(/;"	d
SATURATE16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE opus_int16 SATURATE16(opus_int32 a)$/;"	f
SATURATE16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SATURATE16(/;"	d
SAVE_STACK	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define SAVE_STACK /;"	d
SAVE_STACK	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define SAVE_STACK$/;"	d
SCALEIN	src/hw/audio/opus-1.2.1/arch.h	/^#define SCALEIN(/;"	d
SCALEOUT	src/hw/audio/opus-1.2.1/arch.h	/^#define SCALEOUT(/;"	d
SCALE_COMPENS	src/hw/audio/opus-1.2.1/analysis.c	/^#define SCALE_COMPENS /;"	d	file:
SCALE_ENER	src/hw/audio/opus-1.2.1/analysis.c	/^#define SCALE_ENER(/;"	d	file:
SCALE_Q16	src/hw/audio/opus-1.2.1/gain_quant.c	/^#define SCALE_Q16 /;"	d	file:
SCRATCH_SIZE	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^#define SCRATCH_SIZE /;"	d	file:
SCREEN_COUNT	src/module/ui.c	/^  SCREEN_COUNT$/;"	e	enum:screen_id	file:
SEND_EVENT	src/module/common.h	/^#define SEND_EVENT(/;"	d
SERVER_EVENT_AUTH_DENIED	src/event/server_event.h	/^  SERVER_EVENT_AUTH_DENIED,$/;"	e	enum:server_event_type
SERVER_EVENT_BEGIN_AUTH	src/event/server_event.h	/^  SERVER_EVENT_BEGIN_AUTH,$/;"	e	enum:server_event_type
SERVER_EVENT_CONNECTED	src/event/server_event.h	/^  SERVER_EVENT_CONNECTED,$/;"	e	enum:server_event_type
SERVER_EVENT_CONNECTING	src/event/server_event.h	/^  SERVER_EVENT_CONNECTING,$/;"	e	enum:server_event_type
SERVER_EVENT_DISCONNECTED	src/event/server_event.h	/^  SERVER_EVENT_DISCONNECTED,$/;"	e	enum:server_event_type
SERVER_EVENT_TIMEOUT	src/event/server_event.h	/^  SERVER_EVENT_TIMEOUT,   \/\/ but this should never happenenenenn$/;"	e	enum:server_event_type
SERVER_EVENT_UNREACHABLE	src/event/server_event.h	/^  SERVER_EVENT_UNREACHABLE,$/;"	e	enum:server_event_type
SF_LENGTH_4KHZ	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^#define SF_LENGTH_4KHZ /;"	d	file:
SF_LENGTH_8KHZ	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^#define SF_LENGTH_8KHZ /;"	d	file:
SGTL5000_EGU_INSTANCE	src/hw/audio/codec-i2s.c	/^#define SGTL5000_EGU_INSTANCE /;"	d	file:
SGTL5000_EGU_IRQHandler	src/hw/audio/codec-i2s.c	/^#define SGTL5000_EGU_IRQHandler /;"	d	file:
SGTL5000_EGU_IRQHandler	src/hw/audio/codec-i2s.c	/^void SGTL5000_EGU_IRQHandler(void)$/;"	f
SGTL5000_EGU_IRQPriority	src/hw/audio/codec-i2s.c	/^#define SGTL5000_EGU_IRQPriority /;"	d	file:
SGTL5000_EGU_IRQn	src/hw/audio/codec-i2s.c	/^#define SGTL5000_EGU_IRQn /;"	d	file:
SGTL5000_EGU_TASK_STREAMING_STOP	src/hw/audio/codec-i2s.c	/^#define SGTL5000_EGU_TASK_STREAMING_STOP /;"	d	file:
SGTL5000_I2C_ADDR_CS_HIGH	src/hw/driver/sgtl5000.h	/^#define SGTL5000_I2C_ADDR_CS_HIGH	/;"	d
SGTL5000_I2C_ADDR_CS_LOW	src/hw/driver/sgtl5000.h	/^#define SGTL5000_I2C_ADDR_CS_LOW	/;"	d
SGTL5000_I2S_PIN_BCLK	src/hw/audio/codec-i2s.c	/^#define SGTL5000_I2S_PIN_BCLK /;"	d	file:
SGTL5000_I2S_PIN_LRCLK	src/hw/audio/codec-i2s.c	/^#define SGTL5000_I2S_PIN_LRCLK /;"	d	file:
SGTL5000_I2S_PIN_RX	src/hw/audio/codec-i2s.c	/^#define SGTL5000_I2S_PIN_RX /;"	d	file:
SGTL5000_I2S_PIN_TX	src/hw/audio/codec-i2s.c	/^#define SGTL5000_I2S_PIN_TX /;"	d	file:
SGTL5000_PIN_SYS_MCLK	src/hw/audio/codec-i2s.c	/^#define SGTL5000_PIN_SYS_MCLK /;"	d	file:
SGTL5000_STATE_IDLE	src/hw/audio/codec-i2s.c	/^    SGTL5000_STATE_IDLE,            \/* Initialized, but not running *\/$/;"	e	enum:__anon44	file:
SGTL5000_STATE_RUNNING	src/hw/audio/codec-i2s.c	/^    SGTL5000_STATE_RUNNING,         \/* Actively streaming audio to\/from application *\/$/;"	e	enum:__anon44	file:
SGTL5000_STATE_RUNNING_LOOPBACK	src/hw/audio/codec-i2s.c	/^    SGTL5000_STATE_RUNNING_LOOPBACK,\/* Actively running audio loopback (I2S_IN -> I2S_OUT) *\/$/;"	e	enum:__anon44	file:
SGTL5000_STATE_UNINITIALIZED	src/hw/audio/codec-i2s.c	/^    SGTL5000_STATE_UNINITIALIZED,   \/* Not initialized *\/$/;"	e	enum:__anon44	file:
SGTL5000_adcHighPassFilterDisable	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_adcHighPassFilterDisable(void)$/;"	f
SGTL5000_adcHighPassFilterEnable	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_adcHighPassFilterEnable(void)$/;"	f
SGTL5000_adcHighPassFilterFreeze	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_adcHighPassFilterFreeze(void)$/;"	f
SGTL5000_audioPostProcessorEnable	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_audioPostProcessorEnable(void)$/;"	f
SGTL5000_audioPreProcessorEnable	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_audioPreProcessorEnable(void)$/;"	f
SGTL5000_audioProcessorDisable	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_audioProcessorDisable(void)$/;"	f
SGTL5000_autoVolumeControl	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_autoVolumeControl(uint8_t maxGain, uint8_t lbiResponse, uint8_t hardLimit, float threshold, float attack, float decay)$/;"	f
SGTL5000_autoVolumeDisable	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_autoVolumeDisable(void)$/;"	f
SGTL5000_autoVolumeEnable	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_autoVolumeEnable(void)$/;"	f
SGTL5000_automate	src/hw/driver/sgtl5000.c	/^void SGTL5000_automate(uint8_t dap, uint8_t eq)$/;"	f
SGTL5000_automate_opt	src/hw/driver/sgtl5000.c	/^void SGTL5000_automate_opt(uint8_t dap, uint8_t eq, uint8_t filterCount)$/;"	f
SGTL5000_calcVol	src/hw/driver/sgtl5000.c	/^unsigned char SGTL5000_calcVol(float n, unsigned char range)$/;"	f
SGTL5000_configure	src/hw/driver/sgtl5000.c	/^void SGTL5000_configure(drv_sgtl5000_init_t * p_params)$/;"	f
SGTL5000_dacVolume	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_dacVolume(float n) \/\/ set both directly$/;"	f
SGTL5000_dacVolumeRamp	src/hw/driver/sgtl5000.c	/^bool SGTL5000_dacVolumeRamp()$/;"	f
SGTL5000_dacVolumeRampDisable	src/hw/driver/sgtl5000.c	/^bool SGTL5000_dacVolumeRampDisable()$/;"	f
SGTL5000_dacVolumeRampLinear	src/hw/driver/sgtl5000.c	/^bool SGTL5000_dacVolumeRampLinear()$/;"	f
SGTL5000_dacVolume_stereo	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_dacVolume_stereo(float left, float right)$/;"	f
SGTL5000_dap_audio_eq_band	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_dap_audio_eq_band(uint8_t bandNum, float n) \/\/ by signed percentage -100\/+100; dap_audio_eq(3);$/;"	f
SGTL5000_enhanceBass	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_enhanceBass(float lr_lev, float bass_lev)$/;"	f
SGTL5000_enhanceBassDisable	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_enhanceBassDisable(void)$/;"	f
SGTL5000_enhanceBassEnable	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_enhanceBassEnable(void)$/;"	f
SGTL5000_enhanceBass_opt	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_enhanceBass_opt(float lr_lev, float bass_lev, uint8_t hpf_bypass, uint8_t cutoff)$/;"	f
SGTL5000_eqBand	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_eqBand(uint8_t bandNum, float n)$/;"	f
SGTL5000_eqBands	src/hw/driver/sgtl5000.c	/^void SGTL5000_eqBands(float bass, float treble) \/\/ dap_audio_eq(2);$/;"	f
SGTL5000_eqBands_mid	src/hw/driver/sgtl5000.c	/^void SGTL5000_eqBands_mid(float bass, float mid_bass, float midrange, float mid_treble, float treble)$/;"	f
SGTL5000_eqFilter	src/hw/driver/sgtl5000.c	/^void SGTL5000_eqFilter(uint8_t filterNum, int *filterParameters)$/;"	f
SGTL5000_eqFilterCount	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_eqFilterCount(uint8_t n) \/\/ valid to n&7, 0 thru 7 filters enabled.$/;"	f
SGTL5000_eqSelect	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_eqSelect(uint8_t n) \/\/ 0=NONE, 1=PEQ (7 IIR Biquad filters), 2=TONE (tone), 3=GEQ (5 band EQ)$/;"	f
SGTL5000_inputSelect	src/hw/driver/sgtl5000.c	/^bool SGTL5000_inputSelect(int n) {$/;"	f
SGTL5000_killAutomation	src/hw/driver/sgtl5000.c	/^void SGTL5000_killAutomation(void) {$/;"	f
SGTL5000_lineInLevel	src/hw/driver/sgtl5000.c	/^bool SGTL5000_lineInLevel(uint8_t n) {$/;"	f
SGTL5000_lineInLevel_stereo	src/hw/driver/sgtl5000.c	/^bool SGTL5000_lineInLevel_stereo(uint8_t left, uint8_t right)$/;"	f
SGTL5000_lineOutLevel	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_lineOutLevel(uint8_t n)$/;"	f
SGTL5000_lineOutLevel_stereo	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_lineOutLevel_stereo(uint8_t left, uint8_t right)$/;"	f
SGTL5000_micGain	src/hw/driver/sgtl5000.c	/^bool SGTL5000_micGain(unsigned int dB)$/;"	f
SGTL5000_modify	src/hw/driver/sgtl5000.c	/^unsigned int SGTL5000_modify(uint16_t reg, uint16_t val, unsigned int iMask)$/;"	f
SGTL5000_muteHeadphone	src/hw/driver/sgtl5000.c	/^bool SGTL5000_muteHeadphone(void) {$/;"	f
SGTL5000_muteLineout	src/hw/driver/sgtl5000.c	/^bool SGTL5000_muteLineout(void) {$/;"	f
SGTL5000_read	src/hw/driver/sgtl5000.c	/^uint16_t SGTL5000_read(uint16_t reg)$/;"	f
SGTL5000_register_read	src/hw/driver/sgtl5000.c	/^static uint32_t SGTL5000_register_read(uint16_t reg_addr, uint16_t * p_reg_data)$/;"	f	file:
SGTL5000_register_write	src/hw/driver/sgtl5000.c	/^static uint32_t SGTL5000_register_write(uint16_t reg_addr, uint16_t reg_data)$/;"	f	file:
SGTL5000_register_write_verify	src/hw/driver/sgtl5000.c	/^static void SGTL5000_register_write_verify(uint16_t reg_addr, uint16_t reg_data, uint16_t ro_mask)$/;"	f	file:
SGTL5000_surroundSound	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_surroundSound(uint8_t width)$/;"	f
SGTL5000_surroundSoundDisable	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_surroundSoundDisable(void)$/;"	f
SGTL5000_surroundSoundEnable	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_surroundSoundEnable(void)$/;"	f
SGTL5000_surroundSound_opt	src/hw/driver/sgtl5000.c	/^unsigned short SGTL5000_surroundSound_opt(uint8_t width, uint8_t select)$/;"	f
SGTL5000_sys_mclk_enable	src/hw/audio/codec-i2s.c	/^static void SGTL5000_sys_mclk_enable()$/;"	f	file:
SGTL5000_unmuteADC	src/hw/driver/sgtl5000.c	/^bool SGTL5000_unmuteADC(void) {$/;"	f
SGTL5000_unmuteHeadphone	src/hw/driver/sgtl5000.c	/^bool SGTL5000_unmuteHeadphone(void) {$/;"	f
SGTL5000_unmuteLineout	src/hw/driver/sgtl5000.c	/^bool SGTL5000_unmuteLineout(void) {$/;"	f
SGTL5000_volumeInteger	src/hw/driver/sgtl5000.c	/^bool SGTL5000_volumeInteger(unsigned int n)$/;"	f
SGTL5000_volume_set	src/hw/driver/sgtl5000.c	/^uint32_t SGTL5000_volume_set(float volume_db)$/;"	f
SGTL5000_volume_stereo	src/hw/driver/sgtl5000.c	/^bool SGTL5000_volume_stereo(float left, float right)$/;"	f
SHAPE_LPC_WIN_MAX	src/hw/audio/opus-1.2.1/define.h	/^#define SHAPE_LPC_WIN_MAX /;"	d
SHAPE_WHITE_NOISE_FRACTION	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define SHAPE_WHITE_NOISE_FRACTION /;"	d
SHELL_CODEC_FRAME_LENGTH	src/hw/audio/opus-1.2.1/define.h	/^#define SHELL_CODEC_FRAME_LENGTH /;"	d
SHL	src/hw/audio/opus-1.2.1/arch.h	/^#define SHL(/;"	d
SHL	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SHL(/;"	d
SHL16	src/hw/audio/opus-1.2.1/arch.h	/^#define SHL16(/;"	d
SHL16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define SHL16(/;"	d
SHL16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SHL16(/;"	d
SHL16_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short SHL16_(int a, int shift, char *file, int line)$/;"	f
SHL32	src/hw/audio/opus-1.2.1/arch.h	/^#define SHL32(/;"	d
SHL32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define SHL32(/;"	d
SHL32	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SHL32(/;"	d
SHL32_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int SHL32_(opus_int64 a, int shift, char *file, int line)$/;"	f
SHR	src/hw/audio/opus-1.2.1/arch.h	/^#define SHR(/;"	d
SHR	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define SHR(/;"	d
SHR	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SHR(/;"	d
SHR16	src/hw/audio/opus-1.2.1/arch.h	/^#define SHR16(/;"	d
SHR16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define SHR16(/;"	d
SHR16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SHR16(/;"	d
SHR16_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short SHR16_(int a, int shift, char *file, int line)$/;"	f
SHR32	src/hw/audio/opus-1.2.1/arch.h	/^#define SHR32(/;"	d
SHR32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int SHR32(opus_int64 a, int shift)$/;"	f
SHR32	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SHR32(/;"	d
SHUTDOWN	src/module/ui.c	/^  SHUTDOWN,$/;"	e	enum:screen_id	file:
SIG2WORD16	src/hw/audio/opus-1.2.1/arch.h	/^#define SIG2WORD16(/;"	d
SIG2WORD16	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#define SIG2WORD16(/;"	d
SIG2WORD16	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^#undef SIG2WORD16$/;"	d
SIG2WORD16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define SIG2WORD16(/;"	d
SIG2WORD16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SIG2WORD16(/;"	d
SIG2WORD16_armv6	src/hw/audio/opus-1.2.1/arm/fixed_armv5e.h	/^static OPUS_INLINE opus_val16 SIG2WORD16_armv6(opus_val32 x)$/;"	f
SIG2WORD16_generic	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE opus_val16 SIG2WORD16_generic(celt_sig x)$/;"	f
SIG2WORD16_generic	src/hw/audio/opus-1.2.1/fixed_generic.h	/^static OPUS_INLINE opus_val16 SIG2WORD16_generic(celt_sig x)$/;"	f
SIGPROCFIX_API_MACROCOUNT_H	src/hw/audio/opus-1.2.1/MacroCount.h	/^#define SIGPROCFIX_API_MACROCOUNT_H$/;"	d
SIG_SAT	src/hw/audio/opus-1.2.1/arch.h	/^#define SIG_SAT /;"	d
SIG_SHIFT	src/hw/audio/opus-1.2.1/arch.h	/^#define SIG_SHIFT /;"	d
SILKInfo	src/hw/audio/opus-1.2.1/celt.h	/^} SILKInfo;$/;"	t	typeref:struct:__anon11
SILK_API_H	src/hw/audio/opus-1.2.1/API.h	/^#define SILK_API_H$/;"	d
SILK_BIQUAD_ALT_ARM_H	src/hw/audio/opus-1.2.1/arm/biquad_alt_arm.h	/^# define SILK_BIQUAD_ALT_ARM_H$/;"	d
SILK_CONTROL_H	src/hw/audio/opus-1.2.1/control.h	/^#define SILK_CONTROL_H$/;"	d
SILK_DEBUG	src/hw/audio/opus-1.2.1/debug.h	/^#define SILK_DEBUG /;"	d
SILK_DEBUG_H	src/hw/audio/opus-1.2.1/debug.h	/^#define SILK_DEBUG_H$/;"	d
SILK_DEBUG_STORE_CLOSE_FILES	src/hw/audio/opus-1.2.1/debug.h	/^#define SILK_DEBUG_STORE_CLOSE_FILES /;"	d
SILK_DEBUG_STORE_CLOSE_FILES	src/hw/audio/opus-1.2.1/debug.h	/^#define SILK_DEBUG_STORE_CLOSE_FILES$/;"	d
SILK_DEC_INVALID_FRAME_SIZE	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_DEC_INVALID_FRAME_SIZE /;"	d
SILK_DEC_INVALID_SAMPLING_FREQUENCY	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_DEC_INVALID_SAMPLING_FREQUENCY /;"	d
SILK_DEC_PAYLOAD_ERROR	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_DEC_PAYLOAD_ERROR /;"	d
SILK_DEC_PAYLOAD_TOO_LARGE	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_DEC_PAYLOAD_TOO_LARGE /;"	d
SILK_DEFINE_H	src/hw/audio/opus-1.2.1/define.h	/^#define SILK_DEFINE_H$/;"	d
SILK_ENC_FS_NOT_SUPPORTED	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_ENC_FS_NOT_SUPPORTED /;"	d
SILK_ENC_INPUT_INVALID_NO_OF_SAMPLES	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_ENC_INPUT_INVALID_NO_OF_SAMPLES /;"	d
SILK_ENC_INTERNAL_ERROR	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_ENC_INTERNAL_ERROR /;"	d
SILK_ENC_INVALID_CBR_SETTING	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_ENC_INVALID_CBR_SETTING /;"	d
SILK_ENC_INVALID_COMPLEXITY_SETTING	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_ENC_INVALID_COMPLEXITY_SETTING /;"	d
SILK_ENC_INVALID_DTX_SETTING	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_ENC_INVALID_DTX_SETTING /;"	d
SILK_ENC_INVALID_INBAND_FEC_SETTING	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_ENC_INVALID_INBAND_FEC_SETTING /;"	d
SILK_ENC_INVALID_LOSS_RATE	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_ENC_INVALID_LOSS_RATE /;"	d
SILK_ENC_INVALID_NUMBER_OF_CHANNELS_ERROR	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_ENC_INVALID_NUMBER_OF_CHANNELS_ERROR /;"	d
SILK_ENC_PACKET_SIZE_NOT_SUPPORTED	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_ENC_PACKET_SIZE_NOT_SUPPORTED /;"	d
SILK_ENC_PAYLOAD_BUF_TOO_SHORT	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_ENC_PAYLOAD_BUF_TOO_SHORT /;"	d
SILK_ERRORS_H	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_ERRORS_H$/;"	d
SILK_FIX_CONST	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define SILK_FIX_CONST(/;"	d
SILK_FIX_INLINES_H	src/hw/audio/opus-1.2.1/Inlines.h	/^#define SILK_FIX_INLINES_H$/;"	d
SILK_FIX_RESAMPLER_ROM_H	src/hw/audio/opus-1.2.1/resampler_rom.h	/^#define SILK_FIX_RESAMPLER_ROM_H$/;"	d
SILK_LPC_INV_PRED_GAIN_ARM_H	src/hw/audio/opus-1.2.1/arm/LPC_inv_pred_gain_arm.h	/^# define SILK_LPC_INV_PRED_GAIN_ARM_H$/;"	d
SILK_MACROS_ARMv4_H	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#define SILK_MACROS_ARMv4_H$/;"	d
SILK_MACROS_ARMv5E_H	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define SILK_MACROS_ARMv5E_H$/;"	d
SILK_MACROS_H	src/hw/audio/opus-1.2.1/macros.h	/^#define SILK_MACROS_H$/;"	d
SILK_MAIN_FIX_H	src/hw/audio/opus-1.2.1/main_FIX.h	/^#define SILK_MAIN_FIX_H$/;"	d
SILK_MAIN_H	src/hw/audio/opus-1.2.1/main.h	/^#define SILK_MAIN_H$/;"	d
SILK_MAX_FRAMES_PER_PACKET	src/hw/audio/opus-1.2.1/API.h	/^#define SILK_MAX_FRAMES_PER_PACKET /;"	d
SILK_MAX_ORDER_LPC	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define SILK_MAX_ORDER_LPC /;"	d
SILK_MAX_PULSES	src/hw/audio/opus-1.2.1/define.h	/^#define SILK_MAX_PULSES /;"	d
SILK_NO_ERROR	src/hw/audio/opus-1.2.1/errors.h	/^#define SILK_NO_ERROR /;"	d
SILK_NSQ_DEL_DEC_ARM_H	src/hw/audio/opus-1.2.1/arm/NSQ_del_dec_arm.h	/^#define SILK_NSQ_DEL_DEC_ARM_H$/;"	d
SILK_NSQ_H	src/hw/audio/opus-1.2.1/NSQ.h	/^#define SILK_NSQ_H$/;"	d
SILK_PE_DEFINES_H	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define SILK_PE_DEFINES_H$/;"	d
SILK_PE_MAX_COMPLEX	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define SILK_PE_MAX_COMPLEX /;"	d
SILK_PE_MID_COMPLEX	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define SILK_PE_MID_COMPLEX /;"	d
SILK_PE_MIN_COMPLEX	src/hw/audio/opus-1.2.1/pitch_est_defines.h	/^#define SILK_PE_MIN_COMPLEX /;"	d
SILK_PLC_H	src/hw/audio/opus-1.2.1/PLC.h	/^#define SILK_PLC_H$/;"	d
SILK_RESAMPLER_MAX_FIR_ORDER	src/hw/audio/opus-1.2.1/resampler_structs.h	/^#define SILK_RESAMPLER_MAX_FIR_ORDER /;"	d
SILK_RESAMPLER_MAX_IIR_ORDER	src/hw/audio/opus-1.2.1/resampler_structs.h	/^#define SILK_RESAMPLER_MAX_IIR_ORDER /;"	d
SILK_RESAMPLER_PRIVATE_H	src/hw/audio/opus-1.2.1/resampler_private.h	/^#define SILK_RESAMPLER_PRIVATE_H$/;"	d
SILK_RESAMPLER_STRUCTS_H	src/hw/audio/opus-1.2.1/resampler_structs.h	/^#define SILK_RESAMPLER_STRUCTS_H$/;"	d
SILK_SIGPROC_FIX_ARMv4_H	src/hw/audio/opus-1.2.1/arm/SigProc_FIX_armv4.h	/^#define SILK_SIGPROC_FIX_ARMv4_H$/;"	d
SILK_SIGPROC_FIX_ARMv5E_H	src/hw/audio/opus-1.2.1/arm/SigProc_FIX_armv5e.h	/^#define SILK_SIGPROC_FIX_ARMv5E_H$/;"	d
SILK_SIGPROC_FIX_H	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define SILK_SIGPROC_FIX_H$/;"	d
SILK_STRUCTS_FIX_H	src/hw/audio/opus-1.2.1/structs_FIX.h	/^#define SILK_STRUCTS_FIX_H$/;"	d
SILK_STRUCTS_H	src/hw/audio/opus-1.2.1/structs.h	/^#define SILK_STRUCTS_H$/;"	d
SILK_TABLES_H	src/hw/audio/opus-1.2.1/tables.h	/^#define SILK_TABLES_H$/;"	d
SILK_TIC_TOC	src/hw/audio/opus-1.2.1/debug.h	/^#define SILK_TIC_TOC /;"	d
SILK_TUNING_PARAMETERS_H	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define SILK_TUNING_PARAMETERS_H$/;"	d
SILK_TYPEDEF_H	src/hw/audio/opus-1.2.1/typedef.h	/^#define SILK_TYPEDEF_H$/;"	d
SILK_WARPED_AUTOCORRELATION_FIX_ARM_H	src/hw/audio/opus-1.2.1/arm/warped_autocorrelation_FIX_arm.h	/^# define SILK_WARPED_AUTOCORRELATION_FIX_ARM_H$/;"	d
SMALL_DIV_TABLE	src/hw/audio/opus-1.2.1/entcode.c	/^const opus_uint32 SMALL_DIV_TABLE[129] = {$/;"	v
SNR_dB_Q7	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     SNR_dB_Q7;                         \/* Quality setting                                                  *\/$/;"	m	struct:__anon33
SPARSE_SNR_INCR_dB	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define SPARSE_SNR_INCR_dB /;"	d
SPEAKER_BUFFER_SIZE	src/hw/audio/codec2.c	/^#define SPEAKER_BUFFER_SIZE /;"	d	file:
SPEAKER_BUFFER_SIZE	src/hw/old-codec.c	/^#define SPEAKER_BUFFER_SIZE /;"	d	file:
SPEECH_ACTIVITY_DTX_THRES	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define SPEECH_ACTIVITY_DTX_THRES /;"	d
SPREAD_AGGRESSIVE	src/hw/audio/opus-1.2.1/bands.h	/^#define SPREAD_AGGRESSIVE /;"	d
SPREAD_LIGHT	src/hw/audio/opus-1.2.1/bands.h	/^#define SPREAD_LIGHT /;"	d
SPREAD_NONE	src/hw/audio/opus-1.2.1/bands.h	/^#define SPREAD_NONE /;"	d
SPREAD_NORMAL	src/hw/audio/opus-1.2.1/bands.h	/^#define SPREAD_NORMAL /;"	d
SROUND16	src/hw/audio/opus-1.2.1/arch.h	/^#define SROUND16(/;"	d
SROUND16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define SROUND16(/;"	d
SROUND16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SROUND16(/;"	d
STACK_ALLOC_H	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define STACK_ALLOC_H$/;"	d
STATE_BEGIN_SHUTDOWN	src/module/ui.c	/^  STATE_BEGIN_SHUTDOWN,$/;"	e	enum:state_type	file:
STATE_BOOT	src/module/ui.c	/^  STATE_BOOT,$/;"	e	enum:state_type	file:
STATE_CONNECTED	src/module/modem.c	/^  STATE_CONNECTED,$/;"	e	enum:state_type	file:
STATE_CONNECTED	src/module/sdk_modem.c	/^	STATE_CONNECTED,$/;"	e	enum:state_type	file:
STATE_CONNECTING	src/hw/uart.c	/^  STATE_CONNECTING,$/;"	e	enum:__anon45	file:
STATE_CONNECTING	src/module/modem.c	/^  STATE_CONNECTING,$/;"	e	enum:state_type	file:
STATE_CONNECTING	src/module/sdk_modem.c	/^	STATE_CONNECTING,$/;"	e	enum:state_type	file:
STATE_CONNECTING_LTE	src/module/ui.c	/^  STATE_CONNECTING_LTE,$/;"	e	enum:state_type	file:
STATE_CONNECTING_SERVER	src/module/ui.c	/^  STATE_CONNECTING_SERVER,$/;"	e	enum:state_type	file:
STATE_DISCONNECTED	src/module/modem.c	/^  STATE_DISCONNECTED,$/;"	e	enum:state_type	file:
STATE_DISCONNECTED	src/module/sdk_modem.c	/^	STATE_DISCONNECTED,$/;"	e	enum:state_type	file:
STATE_DISCONNECTED	src/module/ui.c	/^  STATE_DISCONNECTED,$/;"	e	enum:state_type	file:
STATE_DOWNLOADING	src/hw/uart.c	/^  STATE_DOWNLOADING,$/;"	e	enum:__anon45	file:
STATE_ERROR	src/hw/uart.c	/^  STATE_ERROR,$/;"	e	enum:__anon45	file:
STATE_IDLE	src/hw/uart.c	/^  STATE_IDLE,$/;"	e	enum:__anon45	file:
STATE_INCOMING_MSG	src/module/ui.c	/^  STATE_INCOMING_MSG,$/;"	e	enum:state_type	file:
STATE_INIT	src/module/modem.c	/^  STATE_INIT,$/;"	e	enum:state_type	file:
STATE_INIT	src/module/sdk_modem.c	/^	STATE_INIT,$/;"	e	enum:state_type	file:
STATE_LISTENING_ACTIVE	src/module/ui.c	/^  STATE_LISTENING_ACTIVE,  $/;"	e	enum:state_type	file:
STATE_LISTENING_IDLE	src/module/ui.c	/^  STATE_LISTENING_IDLE, $/;"	e	enum:state_type	file:
STATE_OFF	src/hw/uart.c	/^  STATE_OFF,$/;"	e	enum:__anon45	file:
STATE_SHUTDOWN	src/hw/uart.c	/^  STATE_SHUTDOWN$/;"	e	enum:__anon45	file:
STATE_SHUTDOWN	src/module/modem.c	/^  STATE_SHUTDOWN,$/;"	e	enum:state_type	file:
STATE_SHUTDOWN	src/module/sdk_modem.c	/^	STATE_SHUTDOWN,$/;"	e	enum:state_type	file:
STATE_SYNCING	src/hw/uart.c	/^  STATE_SYNCING,$/;"	e	enum:__anon45	file:
STATE_TRANSMITTING	src/module/ui.c	/^  STATE_TRANSMITTING,$/;"	e	enum:state_type	file:
STEREO_INTERP_LEN_MS	src/hw/audio/opus-1.2.1/define.h	/^#define STEREO_INTERP_LEN_MS /;"	d
STEREO_QUANT_SUB_STEPS	src/hw/audio/opus-1.2.1/define.h	/^#define STEREO_QUANT_SUB_STEPS /;"	d
STEREO_QUANT_TAB_SIZE	src/hw/audio/opus-1.2.1/define.h	/^#define STEREO_QUANT_TAB_SIZE /;"	d
STEREO_RATIO_SMOOTH_COEF	src/hw/audio/opus-1.2.1/define.h	/^#define STEREO_RATIO_SMOOTH_COEF /;"	d
SUB16	src/hw/audio/opus-1.2.1/arch.h	/^#define SUB16(/;"	d
SUB16	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define SUB16(/;"	d
SUB16	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SUB16(/;"	d
SUB16_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE short SUB16_(int a, int b, char *file, int line)$/;"	f
SUB32	src/hw/audio/opus-1.2.1/arch.h	/^#define SUB32(/;"	d
SUB32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define SUB32(/;"	d
SUB32	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SUB32(/;"	d
SUB32_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE int SUB32_(opus_int64 a, opus_int64 b, char *file, int line)$/;"	f
SUB32_ovflw	src/hw/audio/opus-1.2.1/arch.h	/^#define SUB32_ovflw(/;"	d
SUB32_ovflw	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define SUB32_ovflw(/;"	d
SUB32_ovflw	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define SUB32_ovflw(/;"	d
SUBFR_SMTH_COEF	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define SUBFR_SMTH_COEF /;"	d
SUB_FRAME_LENGTH_MS	src/hw/audio/opus-1.2.1/define.h	/^#define SUB_FRAME_LENGTH_MS /;"	d
SYS_MCLK_TIMER_COMPARE_CHANNEL	src/hw/audio/codec-i2s.c	/^#define SYS_MCLK_TIMER_COMPARE_CHANNEL /;"	d	file:
SYS_MCLK_TIMER_FREQUENCY	src/hw/audio/codec-i2s.c	/^#define SYS_MCLK_TIMER_FREQUENCY /;"	d	file:
SYS_MCLK_TIMER_ID	src/hw/audio/codec-i2s.c	/^#define SYS_MCLK_TIMER_ID /;"	d	file:
S_MUL	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#   define S_MUL(/;"	d
Seed	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 Seed;$/;"	m	struct:__anon19	file:
Seed	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    Seed;$/;"	m	struct:__anon32
SeedInit	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 SeedInit;$/;"	m	struct:__anon19	file:
Shape_Q14	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 Shape_Q14[ DECISION_DELAY ];$/;"	m	struct:__anon19	file:
SideInfoIndices	src/hw/audio/opus-1.2.1/structs.h	/^} SideInfoIndices;$/;"	t	typeref:struct:__anon32
SigProcFIX_CLZ16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    SigProcFIX_CLZ16$/;"	d
SigProcFIX_CLZ16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 SigProcFIX_CLZ16(opus_int16 in16)$/;"	f
SigProcFIX_CLZ32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef SigProcFIX_CLZ32$/;"	d
SigProcFIX_CLZ32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 SigProcFIX_CLZ32(opus_int32 in32)$/;"	f
StereoWidthState	src/hw/audio/opus-1.2.1/opus_encoder.c	/^} StereoWidthState;$/;"	t	typeref:struct:__anon25	file:
TARGET_RATE_TAB_SZ	src/hw/audio/opus-1.2.1/define.h	/^#define TARGET_RATE_TAB_SZ /;"	d
TIC	src/hw/audio/opus-1.2.1/debug.h	/^#define TIC(/;"	d
TOC	src/hw/audio/opus-1.2.1/debug.h	/^#define TOC(/;"	d
TONALITY_ANALYSIS_RESET_START	src/hw/audio/opus-1.2.1/analysis.h	/^#define TONALITY_ANALYSIS_RESET_START /;"	d
TOO_SMALL	src/hw/audio/libc_opus/newlib_libc_string_memmove.c	/^#define TOO_SMALL(/;"	d	file:
TOO_SMALL	src/hw/audio/libc_opus/newlib_libc_string_mempcpy.c	/^#define TOO_SMALL(/;"	d	file:
TOO_SMALL	src/hw/audio/libc_opus/newlib_libc_string_memset.c	/^#define TOO_SMALL(/;"	d	file:
TOTAL_MODES	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^#define TOTAL_MODES /;"	d
TOTAL_MODES	src/hw/audio/opus-1.2.1/static_modes_float.h	/^#define TOTAL_MODES /;"	d
TRANSITION_FRAMES	src/hw/audio/opus-1.2.1/define.h	/^#define TRANSITION_FRAMES /;"	d
TRANSITION_INT_NUM	src/hw/audio/opus-1.2.1/define.h	/^#define TRANSITION_INT_NUM /;"	d
TRANSITION_INT_STEPS	src/hw/audio/opus-1.2.1/define.h	/^#define TRANSITION_INT_STEPS /;"	d
TRANSITION_NA	src/hw/audio/opus-1.2.1/define.h	/^#define TRANSITION_NA /;"	d
TRANSITION_NB	src/hw/audio/opus-1.2.1/define.h	/^#define TRANSITION_NB /;"	d
TRANSITION_TIME_MS	src/hw/audio/opus-1.2.1/define.h	/^#define TRANSITION_TIME_MS /;"	d
TRANSMITTING	src/module/ui.c	/^  TRANSMITTING,$/;"	e	enum:screen_id	file:
TRIG_UPSCALE	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define TRIG_UPSCALE /;"	d
TWID_MAX	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define TWID_MAX /;"	d
TX_BUFFER	src/module/radio.c	/^static char TX_BUFFER[FRAME_SIZE];   $/;"	v	file:
TYPE_NO_VOICE_ACTIVITY	src/hw/audio/opus-1.2.1/define.h	/^#define TYPE_NO_VOICE_ACTIVITY /;"	d
TYPE_UNVOICED	src/hw/audio/opus-1.2.1/define.h	/^#define TYPE_UNVOICED /;"	d
TYPE_VOICED	src/hw/audio/opus-1.2.1/define.h	/^#define TYPE_VOICED /;"	d
TargetRate_bps	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                   TargetRate_bps;                    \/* Target bitrate (bps)                                             *\/$/;"	m	struct:__anon33
Tilt_Q14	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    Tilt_Q14[          MAX_NB_SUBFR ];$/;"	m	struct:__anon14
Tilt_smth_Q16	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int32                  Tilt_smth_Q16;$/;"	m	struct:__anon12
TonalityAnalysisState	src/hw/audio/opus-1.2.1/analysis.h	/^} TonalityAnalysisState;$/;"	t	typeref:struct:__anon41
UADD32	src/hw/audio/opus-1.2.1/arch.h	/^#define UADD32(/;"	d
UADD32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define UADD32(/;"	d
UADD32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#undef UADD32$/;"	d
UADD32_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE unsigned int UADD32_(opus_uint64 a, opus_uint64 b, char *file, int line)$/;"	f
UART_BUFFER_SIZE	src/hw/uart.c	/^#define UART_BUFFER_SIZE /;"	d	file:
UI_QUEUE_ALIGNMENT	src/module/ui.c	/^#define UI_QUEUE_ALIGNMENT /;"	d	file:
UI_QUEUE_ENTRY_COUNT	src/module/ui.c	/^#define UI_QUEUE_ENTRY_COUNT /;"	d	file:
UNALIGNED	src/hw/audio/libc_opus/newlib_libc_string_memmove.c	/^#define UNALIGNED(/;"	d	file:
UNALIGNED	src/hw/audio/libc_opus/newlib_libc_string_mempcpy.c	/^#define UNALIGNED(/;"	d	file:
UNALIGNED	src/hw/audio/libc_opus/newlib_libc_string_memset.c	/^#define UNALIGNED(/;"	d	file:
USE_CELT_FIR	src/hw/audio/opus-1.2.1/LPC_analysis_filter.c	/^#define USE_CELT_FIR /;"	d	file:
USE_HARM_SHAPING	src/hw/audio/opus-1.2.1/define.h	/^#define USE_HARM_SHAPING /;"	d
USE_SMALL_DIV_TABLE	src/hw/audio/opus-1.2.1/entcode.h	/^#define USE_SMALL_DIV_TABLE$/;"	d
USE_silk_resampler_copy	src/hw/audio/opus-1.2.1/resampler.c	/^#define USE_silk_resampler_copy /;"	d	file:
USE_silk_resampler_private_IIR_FIR	src/hw/audio/opus-1.2.1/resampler.c	/^#define USE_silk_resampler_private_IIR_FIR /;"	d	file:
USE_silk_resampler_private_down_FIR	src/hw/audio/opus-1.2.1/resampler.c	/^#define USE_silk_resampler_private_down_FIR /;"	d	file:
USE_silk_resampler_private_up2_HQ_wrapper	src/hw/audio/opus-1.2.1/resampler.c	/^#define USE_silk_resampler_private_up2_HQ_wrapper /;"	d	file:
USUB32	src/hw/audio/opus-1.2.1/arch.h	/^#define USUB32(/;"	d
USUB32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define USUB32(/;"	d
USUB32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#undef USUB32$/;"	d
USUB32_	src/hw/audio/opus-1.2.1/fixed_debug.h	/^static OPUS_INLINE unsigned int USUB32_(opus_uint64 a, opus_uint64 b, char *file, int line)$/;"	f
VADFlag	src/hw/audio/opus-1.2.1/API.h	/^    opus_int    VADFlag;                                \/* Voice activity for packet                            *\/$/;"	m	struct:__anon22
VADFlags	src/hw/audio/opus-1.2.1/API.h	/^    opus_int    VADFlags[ SILK_MAX_FRAMES_PER_PACKET ]; \/* Voice activity for each frame in packet              *\/$/;"	m	struct:__anon22
VAD_INTERNAL_SUBFRAMES	src/hw/audio/opus-1.2.1/define.h	/^#define VAD_INTERNAL_SUBFRAMES /;"	d
VAD_INTERNAL_SUBFRAMES_LOG2	src/hw/audio/opus-1.2.1/define.h	/^#define VAD_INTERNAL_SUBFRAMES_LOG2 /;"	d
VAD_NEGATIVE_OFFSET_Q5	src/hw/audio/opus-1.2.1/define.h	/^#define VAD_NEGATIVE_OFFSET_Q5 /;"	d
VAD_NOISE_LEVELS_BIAS	src/hw/audio/opus-1.2.1/define.h	/^#define VAD_NOISE_LEVELS_BIAS /;"	d
VAD_NOISE_LEVEL_SMOOTH_COEF_Q16	src/hw/audio/opus-1.2.1/define.h	/^#define VAD_NOISE_LEVEL_SMOOTH_COEF_Q16 /;"	d
VAD_N_BANDS	src/hw/audio/opus-1.2.1/define.h	/^#define VAD_N_BANDS /;"	d
VAD_SNR_FACTOR_Q16	src/hw/audio/opus-1.2.1/define.h	/^#define VAD_SNR_FACTOR_Q16 /;"	d
VAD_SNR_SMOOTH_COEF_Q18	src/hw/audio/opus-1.2.1/define.h	/^#define VAD_SNR_SMOOTH_COEF_Q18 /;"	d
VAD_flags	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    VAD_flags[ MAX_FRAMES_PER_PACKET ];$/;"	m	struct:__anon36
VAD_flags	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    VAD_flags[ MAX_FRAMES_PER_PACKET ];$/;"	m	struct:__anon33
VARDECL	src/hw/audio/opus-1.2.1/stack_alloc.h	/^#define VARDECL(/;"	d
VARIABLE_HP_MAX_CUTOFF_HZ	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define VARIABLE_HP_MAX_CUTOFF_HZ /;"	d
VARIABLE_HP_MAX_DELTA_FREQ	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define VARIABLE_HP_MAX_DELTA_FREQ /;"	d
VARIABLE_HP_MIN_CUTOFF_HZ	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define VARIABLE_HP_MIN_CUTOFF_HZ /;"	d
VARIABLE_HP_SMTH_COEF1	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define VARIABLE_HP_SMTH_COEF1 /;"	d
VARIABLE_HP_SMTH_COEF2	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define VARIABLE_HP_SMTH_COEF2 /;"	d
VERIFY_INT	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define VERIFY_INT(/;"	d
VERIFY_SHORT	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define VERIFY_SHORT(/;"	d
VERIFY_UINT	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define VERIFY_UINT(/;"	d
VERY_LARGE16	src/hw/audio/opus-1.2.1/arch.h	/^#define VERY_LARGE16 /;"	d
VERY_SMALL	src/hw/audio/opus-1.2.1/arch.h	/^#define VERY_SMALL /;"	d
VQ_H	src/hw/audio/opus-1.2.1/vq.h	/^#define VQ_H$/;"	d
VSHR32	src/hw/audio/opus-1.2.1/arch.h	/^#define VSHR32(/;"	d
VSHR32	src/hw/audio/opus-1.2.1/fixed_debug.h	/^#define VSHR32(/;"	d
VSHR32	src/hw/audio/opus-1.2.1/fixed_generic.h	/^#define VSHR32(/;"	d
V_PITCH_GAIN_START_MAX_Q14	src/hw/audio/opus-1.2.1/PLC.h	/^#define V_PITCH_GAIN_START_MAX_Q14 /;"	d
V_PITCH_GAIN_START_MIN_Q14	src/hw/audio/opus-1.2.1/PLC.h	/^#define V_PITCH_GAIN_START_MIN_Q14 /;"	d
VorbisLayout	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^} VorbisLayout;$/;"	t	typeref:struct:__anon16	file:
WARPING_MULTIPLIER	src/hw/audio/opus-1.2.1/tuning_parameters.h	/^#define WARPING_MULTIPLIER /;"	d
WriteFlag	src/hw/audio/codec2_pdm_mic.c	/^bool WriteFlag = 0;$/;"	v
XX	src/hw/audio/opus-1.2.1/opus_encoder.c	/^   opus_val32 XX, XY, YY;$/;"	m	struct:__anon25	file:
XY	src/hw/audio/opus-1.2.1/opus_encoder.c	/^   opus_val32 XX, XY, YY;$/;"	m	struct:__anon25	file:
XnrgSubfr	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  XnrgSubfr[ VAD_N_BANDS ];       \/* Subframe energies                                                    *\/$/;"	m	struct:__anon27
Xq_Q14	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 Xq_Q14[    DECISION_DELAY ];$/;"	m	struct:__anon19	file:
YY	src/hw/audio/opus-1.2.1/opus_encoder.c	/^   opus_val32 XX, XY, YY;$/;"	m	struct:__anon25	file:
_APP_MODULE_EVENT_H_	src/event/app.h	/^#define _APP_MODULE_EVENT_H_$/;"	d
_HW_EVENT_H	src/event/hw_event.h	/^#define _HW_EVENT_H$/;"	d
_ISOC99_SOURCE	src/hw/audio/opus-1.2.1/float_cast.h	/^#define _ISOC99_SOURCE /;"	d
_ISOC9X_SOURCE	src/hw/audio/opus-1.2.1/float_cast.h	/^#define _ISOC9X_SOURCE /;"	d
_MLP_H_	src/hw/audio/opus-1.2.1/mlp.h	/^#define _MLP_H_$/;"	d
_MODEM_EVENT_H	src/event/modem_event.h	/^#define _MODEM_EVENT_H$/;"	d
_RADIO_EVENT_H	src/event/radio_event.h	/^#define _RADIO_EVENT_H$/;"	d
_SERVER_EVENT_H	src/event/server_event.h	/^#define _SERVER_EVENT_H$/;"	d
__DRV_SGTL5000_H__	src/hw/driver/sgtl5000.h	/^#define __DRV_SGTL5000_H__$/;"	d
__GNUC_PREREQ	src/hw/audio/opus-1.2.1/arch.h	/^#   define __GNUC_PREREQ(/;"	d
__USE_ISOC99	src/hw/audio/opus-1.2.1/float_cast.h	/^#define __USE_ISOC99 /;"	d
__USE_ISOC9X	src/hw/audio/opus-1.2.1/float_cast.h	/^#define __USE_ISOC9X /;"	d
__celt_check_analysis_ptr	src/hw/audio/opus-1.2.1/celt.h	/^#define __celt_check_analysis_ptr(/;"	d
__celt_check_mode_ptr_ptr	src/hw/audio/opus-1.2.1/celt.h	/^#define __celt_check_mode_ptr_ptr(/;"	d
__celt_check_silkinfo_ptr	src/hw/audio/opus-1.2.1/celt.h	/^#define __celt_check_silkinfo_ptr(/;"	d
__opus_check_decstate_ptr	src/hw/audio/opus-1.2.1/opus_multistream.h	/^#define __opus_check_decstate_ptr(/;"	d
__opus_check_encstate_ptr	src/hw/audio/opus-1.2.1/opus_multistream.h	/^#define __opus_check_encstate_ptr(/;"	d
__opus_check_int	src/hw/audio/opus-1.2.1/opus_defines.h	/^    #define __opus_check_int(/;"	d
__opus_check_int_ptr	src/hw/audio/opus-1.2.1/opus_defines.h	/^    #define __opus_check_int_ptr(/;"	d
__opus_check_uint_ptr	src/hw/audio/opus-1.2.1/opus_defines.h	/^    #define __opus_check_uint_ptr(/;"	d
__opus_check_val16_ptr	src/hw/audio/opus-1.2.1/opus_defines.h	/^    #define __opus_check_val16_ptr(/;"	d
_celt_autocorr	src/hw/audio/opus-1.2.1/celt_lpc.c	/^int _celt_autocorr($/;"	f
_celt_cos_pi_2	src/hw/audio/opus-1.2.1/mathops.c	/^static OPUS_INLINE opus_val16 _celt_cos_pi_2(opus_val16 x)$/;"	f	file:
_celt_fatal	src/hw/audio/opus-1.2.1/arch.h	/^static OPUS_INLINE void _celt_fatal(const char *str, const char *file, int line)$/;"	f
_celt_lpc	src/hw/audio/opus-1.2.1/celt_lpc.c	/^void _celt_lpc($/;"	f
_decode_mem	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   celt_sig _decode_mem[1]; \/* Size = channels*(DECODE_BUFFER_SIZE+mode->overlap) *\/$/;"	m	struct:OpusCustomDecoder	file:
_ecintrin_H	src/hw/audio/opus-1.2.1/ecintrin.h	/^# define _ecintrin_H /;"	d
_entcode_H	src/hw/audio/opus-1.2.1/entcode.h	/^# define _entcode_H /;"	d
_entdec_H	src/hw/audio/opus-1.2.1/entdec.h	/^# define _entdec_H /;"	d
_entenc_H	src/hw/audio/opus-1.2.1/entenc.h	/^# define _entenc_H /;"	d
_mfrngcode_H	src/hw/audio/opus-1.2.1/mfrngcod.h	/^# define _mfrngcode_H /;"	d
_opus_false	src/hw/audio/opus-1.2.1/stack_alloc.h	/^static OPUS_INLINE int _opus_false(void) {return 0;}$/;"	f
_silk_fatal	src/hw/audio/opus-1.2.1/typedef.h	/^static OPUS_INLINE void _silk_fatal(const char *str, const char *file, int line)$/;"	f
_silk_resampler_state_struct	src/hw/audio/opus-1.2.1/resampler_structs.h	/^typedef struct _silk_resampler_state_struct{$/;"	s
active_time	src/event/modem_event.h	/^  int active_time;$/;"	m	struct:modem_psm
activity	src/hw/audio/opus-1.2.1/celt.h	/^   float activity;$/;"	m	struct:__anon10
activity_probability	src/hw/audio/opus-1.2.1/celt.h	/^   float activity_probability;$/;"	m	struct:__anon10
adjust_rsrp	src/module/sdk_modem.c	/^static inline int adjust_rsrp(int input)$/;"	f	file:
adjust_rsrq	src/module/sdk_modem.c	/^static inline int adjust_rsrq(int input)$/;"	f	file:
alg_quant	src/hw/audio/opus-1.2.1/vq.c	/^unsigned alg_quant(celt_norm *X, int N, int K, int spread, int B, ec_enc *enc,$/;"	f
alg_unquant	src/hw/audio/opus-1.2.1/vq.c	/^unsigned alg_unquant(celt_norm *X, int N, int K, int spread, int B,$/;"	f
align	src/hw/audio/opus-1.2.1/opus_private.h	/^static OPUS_INLINE int align(int i)$/;"	f
allocVectors	src/hw/audio/opus-1.2.1/modes.h	/^   const unsigned char   *allocVectors;   \/**< Number of bits in each band for several rates *\/$/;"	m	struct:OpusCustomMode
alloc_trim_analysis	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static int alloc_trim_analysis(const CELTMode *m, const celt_norm *X,$/;"	f	file:
allowBandwidthSwitch	src/hw/audio/opus-1.2.1/control.h	/^    opus_int allowBandwidthSwitch;$/;"	m	struct:__anon8
allowBandwidthSwitch	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    allowBandwidthSwitch;$/;"	m	struct:__anon15
allow_bandwidth_switch	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     allow_bandwidth_switch;            \/* Flag indicating that switching of internal bandwidth is allowed  *\/$/;"	m	struct:__anon33
ambisonics_rate_allocation	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static void ambisonics_rate_allocation($/;"	f	file:
amp2Log2	src/hw/audio/opus-1.2.1/quant_bands.c	/^void amp2Log2(const CELTMode *m, int effEnd, int end,$/;"	f
ana_ctrl	src/hw/driver/sgtl5000.c	/^static uint16_t ana_ctrl;$/;"	v	file:
analysis	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   AnalysisInfo analysis;$/;"	m	struct:OpusCustomEncoder	file:
analysis	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    TonalityAnalysisState analysis;$/;"	m	struct:OpusEncoder	file:
analysis_offset	src/hw/audio/opus-1.2.1/analysis.h	/^   int analysis_offset;$/;"	m	struct:__anon41
analysis_window	src/hw/audio/opus-1.2.1/analysis.c	/^static const float analysis_window[240] = {$/;"	v	file:
angle	src/hw/audio/opus-1.2.1/analysis.h	/^   float angle[240];$/;"	m	struct:__anon41
anti_collapse	src/hw/audio/opus-1.2.1/bands.c	/^void anti_collapse(const CELTMode *m, celt_norm *X_, unsigned char *collapse_masks, int LM, int C, int size,$/;"	f
app	src/main.c	/^		struct app_event app;$/;"	m	union:app_msg::__anon53	typeref:struct:app_msg::__anon53::app_event	file:
app	src/main.c	/^LOG_MODULE_REGISTER(app);$/;"	v
app	src/module/modem.c	/^    struct app_event app;$/;"	m	union:modem_msg::__anon51	typeref:struct:modem_msg::__anon51::app_event	file:
app	src/module/motorola.c	/^    struct app_event   app;$/;"	m	union:radio_msg::__anon48	typeref:struct:radio_msg::__anon48::app_event	file:
app	src/module/sdk_modem.c	/^		struct app_module_event app;$/;"	m	union:modem_msg_data::__anon49	typeref:struct:modem_msg_data::__anon49::app_module_event	file:
app_event_handler	src/module/modem.c	/^static bool app_event_handler( const struct app_event_header *h ) {$/;"	f	file:
app_module_data_type	src/event/app.h	/^enum app_module_data_type {$/;"	g
app_module_event	src/event/app.h	/^APP_EVENT_TYPE_DECLARE(app_module_event);$/;"	v
app_module_event	src/event/app.h	/^struct app_module_event {$/;"	s
app_module_event_type	src/event/app.h	/^enum app_module_event_type {$/;"	g
app_msg	src/main.c	/^struct app_msg {$/;"	s	file:
application	src/hw/audio/opus-1.2.1/analysis.h	/^   int application;$/;"	m	struct:__anon41
application	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          application;$/;"	m	struct:OpusEncoder	file:
application	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^   int application;$/;"	m	struct:OpusMSEncoder	file:
arch	src/hw/audio/opus-1.2.1/analysis.h	/^   int arch;$/;"	m	struct:__anon41
arch	src/hw/audio/opus-1.2.1/bands.c	/^   int arch;$/;"	m	struct:band_ctx	file:
arch	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int arch;$/;"	m	struct:OpusCustomDecoder	file:
arch	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int arch;$/;"	m	struct:OpusCustomEncoder	file:
arch	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   int          arch;$/;"	m	struct:OpusDecoder	file:
arch	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          arch;$/;"	m	struct:OpusEncoder	file:
arch	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^   int arch;$/;"	m	struct:OpusMSEncoder	file:
arch	src/hw/audio/opus-1.2.1/structs.h	/^    int                          arch;$/;"	m	struct:__anon33
arch	src/hw/audio/opus-1.2.1/structs.h	/^    int                         arch;$/;"	m	struct:__anon36
arch_fft	src/hw/audio/opus-1.2.1/kiss_fft.h	/^    arch_fft_state *arch_fft;$/;"	m	struct:kiss_fft_state
arch_fft_state	src/hw/audio/opus-1.2.1/kiss_fft.h	/^typedef struct arch_fft_state{$/;"	s
arch_fft_state	src/hw/audio/opus-1.2.1/kiss_fft.h	/^} arch_fft_state;$/;"	t	typeref:struct:arch_fft_state
audio_codec_I2S_init	src/hw/audio/codec-i2s.c	/^void audio_codec_I2S_init(struct k_msgq *p_msgq_Rx, struct k_msgq *p_msgq_Tx)$/;"	f
audio_codec_I2S_start	src/hw/audio/codec-i2s.c	/^uint32_t audio_codec_I2S_start(void)$/;"	f
audio_codec_I2S_stop	src/hw/audio/codec-i2s.c	/^uint32_t audio_codec_I2S_stop(void)$/;"	f
audio_codec_opus_init	src/hw/audio/opus.c	/^void audio_codec_opus_init(void)$/;"	f
audio_rx_process	src/hw/audio/audio.c	/^void audio_rx_process()$/;"	f
audio_rx_task	src/hw/audio/audio.c	/^static void audio_rx_task(){$/;"	f	file:
audio_rx_thread_data	src/hw/audio/audio.c	/^struct k_thread audio_rx_thread_data;$/;"	v	typeref:struct:k_thread
audio_rx_tid	src/hw/audio/audio.c	/^k_tid_t audio_rx_tid;$/;"	v
audio_stats_counter	src/hw/audio/audio.c	/^audio_stats_counter_t audio_stats_counter;$/;"	v
audio_system_init	src/hw/audio/audio.c	/^void audio_system_init()$/;"	f
audio_system_stop	src/hw/audio/audio.c	/^void audio_system_stop(){$/;"	f
audio_tx_process	src/hw/audio/audio.c	/^void audio_tx_process()$/;"	f
audio_tx_task	src/hw/audio/audio.c	/^static void audio_tx_task(){$/;"	f	file:
audio_tx_thread_data	src/hw/audio/audio.c	/^struct k_thread audio_tx_thread_data;;$/;"	v	typeref:struct:k_thread
audio_tx_tid	src/hw/audio/audio.c	/^k_tid_t audio_tx_tid;$/;"	v
audio_type_t	src/hw/audio/codec-i2s.c	/^} audio_type_t;$/;"	t	typeref:enum:__anon43	file:
auto_bandwidth	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          auto_bandwidth;$/;"	m	struct:OpusEncoder	file:
avoid_split_noise	src/hw/audio/opus-1.2.1/bands.c	/^   int avoid_split_noise;$/;"	m	struct:band_ctx	file:
bandE	src/hw/audio/opus-1.2.1/bands.c	/^   const celt_ener *bandE;$/;"	m	struct:band_ctx	file:
band_allocation	src/hw/audio/opus-1.2.1/modes.c	/^static const unsigned char band_allocation[] = {$/;"	v	file:
band_ctx	src/hw/audio/opus-1.2.1/bands.c	/^struct band_ctx {$/;"	s	file:
bandwidth	src/hw/audio/opus-1.2.1/celt.h	/^   int   bandwidth;$/;"	m	struct:__anon10
bandwidth	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   int          bandwidth;$/;"	m	struct:OpusDecoder	file:
bandwidth	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          bandwidth;$/;"	m	struct:OpusEncoder	file:
bark_freq	src/hw/audio/opus-1.2.1/modes.c	/^static const opus_int16 bark_freq[BARK_BANDS+1] = {$/;"	v	file:
batchSize	src/hw/audio/opus-1.2.1/resampler_structs.h	/^    opus_int         batchSize;$/;"	m	struct:_silk_resampler_state_struct
battery	src/event/modem_event.h	/^    struct modem_battery_data battery;$/;"	m	union:modem_event::__anon55	typeref:struct:modem_event::__anon55::modem_battery_data
battery_data_get	src/module/sdk_modem.c	/^static int battery_data_get(void)$/;"	f	file:
battery_data_requested	src/module/sdk_modem.c	/^static bool battery_data_requested(enum app_module_data_type *data_list,$/;"	f	file:
beta_coef	src/hw/audio/opus-1.2.1/quant_bands.c	/^static const opus_val16 beta_coef[4] = {30147, 22282, 12124, 6554};$/;"	v	file:
beta_coef	src/hw/audio/opus-1.2.1/quant_bands.c	/^static const opus_val16 beta_coef[4] = {30147\/32768., 22282\/32768., 12124\/32768., 6554\/32768.};$/;"	v	file:
beta_intra	src/hw/audio/opus-1.2.1/quant_bands.c	/^static const opus_val16 beta_intra = 4915;$/;"	v	file:
beta_intra	src/hw/audio/opus-1.2.1/quant_bands.c	/^static const opus_val16 beta_intra = 4915\/32768.;$/;"	v	file:
bitRate	src/hw/audio/opus-1.2.1/control.h	/^    opus_int32 bitRate;$/;"	m	struct:__anon8
bitexact_cos	src/hw/audio/opus-1.2.1/bands.c	/^opus_int16 bitexact_cos(opus_int16 x)$/;"	f
bitexact_log2tan	src/hw/audio/opus-1.2.1/bands.c	/^int bitexact_log2tan(int isin,int icos)$/;"	f
bitrate	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_int32 bitrate;$/;"	m	struct:OpusCustomEncoder	file:
bitrate_bps	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    opus_int32   bitrate_bps;$/;"	m	struct:OpusEncoder	file:
bitrate_bps	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^   opus_int32 bitrate_bps;$/;"	m	struct:OpusMSEncoder	file:
bitrev	src/hw/audio/opus-1.2.1/kiss_fft.h	/^    const opus_int16 *bitrev;$/;"	m	struct:kiss_fft_state
bits	src/hw/audio/opus-1.2.1/modes.h	/^   const unsigned char *bits;$/;"	m	struct:__anon39
bits2pulses	src/hw/audio/opus-1.2.1/rate.h	/^static OPUS_INLINE int bits2pulses(const CELTMode *m, int band, int LM, int bits)$/;"	f
broker	src/module/motorola.c	/^static struct sockaddr_storage broker;$/;"	v	typeref:struct:sockaddr_storage	file:
buf	src/hw/audio/opus-1.2.1/entcode.h	/^   unsigned char *buf;$/;"	m	struct:ec_ctx
buf2	src/hw/audio/codec2_pdm_mic.c	/^i16 buf2[1024];$/;"	v
buffer	src/event/radio_event.h	/^    struct buffer_data buffer;$/;"	m	union:radio_event::__anon57	typeref:struct:radio_event::__anon57::buffer_data
buffer	src/event/radio_event.h	/^  char *buffer;$/;"	m	struct:radio_data
buffer	src/event/server_event.h	/^  char *buffer;$/;"	m	struct:server_data
buffer	src/hw/uart.c	/^  char   buffer[320u];$/;"	m	struct:uart_text	file:
buffer_data	src/event/radio_event.h	/^struct buffer_data {$/;"	s
button	src/event/hw_event.h	/^    struct button_data button;$/;"	m	union:hw_event::__anon54	typeref:struct:hw_event::__anon54::button_data
button_data	src/event/hw_event.h	/^struct button_data {$/;"	s
cA	src/hw/audio/opus-1.2.1/mathops.h	/^#define cA /;"	d
cA	src/hw/audio/opus-1.2.1/mathops.h	/^#undef cA$/;"	d
cB	src/hw/audio/opus-1.2.1/mathops.h	/^#define cB /;"	d
cB	src/hw/audio/opus-1.2.1/mathops.h	/^#undef cB$/;"	d
cC	src/hw/audio/opus-1.2.1/mathops.h	/^#define cC /;"	d
cC	src/hw/audio/opus-1.2.1/mathops.h	/^#undef cC$/;"	d
cD	src/hw/audio/opus-1.2.1/mathops.h	/^#undef cD$/;"	d
cE	src/hw/audio/opus-1.2.1/mathops.h	/^#define cE /;"	d
cache	src/hw/audio/opus-1.2.1/modes.h	/^   PulseCache cache;$/;"	m	struct:OpusCustomMode
cache_bits50	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const unsigned char cache_bits50[392] = {$/;"	v
cache_bits50	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const unsigned char cache_bits50[392] = {$/;"	v
cache_caps50	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const unsigned char cache_caps50[168] = {$/;"	v
cache_caps50	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const unsigned char cache_caps50[168] = {$/;"	v
cache_index50	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const opus_int16 cache_index50[105] = {$/;"	v
cache_index50	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const opus_int16 cache_index50[105] = {$/;"	v
calcBiquad	src/hw/driver/sgtl5000.c	/^void calcBiquad(uint8_t filtertype, float fC, float dB_Gain, float Q, uint32_t quantization_unit, uint32_t fS, int *coef)$/;"	f
caps	src/hw/audio/opus-1.2.1/modes.h	/^   const unsigned char *caps;$/;"	m	struct:__anon39
cell	src/event/modem_event.h	/^    struct modem_cell cell;$/;"	m	union:modem_event::__anon55	typeref:struct:modem_event::__anon55::modem_cell
cell_data	src/event/modem_event.h	/^  struct lte_lc_cells_info cell_data;$/;"	m	struct:modem_neighbor_cells	typeref:struct:modem_neighbor_cells::lte_lc_cells_info
cell_id	src/event/modem_event.h	/^  u32 cell_id;$/;"	m	struct:modem_cell
celt_assert	src/hw/audio/opus-1.2.1/arch.h	/^#define celt_assert(/;"	d
celt_assert2	src/hw/audio/opus-1.2.1/arch.h	/^#define celt_assert2(/;"	d
celt_atan01	src/hw/audio/opus-1.2.1/mathops.h	/^static OPUS_INLINE opus_val16 celt_atan01(opus_val16 x)$/;"	f
celt_atan2p	src/hw/audio/opus-1.2.1/mathops.h	/^static OPUS_INLINE opus_val16 celt_atan2p(opus_val16 y, opus_val16 x)$/;"	f
celt_cos_norm	src/hw/audio/opus-1.2.1/mathops.c	/^opus_val16 celt_cos_norm(opus_val32 x)$/;"	f
celt_cos_norm	src/hw/audio/opus-1.2.1/mathops.h	/^#define celt_cos_norm(/;"	d
celt_dec_offset	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   int          celt_dec_offset;$/;"	m	struct:OpusDecoder	file:
celt_decode_lost	src/hw/audio/opus-1.2.1/celt_decoder.c	/^static void celt_decode_lost(CELTDecoder * OPUS_RESTRICT st, int N, int LM)$/;"	f	file:
celt_decode_with_ec	src/hw/audio/opus-1.2.1/celt_decoder.c	/^int celt_decode_with_ec(CELTDecoder * OPUS_RESTRICT st, const unsigned char *data,$/;"	f
celt_decoder_ctl	src/hw/audio/opus-1.2.1/celt.h	/^#define celt_decoder_ctl /;"	d
celt_decoder_get_size	src/hw/audio/opus-1.2.1/celt_decoder.c	/^int celt_decoder_get_size(int channels)$/;"	f
celt_decoder_init	src/hw/audio/opus-1.2.1/celt_decoder.c	/^int celt_decoder_init(CELTDecoder *st, opus_int32 sampling_rate, int channels)$/;"	f
celt_div	src/hw/audio/opus-1.2.1/mathops.h	/^#define celt_div(/;"	d
celt_enc_offset	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          celt_enc_offset;$/;"	m	struct:OpusEncoder	file:
celt_encode_with_ec	src/hw/audio/opus-1.2.1/celt_encoder.c	/^int celt_encode_with_ec(CELTEncoder * OPUS_RESTRICT st, const opus_val16 * pcm, int frame_size, unsigned char *compressed, int nbCompressedBytes, ec_enc *enc)$/;"	f
celt_encoder_ctl	src/hw/audio/opus-1.2.1/celt.h	/^#define celt_encoder_ctl /;"	d
celt_encoder_get_size	src/hw/audio/opus-1.2.1/celt_encoder.c	/^int celt_encoder_get_size(int channels)$/;"	f
celt_encoder_init	src/hw/audio/opus-1.2.1/celt_encoder.c	/^int celt_encoder_init(CELTEncoder *st, opus_int32 sampling_rate, int channels,$/;"	f
celt_ener	src/hw/audio/opus-1.2.1/arch.h	/^typedef float celt_ener;$/;"	t
celt_ener	src/hw/audio/opus-1.2.1/arch.h	/^typedef opus_val32 celt_ener;$/;"	t
celt_exp2	src/hw/audio/opus-1.2.1/mathops.h	/^#define celt_exp2(/;"	d
celt_exp2	src/hw/audio/opus-1.2.1/mathops.h	/^static OPUS_INLINE float celt_exp2(float x)$/;"	f
celt_exp2	src/hw/audio/opus-1.2.1/mathops.h	/^static OPUS_INLINE opus_val32 celt_exp2(opus_val16 x)$/;"	f
celt_exp2_frac	src/hw/audio/opus-1.2.1/mathops.h	/^static OPUS_INLINE opus_val32 celt_exp2_frac(opus_val16 x)$/;"	f
celt_fatal	src/hw/audio/opus-1.2.1/arch.h	/^#define celt_fatal(/;"	d
celt_fir	src/hw/audio/opus-1.2.1/celt_lpc.h	/^#define celt_fir(/;"	d
celt_fir5	src/hw/audio/opus-1.2.1/pitch.c	/^static void celt_fir5(const opus_val16 *x,$/;"	f	file:
celt_fir_c	src/hw/audio/opus-1.2.1/celt_lpc.c	/^void celt_fir_c($/;"	f
celt_iir	src/hw/audio/opus-1.2.1/celt_lpc.c	/^void celt_iir(const opus_val32 *_x,$/;"	f
celt_ilog2	src/hw/audio/opus-1.2.1/mathops.h	/^static OPUS_INLINE opus_int16 celt_ilog2(opus_int32 x)$/;"	f
celt_inner_prod	src/hw/audio/opus-1.2.1/arm/pitch_arm.h	/^#   define celt_inner_prod(/;"	d
celt_inner_prod	src/hw/audio/opus-1.2.1/pitch.h	/^# define celt_inner_prod(/;"	d
celt_inner_prod_c	src/hw/audio/opus-1.2.1/pitch.h	/^static OPUS_INLINE opus_val32 celt_inner_prod_c(const opus_val16 *x,$/;"	f
celt_isnan	src/hw/audio/opus-1.2.1/arch.h	/^#define celt_isnan(/;"	d
celt_isnan	src/hw/audio/opus-1.2.1/arch.h	/^static OPUS_INLINE int celt_isnan(float x)$/;"	f
celt_lcg_rand	src/hw/audio/opus-1.2.1/bands.c	/^opus_uint32 celt_lcg_rand(opus_uint32 seed)$/;"	f
celt_log2	src/hw/audio/opus-1.2.1/mathops.h	/^#define celt_log2(/;"	d
celt_log2	src/hw/audio/opus-1.2.1/mathops.h	/^static OPUS_INLINE float celt_log2(float x)$/;"	f
celt_log2	src/hw/audio/opus-1.2.1/mathops.h	/^static OPUS_INLINE opus_val16 celt_log2(opus_val32 x)$/;"	f
celt_maxabs16	src/hw/audio/opus-1.2.1/mathops.h	/^static OPUS_INLINE opus_val32 celt_maxabs16(const opus_val16 *x, int len)$/;"	f
celt_maxabs32	src/hw/audio/opus-1.2.1/mathops.h	/^#define celt_maxabs32(/;"	d
celt_maxabs32	src/hw/audio/opus-1.2.1/mathops.h	/^static OPUS_INLINE opus_val32 celt_maxabs32(const opus_val32 *x, int len)$/;"	f
celt_mips	src/hw/audio/opus-1.2.1/fixed_debug.h	/^OPUS_EXPORT opus_int64 celt_mips=0;$/;"	v
celt_norm	src/hw/audio/opus-1.2.1/arch.h	/^typedef float celt_norm;$/;"	t
celt_norm	src/hw/audio/opus-1.2.1/arch.h	/^typedef opus_val16 celt_norm;$/;"	t
celt_pitch_xcorr	src/hw/audio/opus-1.2.1/arm/pitch_arm.h	/^#   define celt_pitch_xcorr /;"	d
celt_pitch_xcorr	src/hw/audio/opus-1.2.1/arm/pitch_arm.h	/^#  define celt_pitch_xcorr /;"	d
celt_pitch_xcorr	src/hw/audio/opus-1.2.1/pitch.h	/^# define celt_pitch_xcorr /;"	d
celt_pitch_xcorr_c	src/hw/audio/opus-1.2.1/pitch.c	/^celt_pitch_xcorr_c(const opus_val16 *_x, const opus_val16 *_y,$/;"	f
celt_pitch_xcorr_edsp	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp$/;"	l
celt_pitch_xcorr_edsp	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp PROC$/;"	l
celt_pitch_xcorr_edsp_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_done:$/;"	l
celt_pitch_xcorr_edsp_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_done$/;"	l
celt_pitch_xcorr_edsp_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_done$/;"	l
celt_pitch_xcorr_edsp_process1a	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process1a:$/;"	l
celt_pitch_xcorr_edsp_process1a	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process1a$/;"	l
celt_pitch_xcorr_edsp_process1a	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process1a$/;"	l
celt_pitch_xcorr_edsp_process1a_loop4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process1a_loop4:$/;"	l
celt_pitch_xcorr_edsp_process1a_loop4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process1a_loop4$/;"	l
celt_pitch_xcorr_edsp_process1a_loop4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process1a_loop4$/;"	l
celt_pitch_xcorr_edsp_process1a_loop_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process1a_loop_done:$/;"	l
celt_pitch_xcorr_edsp_process1a_loop_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process1a_loop_done$/;"	l
celt_pitch_xcorr_edsp_process1a_loop_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process1a_loop_done$/;"	l
celt_pitch_xcorr_edsp_process1u_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process1u_done:$/;"	l
celt_pitch_xcorr_edsp_process1u_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process1u_done$/;"	l
celt_pitch_xcorr_edsp_process1u_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process1u_done$/;"	l
celt_pitch_xcorr_edsp_process1u_loop1	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process1u_loop1:$/;"	l
celt_pitch_xcorr_edsp_process1u_loop1	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process1u_loop1$/;"	l
celt_pitch_xcorr_edsp_process1u_loop1	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process1u_loop1$/;"	l
celt_pitch_xcorr_edsp_process1u_loop4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process1u_loop4:$/;"	l
celt_pitch_xcorr_edsp_process1u_loop4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process1u_loop4$/;"	l
celt_pitch_xcorr_edsp_process1u_loop4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process1u_loop4$/;"	l
celt_pitch_xcorr_edsp_process1u_loop4_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process1u_loop4_done:$/;"	l
celt_pitch_xcorr_edsp_process1u_loop4_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process1u_loop4_done$/;"	l
celt_pitch_xcorr_edsp_process1u_loop4_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process1u_loop4_done$/;"	l
celt_pitch_xcorr_edsp_process2	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process2:$/;"	l
celt_pitch_xcorr_edsp_process2	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process2$/;"	l
celt_pitch_xcorr_edsp_process2	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process2$/;"	l
celt_pitch_xcorr_edsp_process2_1	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process2_1:$/;"	l
celt_pitch_xcorr_edsp_process2_1	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process2_1$/;"	l
celt_pitch_xcorr_edsp_process2_1	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process2_1$/;"	l
celt_pitch_xcorr_edsp_process2_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process2_done:$/;"	l
celt_pitch_xcorr_edsp_process2_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process2_done$/;"	l
celt_pitch_xcorr_edsp_process2_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process2_done$/;"	l
celt_pitch_xcorr_edsp_process2_loop4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process2_loop4:$/;"	l
celt_pitch_xcorr_edsp_process2_loop4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process2_loop4$/;"	l
celt_pitch_xcorr_edsp_process2_loop4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process2_loop4$/;"	l
celt_pitch_xcorr_edsp_process2_loop_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process2_loop_done:$/;"	l
celt_pitch_xcorr_edsp_process2_loop_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process2_loop_done$/;"	l
celt_pitch_xcorr_edsp_process2_loop_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process2_loop_done$/;"	l
celt_pitch_xcorr_edsp_process4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^celt_pitch_xcorr_edsp_process4:$/;"	l
celt_pitch_xcorr_edsp_process4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^celt_pitch_xcorr_edsp_process4$/;"	l
celt_pitch_xcorr_edsp_process4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^celt_pitch_xcorr_edsp_process4$/;"	l
celt_pitch_xcorr_media	src/hw/audio/opus-1.2.1/arm/pitch_arm.h	/^#   define celt_pitch_xcorr_media /;"	d
celt_plc_pitch_search	src/hw/audio/opus-1.2.1/celt_decoder.c	/^static int celt_plc_pitch_search(celt_sig *decode_mem[2], int C, int arch)$/;"	f	file:
celt_preemphasis	src/hw/audio/opus-1.2.1/celt_encoder.c	/^void celt_preemphasis(const opus_val16 * OPUS_RESTRICT pcmp, celt_sig * OPUS_RESTRICT inp,$/;"	f
celt_rcp	src/hw/audio/opus-1.2.1/mathops.c	/^opus_val32 celt_rcp(opus_val32 x)$/;"	f
celt_rcp	src/hw/audio/opus-1.2.1/mathops.h	/^#define celt_rcp(/;"	d
celt_rsqrt	src/hw/audio/opus-1.2.1/mathops.h	/^#define celt_rsqrt(/;"	d
celt_rsqrt_norm	src/hw/audio/opus-1.2.1/mathops.c	/^opus_val16 celt_rsqrt_norm(opus_val32 x)$/;"	f
celt_rsqrt_norm	src/hw/audio/opus-1.2.1/mathops.h	/^#define celt_rsqrt_norm(/;"	d
celt_sig	src/hw/audio/opus-1.2.1/arch.h	/^typedef float celt_sig;$/;"	t
celt_sig	src/hw/audio/opus-1.2.1/arch.h	/^typedef opus_val32 celt_sig;$/;"	t
celt_sqrt	src/hw/audio/opus-1.2.1/mathops.c	/^opus_val32 celt_sqrt(opus_val32 x)$/;"	f
celt_sqrt	src/hw/audio/opus-1.2.1/mathops.h	/^#define celt_sqrt(/;"	d
celt_sudiv	src/hw/audio/opus-1.2.1/entcode.h	/^static OPUS_INLINE opus_int32 celt_sudiv(opus_int32 n, opus_int32 d) {$/;"	f
celt_synthesis	src/hw/audio/opus-1.2.1/celt_decoder.c	/^void celt_synthesis(const CELTMode *mode, celt_norm *X, celt_sig * out_syn[],$/;"	f	file:
celt_udiv	src/hw/audio/opus-1.2.1/entcode.h	/^static OPUS_INLINE opus_uint32 celt_udiv(opus_uint32 n, opus_uint32 d) {$/;"	f
celt_zlog2	src/hw/audio/opus-1.2.1/mathops.h	/^static OPUS_INLINE opus_int16 celt_zlog2(opus_val32 x)$/;"	f
certificates_provision	src/module/modem.c	/^static int certificates_provision( void ) {$/;"	f	file:
cfg_arch_120	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const arch_fft_state cfg_arch_120 = {$/;"	v
cfg_arch_120	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const arch_fft_state cfg_arch_120 = {$/;"	v
cfg_arch_240	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const arch_fft_state cfg_arch_240 = {$/;"	v
cfg_arch_240	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const arch_fft_state cfg_arch_240 = {$/;"	v
cfg_arch_480	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const arch_fft_state cfg_arch_480 = {$/;"	v
cfg_arch_480	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const arch_fft_state cfg_arch_480 = {$/;"	v
cfg_arch_60	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const arch_fft_state cfg_arch_60 = {$/;"	v
cfg_arch_60	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const arch_fft_state cfg_arch_60 = {$/;"	v
channelNb	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     channelNb;$/;"	m	struct:__anon33
channel_pos	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static void channel_pos(int channels, int pos[8])$/;"	f	file:
channel_state	src/hw/audio/opus-1.2.1/dec_API.c	/^    silk_decoder_state          channel_state[ DECODER_NUM_CHANNELS ];$/;"	m	struct:__anon18	file:
channels	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int channels;$/;"	m	struct:OpusCustomDecoder	file:
channels	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int channels;$/;"	m	struct:OpusCustomEncoder	file:
channels	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   int          channels;$/;"	m	struct:OpusDecoder	file:
channels	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          channels;$/;"	m	struct:OpusEncoder	file:
check_control_input	src/hw/audio/opus-1.2.1/check_control_input.c	/^opus_int check_control_input($/;"	f
cleanup	src/hw/audio/codec2.c	/^int cleanup ( char *buffer ) {$/;"	f
cleanup	src/hw/old-codec.c	/^int cleanup ( char *buffer ) {$/;"	f
cleanup_ui	src/module/ui.c	/^void cleanup_ui ( void ) {$/;"	f
client	src/module/motorola.c	/^static struct mqtt_client client;$/;"	v	typeref:struct:mqtt_client	file:
client_fd	src/module/radio.c	/^static int client_fd;$/;"	v	file:
clip	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int clip;$/;"	m	struct:OpusCustomEncoder	file:
cloud	src/module/sdk_modem.c	/^		struct cloud_module_event cloud;$/;"	m	union:modem_msg_data::__anon49	typeref:struct:modem_msg_data::__anon49::cloud_module_event	file:
clt_mdct_backward	src/hw/audio/opus-1.2.1/mdct.h	/^#define clt_mdct_backward(/;"	d
clt_mdct_backward_c	src/hw/audio/opus-1.2.1/mdct.c	/^void clt_mdct_backward_c(const mdct_lookup *l, kiss_fft_scalar *in, kiss_fft_scalar * OPUS_RESTRICT out,$/;"	f
clt_mdct_clear	src/hw/audio/opus-1.2.1/mdct.c	/^void clt_mdct_clear(mdct_lookup *l, int arch)$/;"	f
clt_mdct_forward	src/hw/audio/opus-1.2.1/mdct.h	/^#define clt_mdct_forward(/;"	d
clt_mdct_forward_c	src/hw/audio/opus-1.2.1/mdct.c	/^void clt_mdct_forward_c(const mdct_lookup *l, kiss_fft_scalar *in, kiss_fft_scalar * OPUS_RESTRICT out,$/;"	f
clt_mdct_init	src/hw/audio/opus-1.2.1/mdct.c	/^int clt_mdct_init(mdct_lookup *l,int N, int maxshift, int arch)$/;"	f
cmd	src/hw/uart.c	/^    enum esp32_cmd   cmd;$/;"	m	union:uart_message::__anon46	typeref:enum:uart_message::__anon46::esp32_cmd	file:
cmean	src/hw/audio/opus-1.2.1/analysis.h	/^   float cmean[8];$/;"	m	struct:__anon41
codec_incoming	src/hw/audio/codec2.c	/^i16 *codec_incoming;$/;"	v
codec_incoming	src/hw/old-codec.c	/^i16 *codec_incoming;$/;"	v
codec_outgoing	src/hw/audio/codec2.c	/^i16 *codec_outgoing;$/;"	v
codec_outgoing	src/hw/old-codec.c	/^i16 *codec_outgoing;$/;"	v
codec_thread	src/hw/audio/codec2.c	/^static const k_tid_t codec_thread;$/;"	v	file:
codec_thread	src/hw/old-codec.c	/^static const k_tid_t codec_thread;$/;"	v	file:
coding_quality_Q14	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    coding_quality_Q14;$/;"	m	struct:__anon14
comb_filter	src/hw/audio/opus-1.2.1/celt.c	/^void comb_filter(opus_val32 *y, opus_val32 *x, int T0, int T1, int N,$/;"	f
comb_filter_const	src/hw/audio/opus-1.2.1/celt.h	/^# define comb_filter_const(/;"	d
comb_filter_const_c	src/hw/audio/opus-1.2.1/celt.c	/^void comb_filter_const_c(opus_val32 *y, opus_val32 *x, int T, int N,$/;"	f	file:
combine_and_check	src/hw/audio/opus-1.2.1/encode_pulses.c	/^static OPUS_INLINE opus_int combine_and_check(    \/* return ok                           *\/$/;"	f	file:
combine_pulses	src/hw/audio/opus-1.2.1/shell_coder.c	/^static OPUS_INLINE void combine_pulses($/;"	f	file:
complexity	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int complexity;$/;"	m	struct:OpusCustomEncoder	file:
complexity	src/hw/audio/opus-1.2.1/control.h	/^    opus_int complexity;$/;"	m	struct:__anon8
compute_allocation	src/hw/audio/opus-1.2.1/rate.c	/^int compute_allocation(const CELTMode *m, int start, int end, const int *offsets, const int *cap, int alloc_trim, int *intensity, int *dual_stereo,$/;"	f
compute_allocation_table	src/hw/audio/opus-1.2.1/modes.c	/^static void compute_allocation_table(CELTMode *mode)$/;"	f	file:
compute_band_energies	src/hw/audio/opus-1.2.1/bands.c	/^void compute_band_energies(const CELTMode *m, const celt_sig *X, celt_ener *bandE, int end, int C, int LM, int arch)$/;"	f
compute_bitrev_table	src/hw/audio/opus-1.2.1/kiss_fft.c	/^void compute_bitrev_table($/;"	f	file:
compute_channel_weights	src/hw/audio/opus-1.2.1/bands.c	/^static void compute_channel_weights(celt_ener Ex, celt_ener Ey, opus_val16 w[2])$/;"	f	file:
compute_ebands	src/hw/audio/opus-1.2.1/modes.c	/^static opus_int16 *compute_ebands(opus_int32 Fs, int frame_size, int res, int *nbEBands)$/;"	f	file:
compute_equiv_rate	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static opus_int32 compute_equiv_rate(opus_int32 bitrate, int channels,$/;"	f	file:
compute_frame_energy	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static opus_val32 compute_frame_energy(const opus_val16 *pcm, int frame_size, int channels, int arch)$/;"	f	file:
compute_mdcts	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static void compute_mdcts(const CELTMode *mode, int shortBlocks, celt_sig * OPUS_RESTRICT in,$/;"	f	file:
compute_pitch_gain	src/hw/audio/opus-1.2.1/pitch.c	/^static opus_val16 compute_pitch_gain(opus_val32 xy, opus_val32 xx, opus_val32 yy)$/;"	f	file:
compute_pulse_cache	src/hw/audio/opus-1.2.1/rate.c	/^void compute_pulse_cache(CELTMode *m, int LM)$/;"	f
compute_qn	src/hw/audio/opus-1.2.1/bands.c	/^static int compute_qn(int N, int b, int offset, int pulse_cap, int stereo)$/;"	f	file:
compute_redundancy_bytes	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static int compute_redundancy_bytes(opus_int32 max_data_bytes, opus_int32 bitrate_bps, int frame_rate, int channels)$/;"	f	file:
compute_silk_rate_for_hybrid	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static int compute_silk_rate_for_hybrid(int rate, int bandwidth, int frame20ms, int vbr, int fec) {$/;"	f	file:
compute_stereo_width	src/hw/audio/opus-1.2.1/opus_encoder.c	/^opus_val16 compute_stereo_width(const opus_val16 *pcm, int frame_size, opus_int32 Fs, StereoWidthState *mem)$/;"	f
compute_theta	src/hw/audio/opus-1.2.1/bands.c	/^static void compute_theta(struct band_ctx *ctx, struct split_ctx *sctx,$/;"	f	file:
compute_twiddles	src/hw/audio/opus-1.2.1/kiss_fft.c	/^static void compute_twiddles(kiss_twiddle_cpx *twiddles, int nfft)$/;"	f	file:
compute_vbr	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static int compute_vbr(const CELTMode *mode, AnalysisInfo *analysis, opus_int32 base_target,$/;"	f	file:
conc_energy	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  conc_energy;$/;"	m	struct:__anon34
conc_energy_shift	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    conc_energy_shift;$/;"	m	struct:__anon34
config	src/hw/audio/codec2_pdm_mic.c	/^const nrfx_pdm_config_t config;$/;"	v
configure	src/hw/audio/codec2.c	/^int configure( void ) {$/;"	f
configure	src/hw/old-codec.c	/^int configure( void ) {$/;"	f
configure_low_power	src/module/modem.c	/^static int configure_low_power(void)$/;"	f	file:
configure_low_power	src/module/sdk_modem.c	/^static int configure_low_power(void)$/;"	f	file:
consec_transient	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int consec_transient;$/;"	m	struct:OpusCustomEncoder	file:
constrained_vbr	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int constrained_vbr;      \/* If zero, VBR can do whatever it likes with the rate *\/$/;"	m	struct:OpusCustomEncoder	file:
container	src/module/ui.c	/^static const lv_obj_t *container;$/;"	v	file:
contourIndex	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    contourIndex;$/;"	m	struct:__anon32
controlled_since_last_payload	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     controlled_since_last_payload;     \/* Flag for ensuring codec_control only runs once per packet        *\/$/;"	m	struct:__anon33
count	src/event/app.h	/^	size_t count;$/;"	m	struct:app_module_event
count	src/hw/audio/opus-1.2.1/analysis.h	/^   int count;$/;"	m	struct:__anon41
counter	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  counter;                        \/* Frame counter used in the initial phase                              *\/$/;"	m	struct:__anon27
create_connected_idle	src/module/ui.c	/^void create_connected_idle( void ) {$/;"	f
create_connecting_lte	src/module/ui.c	/^void create_connecting_lte( void ) {$/;"	f
create_connecting_server	src/module/ui.c	/^void create_connecting_server( void ) {$/;"	f
create_listening_screen	src/module/ui.c	/^void create_listening_screen( void ) {$/;"	f
create_transmitting	src/module/ui.c	/^void create_transmitting( void ) {$/;"	f
create_user_list_view	src/ui/random_view_stuff.c	/^lv_obj_t *create_user_list_view( lv_obj_t *parent, session *session ) {$/;"	f
currently_talking	src/module/ui.c	/^static const char currently_talking[MAX_USERNAME_LENGTH];$/;"	v	file:
currently_talking_label	src/module/ui.c	/^static const lv_obj_t *currently_talking_label;$/;"	v	file:
cwrsi	src/hw/audio/opus-1.2.1/cwrs.c	/^static opus_val32 cwrsi(int _n,int _k,opus_uint32 _i,int *_y){$/;"	f	file:
cwrsi	src/hw/audio/opus-1.2.1/cwrs.c	/^static opus_val32 cwrsi(int _n,int _k,opus_uint32 _i,int *_y,opus_uint32 *_u){$/;"	f	file:
d2_angle	src/hw/audio/opus-1.2.1/analysis.h	/^   float d2_angle[240];$/;"	m	struct:__anon41
d_angle	src/hw/audio/opus-1.2.1/analysis.h	/^   float d_angle[240];$/;"	m	struct:__anon41
data	src/event/app.h	/^	} data;$/;"	m	struct:app_module_event	typeref:union:app_module_event::__anon56
data	src/event/hw_event.h	/^  } data;$/;"	m	struct:hw_event	typeref:union:hw_event::__anon54
data	src/event/modem_event.h	/^  } data;$/;"	m	struct:modem_event	typeref:union:modem_event::__anon55
data	src/event/radio_event.h	/^    struct radio_data data;$/;"	m	union:radio_event::__anon57	typeref:struct:radio_event::__anon57::radio_data
data	src/event/radio_event.h	/^  } data;$/;"	m	struct:radio_event	typeref:union:radio_event::__anon57
data	src/event/server_event.h	/^    struct server_data data;$/;"	m	union:server_event::__anon58	typeref:struct:server_event::__anon58::server_data
data	src/event/server_event.h	/^  } data;$/;"	m	struct:server_event	typeref:union:server_event::__anon58
data	src/hw/uart.c	/^  } data;  $/;"	m	struct:uart_message	typeref:union:uart_message::__anon47	file:
data_list	src/event/app.h	/^	enum app_module_data_type data_list[APP_DATA_COUNT];$/;"	m	struct:app_module_event	typeref:enum:app_module_event::app_module_data_type
dc_reject	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static void dc_reject(const opus_val16 *in, opus_int32 cutoff_Hz, opus_val16 *out, opus_val32 *hp_mem, int len, int channels, opus_int32 Fs)$/;"	f	file:
dct_table	src/hw/audio/opus-1.2.1/analysis.c	/^static const float dct_table[128] = {$/;"	v	file:
decide_dtx_mode	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static int decide_dtx_mode(float activity_probability,    \/* probability that current frame contains speech\/music *\/$/;"	f	file:
decide_fec	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static int decide_fec(int useInBandFEC, int PacketLoss_perc, int last_fec, int mode, int *bandwidth, opus_int32 rate)$/;"	f	file:
decode_and_play	src/hw/audio/codec2.c	/^int decode_and_play( void ) {$/;"	f
decode_and_play	src/hw/old-codec.c	/^int decode_and_play( void ) {$/;"	f
decode_and_write	src/hw/audio/codec2_pdm_mic.c	/^int decode_and_write( void ) {$/;"	f
decode_buffer_out	src/hw/audio/codec2_pdm_mic.c	/^i16 *decode_buffer_out;$/;"	v
decode_gain	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   int          decode_gain;$/;"	m	struct:OpusDecoder	file:
decode_pulses	src/hw/audio/opus-1.2.1/cwrs.c	/^opus_val32 decode_pulses(int *_y,int _n,int _k,ec_dec *_dec){$/;"	f
decode_split	src/hw/audio/opus-1.2.1/shell_coder.c	/^static OPUS_INLINE void decode_split($/;"	f	file:
deemphasis	src/hw/audio/opus-1.2.1/celt_decoder.c	/^void deemphasis(celt_sig *in[], opus_val16 *pcm, int N, int C, int downsample, const opus_val16 *coef,$/;"	f	file:
deemphasis_stereo_simple	src/hw/audio/opus-1.2.1/celt_decoder.c	/^static void deemphasis_stereo_simple(celt_sig *in[], opus_val16 *pcm, int N, const opus_val16 coef0,$/;"	f	file:
deinterleave_hadamard	src/hw/audio/opus-1.2.1/bands.c	/^static void deinterleave_hadamard(celt_norm *X, int N0, int stride, int hadamard)$/;"	f	file:
delayBuf	src/hw/audio/opus-1.2.1/resampler_structs.h	/^    opus_int16       delayBuf[ 48 ];$/;"	m	struct:_silk_resampler_state_struct
delay_buffer	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    opus_val16   delay_buffer[MAX_ENCODER_BUFFER*2];$/;"	m	struct:OpusEncoder	file:
delay_compensation	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          delay_compensation;$/;"	m	struct:OpusEncoder	file:
delay_matrix_dec	src/hw/audio/opus-1.2.1/resampler.c	/^static const opus_int8 delay_matrix_dec[ 3 ][ 5 ] = {$/;"	v	file:
delay_matrix_enc	src/hw/audio/opus-1.2.1/resampler.c	/^static const opus_int8 delay_matrix_enc[ 5 ][ 3 ] = {$/;"	v	file:
delayedIntra	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_val32 delayedIntra;$/;"	m	struct:OpusCustomEncoder	file:
delta	src/hw/audio/opus-1.2.1/bands.c	/^   int delta;$/;"	m	struct:split_ctx	file:
deltaMin_Q15	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_int16             *deltaMin_Q15;$/;"	m	struct:__anon29
denormalise_bands	src/hw/audio/opus-1.2.1/bands.c	/^void denormalise_bands(const CELTMode *m, const celt_norm * OPUS_RESTRICT X,$/;"	f
desiredInternalSampleRate	src/hw/audio/opus-1.2.1/control.h	/^    opus_int32 desiredInternalSampleRate;$/;"	m	struct:__anon8
desiredInternal_fs_Hz	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     desiredInternal_fs_Hz;             \/* Soft request for internal sampling frequency (Hz)                *\/$/;"	m	struct:__anon33
detected_bandwidth	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          detected_bandwidth;$/;"	m	struct:OpusEncoder	file:
disable_inv	src/hw/audio/opus-1.2.1/bands.c	/^   int disable_inv;$/;"	m	struct:band_ctx	file:
disable_inv	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int disable_inv;$/;"	m	struct:OpusCustomDecoder	file:
disable_inv	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int disable_inv;$/;"	m	struct:OpusCustomEncoder	file:
disable_pf	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int disable_pf;$/;"	m	struct:OpusCustomEncoder	file:
display_dev	src/module/ui.c	/^static const device *display_dev;$/;"	v	file:
downmix_and_resample	src/hw/audio/opus-1.2.1/analysis.c	/^static opus_val32 downmix_and_resample(downmix_func downmix, const void *_x, opus_val32 *y, opus_val32 S[3], int subframe, int offset, int c1, int c2, int C, int Fs)$/;"	f	file:
downmix_float	src/hw/audio/opus-1.2.1/opus_encoder.c	/^void downmix_float(const void *_x, opus_val32 *y, int subframe, int offset, int c1, int c2, int C)$/;"	f
downmix_func	src/hw/audio/opus-1.2.1/opus_private.h	/^typedef void (*downmix_func)(const void *, opus_val32 *, int, int, int, int, int);$/;"	t
downmix_int	src/hw/audio/opus-1.2.1/opus_encoder.c	/^void downmix_int(const void *_x, opus_val32 *y, int subframe, int offset, int c1, int c2, int C)$/;"	f
downmix_state	src/hw/audio/opus-1.2.1/analysis.h	/^   opus_val32 downmix_state[3];$/;"	m	struct:__anon41
downsample	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int downsample;$/;"	m	struct:OpusCustomDecoder	file:
drv_audio_codec_decode	src/hw/audio/opus.c	/^void drv_audio_codec_decode(m_audio_frame_t *p_frame, int16_t *output_samples)$/;"	f
drv_audio_codec_encode	src/hw/audio/opus.c	/^void drv_audio_codec_encode(int16_t *input_samples, m_audio_frame_t *p_frame)$/;"	f
drv_pdm_cb	src/hw/audio/codec2_pdm_mic.c	/^static void drv_pdm_cb( const nrfx_pdm_evt_t *event ) {$/;"	f	file:
drv_sgtl5000_evt_t	src/hw/audio/codec-i2s.h	/^} drv_sgtl5000_evt_t;$/;"	t	typeref:struct:__anon6
drv_sgtl5000_evt_type_t	src/hw/audio/codec-i2s.h	/^} drv_sgtl5000_evt_type_t;$/;"	t	typeref:enum:__anon3
drv_sgtl5000_handler_t	src/hw/audio/codec-i2s.h	/^typedef bool (* drv_sgtl5000_handler_t)(drv_sgtl5000_evt_t * p_evt);$/;"	t
drv_sgtl5000_init_t	src/hw/driver/sgtl5000.h	/^ } drv_sgtl5000_init_t;$/;"	t	typeref:struct:__anon1
dual_inner_prod	src/hw/audio/opus-1.2.1/arm/pitch_arm.h	/^#   define dual_inner_prod(/;"	d
dual_inner_prod	src/hw/audio/opus-1.2.1/pitch.h	/^# define dual_inner_prod(/;"	d
dual_inner_prod_c	src/hw/audio/opus-1.2.1/pitch.h	/^static OPUS_INLINE void dual_inner_prod_c(const opus_val16 *x, const opus_val16 *y01, const opus_val16 *y02,$/;"	f
dummy	src/hw/uart.c	/^    u32 dummy;$/;"	m	union:uart_message::__anon47	file:
dynalloc_analysis	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static opus_val16 dynalloc_analysis(const opus_val16 *bandLogE, const opus_val16 *bandLogE2,$/;"	f	file:
dynamic_modem_data_get	src/module/sdk_modem.c	/^static int dynamic_modem_data_get(void)$/;"	f	file:
dynamic_modem_data_requested	src/module/sdk_modem.c	/^static bool dynamic_modem_data_requested(enum app_module_data_type *data_list,$/;"	f	file:
eBands	src/hw/audio/opus-1.2.1/modes.h	/^   const opus_int16   *eBands;   \/**< Definition for each "pseudo-critical band" *\/$/;"	m	struct:OpusCustomMode
eMeans	src/hw/audio/opus-1.2.1/quant_bands.c	/^const opus_val16 eMeans[25] = {$/;"	v
eMeans	src/hw/audio/opus-1.2.1/quant_bands.c	/^const signed char eMeans[25] = {$/;"	v
e_prob_model	src/hw/audio/opus-1.2.1/quant_bands.c	/^static const unsigned char e_prob_model[4][2][42] = {$/;"	v	file:
eband5ms	src/hw/audio/opus-1.2.1/modes.c	/^static const opus_int16 eband5ms[] = {$/;"	v	file:
ec	src/hw/audio/opus-1.2.1/bands.c	/^   ec_ctx *ec;$/;"	m	struct:band_ctx	file:
ec_Rates_Q5	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_uint8             *ec_Rates_Q5;$/;"	m	struct:__anon29
ec_bsr	src/hw/audio/opus-1.2.1/ecintrin.h	/^static __inline int ec_bsr(unsigned long _x){$/;"	f
ec_ctx	src/hw/audio/opus-1.2.1/entcode.h	/^struct ec_ctx{$/;"	s
ec_ctx	src/hw/audio/opus-1.2.1/entcode.h	/^typedef struct ec_ctx         ec_ctx;$/;"	t	typeref:struct:ec_ctx
ec_dec	src/hw/audio/opus-1.2.1/entcode.h	/^typedef struct ec_ctx         ec_dec;$/;"	t	typeref:struct:ec_ctx
ec_dec_bit_logp	src/hw/audio/opus-1.2.1/entdec.c	/^int ec_dec_bit_logp(ec_dec *_this,unsigned _logp){$/;"	f
ec_dec_bits	src/hw/audio/opus-1.2.1/entdec.c	/^opus_uint32 ec_dec_bits(ec_dec *_this,unsigned _bits){$/;"	f
ec_dec_icdf	src/hw/audio/opus-1.2.1/entdec.c	/^int ec_dec_icdf(ec_dec *_this,const unsigned char *_icdf,unsigned _ftb){$/;"	f
ec_dec_init	src/hw/audio/opus-1.2.1/entdec.c	/^void ec_dec_init(ec_dec *_this,unsigned char *_buf,opus_uint32 _storage){$/;"	f
ec_dec_normalize	src/hw/audio/opus-1.2.1/entdec.c	/^static void ec_dec_normalize(ec_dec *_this){$/;"	f	file:
ec_dec_uint	src/hw/audio/opus-1.2.1/entdec.c	/^opus_uint32 ec_dec_uint(ec_dec *_this,opus_uint32 _ft){$/;"	f
ec_dec_update	src/hw/audio/opus-1.2.1/entdec.c	/^void ec_dec_update(ec_dec *_this,unsigned _fl,unsigned _fh,unsigned _ft){$/;"	f
ec_decode	src/hw/audio/opus-1.2.1/entdec.c	/^unsigned ec_decode(ec_dec *_this,unsigned _ft){$/;"	f
ec_decode_bin	src/hw/audio/opus-1.2.1/entdec.c	/^unsigned ec_decode_bin(ec_dec *_this,unsigned _bits){$/;"	f
ec_enc	src/hw/audio/opus-1.2.1/entcode.h	/^typedef struct ec_ctx         ec_enc;$/;"	t	typeref:struct:ec_ctx
ec_enc_bit_logp	src/hw/audio/opus-1.2.1/entenc.c	/^void ec_enc_bit_logp(ec_enc *_this,int _val,unsigned _logp){$/;"	f
ec_enc_bits	src/hw/audio/opus-1.2.1/entenc.c	/^void ec_enc_bits(ec_enc *_this,opus_uint32 _fl,unsigned _bits){$/;"	f
ec_enc_carry_out	src/hw/audio/opus-1.2.1/entenc.c	/^static void ec_enc_carry_out(ec_enc *_this,int _c){$/;"	f	file:
ec_enc_done	src/hw/audio/opus-1.2.1/entenc.c	/^void ec_enc_done(ec_enc *_this){$/;"	f
ec_enc_icdf	src/hw/audio/opus-1.2.1/entenc.c	/^void ec_enc_icdf(ec_enc *_this,int _s,const unsigned char *_icdf,unsigned _ftb){$/;"	f
ec_enc_init	src/hw/audio/opus-1.2.1/entenc.c	/^void ec_enc_init(ec_enc *_this,unsigned char *_buf,opus_uint32 _size){$/;"	f
ec_enc_normalize	src/hw/audio/opus-1.2.1/entenc.c	/^static OPUS_INLINE void ec_enc_normalize(ec_enc *_this){$/;"	f	file:
ec_enc_patch_initial_bits	src/hw/audio/opus-1.2.1/entenc.c	/^void ec_enc_patch_initial_bits(ec_enc *_this,unsigned _val,unsigned _nbits){$/;"	f
ec_enc_shrink	src/hw/audio/opus-1.2.1/entenc.c	/^void ec_enc_shrink(ec_enc *_this,opus_uint32 _size){$/;"	f
ec_enc_uint	src/hw/audio/opus-1.2.1/entenc.c	/^void ec_enc_uint(ec_enc *_this,opus_uint32 _fl,opus_uint32 _ft){$/;"	f
ec_encode	src/hw/audio/opus-1.2.1/entenc.c	/^void ec_encode(ec_enc *_this,unsigned _fl,unsigned _fh,unsigned _ft){$/;"	f
ec_encode_bin	src/hw/audio/opus-1.2.1/entenc.c	/^void ec_encode_bin(ec_enc *_this,unsigned _fl,unsigned _fh,unsigned _bits){$/;"	f
ec_get_buffer	src/hw/audio/opus-1.2.1/entcode.h	/^static OPUS_INLINE unsigned char *ec_get_buffer(ec_ctx *_this){$/;"	f
ec_get_error	src/hw/audio/opus-1.2.1/entcode.h	/^static OPUS_INLINE int ec_get_error(ec_ctx *_this){$/;"	f
ec_iCDF	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_uint8             *ec_iCDF;$/;"	m	struct:__anon29
ec_ilog	src/hw/audio/opus-1.2.1/entcode.c	/^int ec_ilog(opus_uint32 _v){$/;"	f
ec_laplace_decode	src/hw/audio/opus-1.2.1/laplace.c	/^int ec_laplace_decode(ec_dec *dec, unsigned fs, int decay)$/;"	f
ec_laplace_encode	src/hw/audio/opus-1.2.1/laplace.c	/^void ec_laplace_encode(ec_enc *enc, int *value, unsigned fs, int decay)$/;"	f
ec_laplace_get_freq1	src/hw/audio/opus-1.2.1/laplace.c	/^static unsigned ec_laplace_get_freq1(unsigned fs0, int decay)$/;"	f	file:
ec_prevLagIndex	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   ec_prevLagIndex;$/;"	m	struct:__anon33
ec_prevLagIndex	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                  ec_prevLagIndex;$/;"	m	struct:__anon36
ec_prevSignalType	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     ec_prevSignalType;$/;"	m	struct:__anon33
ec_prevSignalType	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    ec_prevSignalType;$/;"	m	struct:__anon36
ec_range_bytes	src/hw/audio/opus-1.2.1/entcode.h	/^static OPUS_INLINE opus_uint32 ec_range_bytes(ec_ctx *_this){$/;"	f
ec_read_byte	src/hw/audio/opus-1.2.1/entdec.c	/^static int ec_read_byte(ec_dec *_this){$/;"	f	file:
ec_read_byte_from_end	src/hw/audio/opus-1.2.1/entdec.c	/^static int ec_read_byte_from_end(ec_dec *_this){$/;"	f	file:
ec_sel	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_uint8             *ec_sel;$/;"	m	struct:__anon29
ec_tell	src/hw/audio/opus-1.2.1/entcode.h	/^static OPUS_INLINE int ec_tell(ec_ctx *_this){$/;"	f
ec_tell_frac	src/hw/audio/opus-1.2.1/entcode.c	/^opus_uint32 ec_tell_frac(ec_ctx *_this){$/;"	f
ec_window	src/hw/audio/opus-1.2.1/entcode.h	/^typedef opus_uint32           ec_window;$/;"	t
ec_write_byte	src/hw/audio/opus-1.2.1/entenc.c	/^static int ec_write_byte(ec_enc *_this,unsigned _value){$/;"	f	file:
ec_write_byte_at_end	src/hw/audio/opus-1.2.1/entenc.c	/^static int ec_write_byte_at_end(ec_enc *_this,unsigned _value){$/;"	f	file:
edrx	src/event/modem_event.h	/^    struct modem_edrx edrx;$/;"	m	union:modem_event::__anon55	typeref:struct:modem_event::__anon55::modem_edrx
edrx	src/event/modem_event.h	/^  float edrx;$/;"	m	struct:modem_edrx
effEBands	src/hw/audio/opus-1.2.1/modes.h	/^   int          effEBands;$/;"	m	struct:OpusCustomMode
encode	src/hw/audio/opus-1.2.1/bands.c	/^   int encode;$/;"	m	struct:band_ctx	file:
encode_and_send	src/hw/audio/codec2.c	/^int encode_and_send( void ) {$/;"	f
encode_and_send	src/hw/old-codec.c	/^int encode_and_send( void ) {$/;"	f
encode_and_write	src/hw/audio/codec2_pdm_mic.c	/^int encode_and_write( void ) {$/;"	f
encode_buffer_out	src/hw/audio/codec2_pdm_mic.c	/^i16 *encode_buffer_out;$/;"	v
encode_multiframe_packet	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static opus_int32 encode_multiframe_packet(OpusEncoder *st,$/;"	f	file:
encode_pulses	src/hw/audio/opus-1.2.1/cwrs.c	/^void encode_pulses(const int *_y,int _n,int _k,ec_enc *_enc){$/;"	f
encode_size	src/hw/audio/opus-1.2.1/opus.c	/^int encode_size(int size, unsigned char *data)$/;"	f
encode_split	src/hw/audio/opus-1.2.1/shell_coder.c	/^static OPUS_INLINE void encode_split($/;"	f	file:
encoder_buffer	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          encoder_buffer;$/;"	m	struct:OpusEncoder	file:
end	src/event/radio_event.h	/^  bool  end;$/;"	m	struct:radio_data
end	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int start, end;$/;"	m	struct:OpusCustomDecoder	file:
end	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int start, end;$/;"	m	struct:OpusCustomEncoder	file:
end_offs	src/hw/audio/opus-1.2.1/entcode.h	/^   opus_uint32    end_offs;$/;"	m	struct:ec_ctx
end_window	src/hw/audio/opus-1.2.1/entcode.h	/^   ec_window      end_window;$/;"	m	struct:ec_ctx
energy_mask	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_val16 *energy_mask;$/;"	m	struct:OpusCustomEncoder	file:
energy_masking	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    opus_val16 * energy_masking;$/;"	m	struct:OpusEncoder	file:
entry_point	src/module/modem.c	/^static void entry_point(void)$/;"	f	file:
err	src/event/app.h	/^		int err;$/;"	m	union:app_module_event::__anon56
err	src/event/modem_event.h	/^    int err;$/;"	m	union:modem_event::__anon55
err	src/event/radio_event.h	/^    int err;$/;"	m	union:radio_event::__anon57
err	src/event/server_event.h	/^    int err;$/;"	m	union:server_event::__anon58
error	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int error;$/;"	m	struct:OpusCustomDecoder	file:
error	src/hw/audio/opus-1.2.1/entcode.h	/^   int            error;$/;"	m	struct:ec_ctx
esp	src/hw/uart.c	/^  } esp;$/;"	m	struct:uart_message	typeref:union:uart_message::__anon46	file:
esp32_state	src/hw/uart.c	/^} esp32_state;$/;"	v	typeref:enum:__anon45
event_handler	src/hw/audio/codec2.c	/^int event_handler ( struct hw_msg *msg ) {$/;"	f
event_handler	src/hw/old-codec.c	/^int event_handler ( struct hw_msg *msg ) {$/;"	f
event_handler	src/main.c	/^static bool event_handler(const struct event_header *eh)$/;"	f	file:
event_handler	src/module/sdk_modem.c	/^static bool event_handler(const struct event_header *eh)$/;"	f	file:
event_handler	src/module/ui.c	/^static bool event_handler( const struct event_header *eh ) {$/;"	f	file:
event_handler	src/ui/ui_input.c	/^static void event_handler(u32 device_states, u32 has_changed ) {$/;"	f	file:
evt	src/hw/audio/codec-i2s.h	/^    drv_sgtl5000_evt_type_t evt;$/;"	m	struct:__anon6
exc_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  exc_Q14[ MAX_FRAME_LENGTH ];$/;"	m	struct:__anon36
exp_rotation	src/hw/audio/opus-1.2.1/vq.c	/^void exp_rotation(celt_norm *X, int len, int dir, int stride, int K, int spread)$/;"	f
exp_rotation1	src/hw/audio/opus-1.2.1/vq.c	/^static void exp_rotation1(celt_norm *X, int len, int stride, opus_val16 c, opus_val16 s)$/;"	f	file:
ext	src/hw/audio/opus-1.2.1/entcode.h	/^   opus_uint32    ext;$/;"	m	struct:ec_ctx
extract_collapse_mask	src/hw/audio/opus-1.2.1/vq.c	/^static unsigned extract_collapse_mask(int *iy, int N, int B)$/;"	f	file:
factors	src/hw/audio/opus-1.2.1/kiss_fft.h	/^    opus_int16 factors[2*MAXFACTORS];$/;"	m	struct:kiss_fft_state
fast_atan2f	src/hw/audio/opus-1.2.1/mathops.h	/^static OPUS_INLINE float fast_atan2f(float y, float x) {$/;"	f
fds	src/module/motorola.c	/^static struct pollfd fds;$/;"	v	typeref:struct:pollfd	file:
fds_init	src/module/motorola.c	/^static int fds_init(struct mqtt_client *c)$/;"	f	file:
fec_thresholds	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static const opus_int32 fec_thresholds[] = {$/;"	v	file:
fetch_users	src/module/users.c	/^struct user *fetch_users( void ) {$/;"	f
fft_bitrev120	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const opus_int16 fft_bitrev120[120] = {$/;"	v
fft_bitrev120	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const opus_int16 fft_bitrev120[120] = {$/;"	v
fft_bitrev240	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const opus_int16 fft_bitrev240[240] = {$/;"	v
fft_bitrev240	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const opus_int16 fft_bitrev240[240] = {$/;"	v
fft_bitrev480	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const opus_int16 fft_bitrev480[480] = {$/;"	v
fft_bitrev480	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const opus_int16 fft_bitrev480[480] = {$/;"	v
fft_bitrev60	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const opus_int16 fft_bitrev60[60] = {$/;"	v
fft_bitrev60	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const opus_int16 fft_bitrev60[60] = {$/;"	v
fft_state48000_960_0	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const kiss_fft_state fft_state48000_960_0 = {$/;"	v
fft_state48000_960_0	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const kiss_fft_state fft_state48000_960_0 = {$/;"	v
fft_state48000_960_1	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const kiss_fft_state fft_state48000_960_1 = {$/;"	v
fft_state48000_960_1	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const kiss_fft_state fft_state48000_960_1 = {$/;"	v
fft_state48000_960_2	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const kiss_fft_state fft_state48000_960_2 = {$/;"	v
fft_state48000_960_2	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const kiss_fft_state fft_state48000_960_2 = {$/;"	v
fft_state48000_960_3	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const kiss_fft_state fft_state48000_960_3 = {$/;"	v
fft_state48000_960_3	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const kiss_fft_state fft_state48000_960_3 = {$/;"	v
fft_twiddles48000_960	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const kiss_twiddle_cpx fft_twiddles48000_960[480] = {$/;"	v
fft_twiddles48000_960	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const kiss_twiddle_cpx fft_twiddles48000_960[480] = {$/;"	v
find_best_pitch	src/hw/audio/opus-1.2.1/pitch.c	/^static void find_best_pitch(opus_val32 *xcorr, opus_val16 *y, int len,$/;"	f	file:
first	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          first;$/;"	m	struct:OpusEncoder	file:
first_frame_after_reset	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     first_frame_after_reset;           \/* Flag for deactivating NLSF interpolation, pitch prediction       *\/$/;"	m	struct:__anon33
first_frame_after_reset	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    first_frame_after_reset;            \/* Flag for deactivating NLSF interpolation                         *\/$/;"	m	struct:__anon36
fits_in32	src/hw/audio/opus-1.2.1/rate.c	/^static int fits_in32(int _n, int _k)$/;"	f	file:
flag	src/hw/audio/codec2_pdm_mic.c	/^bool flag = 0;$/;"	v
float2int	src/hw/audio/opus-1.2.1/float_cast.h	/^        #define float2int(/;"	d
float2int	src/hw/audio/opus-1.2.1/float_cast.h	/^        __inline long int float2int(float value)$/;"	f
float2int	src/hw/audio/opus-1.2.1/float_cast.h	/^        float2int (float flt)$/;"	f
float2int	src/hw/audio/opus-1.2.1/float_cast.h	/^#define float2int(/;"	d
float2int	src/hw/audio/opus-1.2.1/float_cast.h	/^static OPUS_INLINE opus_int32 float2int(float x) {return _mm_cvt_ss2si(_mm_set_ss(x));}$/;"	f
font	src/module/ui.c	/^static const lv_font_t *font;$/;"	v	file:
force_channels	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          force_channels;$/;"	m	struct:OpusEncoder	file:
force_intra	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int force_intra;$/;"	m	struct:OpusCustomEncoder	file:
frac_div32	src/hw/audio/opus-1.2.1/mathops.c	/^opus_val32 frac_div32(opus_val32 a, opus_val32 b)$/;"	f
frac_div32	src/hw/audio/opus-1.2.1/mathops.h	/^#define frac_div32(/;"	d
frameCounter	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                   frameCounter;$/;"	m	struct:__anon33
frame_OPUS_decode	src/hw/audio/audio.c	/^static m_audio_frame_t frame_OPUS_decode = {.data_size = 0};$/;"	v	file:
frame_OPUS_encode	src/hw/audio/audio.c	/^static m_audio_frame_t frame_OPUS_encode;$/;"	v	file:
frame_length	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     frame_length;                      \/* Frame length (samples)                                           *\/$/;"	m	struct:__anon33
frame_length	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    frame_length;                       \/* Frame length (samples)                                           *\/$/;"	m	struct:__anon36
frame_size	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   int          frame_size;$/;"	m	struct:OpusDecoder	file:
frame_size_select	src/hw/audio/opus-1.2.1/opus_encoder.c	/^opus_int32 frame_size_select(opus_int32 frame_size, int variable_duration, opus_int32 Fs)$/;"	f
frames	src/hw/audio/opus-1.2.1/opus_private.h	/^   const unsigned char *frames[48];$/;"	m	struct:OpusRepacketizer
frames_since_onset	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     frames_since_onset;$/;"	m	struct:__anon33
framesize	src/hw/audio/opus-1.2.1/opus_private.h	/^   int framesize;$/;"	m	struct:OpusRepacketizer
freedv	src/hw/audio/codec2.c	/^const struct freedv *freedv;$/;"	v	typeref:struct:freedv
freedv	src/hw/audio/codec2_pdm_mic.c	/^const struct freedv *freedv;$/;"	v	typeref:struct:freedv
freedv	src/hw/old-codec.c	/^const struct freedv *freedv;$/;"	v	typeref:struct:freedv
freq_table_Q16	src/hw/audio/opus-1.2.1/apply_sine_window_FIX.c	/^static const opus_int16 freq_table_Q16[ 27 ] = {$/;"	v	file:
fromOpus	src/hw/audio/opus-1.2.1/celt.h	/^static OPUS_INLINE int fromOpus(unsigned char c)$/;"	f
fromOpusTable	src/hw/audio/opus-1.2.1/celt.h	/^static const unsigned char fromOpusTable[16] = {$/;"	v
fs	src/hw/driver/sgtl5000.h	/^    uint32_t fs;$/;"	m	struct:__anon1
fs_API_hz	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  fs_API_hz;                          \/* API sample frequency (Hz)                                        *\/$/;"	m	struct:__anon36
fs_kHz	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     fs_kHz;                            \/* Internal sampling frequency (kHz)                                *\/$/;"	m	struct:__anon33
fs_kHz	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    fs_kHz;                             \/* Sampling frequency in kHz                                        *\/$/;"	m	struct:__anon36
fs_kHz	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    fs_kHz;$/;"	m	struct:__anon34
fs_kHz	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    fs_kHz;$/;"	m	struct:__anon35
gain_fade	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static void gain_fade(const opus_val16 *in, opus_val16 *out, opus_val16 g1, opus_val16 g2,$/;"	f	file:
gen_toc	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static unsigned char gen_toc(int mode, int framerate, int bandwidth, int channels)$/;"	f	file:
get_battery_data	src/module/modem.c	/^static int get_battery_data( void ) {$/;"	f	file:
get_left_channel	src/hw/audio/opus-1.2.1/opus_multistream.c	/^int get_left_channel(const ChannelLayout *layout, int stream_id, int prev)$/;"	f
get_mono_channel	src/hw/audio/opus-1.2.1/opus_multistream.c	/^int get_mono_channel(const ChannelLayout *layout, int stream_id, int prev)$/;"	f
get_pulses	src/hw/audio/opus-1.2.1/rate.h	/^static OPUS_INLINE int get_pulses(int i)$/;"	f
get_required_bits	src/hw/audio/opus-1.2.1/cwrs.c	/^void get_required_bits(opus_int16 *_bits,int _n,int _maxk,int _frac){$/;"	f
get_right_channel	src/hw/audio/opus-1.2.1/opus_multistream.c	/^int get_right_channel(const ChannelLayout *layout, int stream_id, int prev)$/;"	f
global_stack	src/hw/audio/opus-1.2.1/stack_alloc.h	/^char *global_stack=0;$/;"	v
global_stack_top	src/hw/audio/opus-1.2.1/stack_alloc.h	/^char *global_stack_top=0;$/;"	v
haar1	src/hw/audio/opus-1.2.1/bands.c	/^void haar1(celt_norm *X, int N0, int stride)$/;"	f
header	src/event/app.h	/^	struct app_event_header header;$/;"	m	struct:app_module_event	typeref:struct:app_module_event::app_event_header
header	src/event/hw_event.h	/^  struct event_header header;$/;"	m	struct:hw_event	typeref:struct:hw_event::event_header
header	src/event/modem_event.h	/^  struct event_header header;$/;"	m	struct:modem_event	typeref:struct:modem_event::event_header
header	src/event/radio_event.h	/^  struct event_header header;$/;"	m	struct:radio_event	typeref:struct:radio_event::event_header
header	src/event/server_event.h	/^  struct event_header header;$/;"	m	struct:server_event	typeref:struct:server_event::event_header
hf_average	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int hf_average;$/;"	m	struct:OpusCustomEncoder	file:
highE	src/hw/audio/opus-1.2.1/analysis.h	/^   float highE[NB_TBANDS];$/;"	m	struct:__anon41
host_addr	src/module/radio.c	/^static struct sockaddr_storage host_addr;$/;"	v	typeref:struct:sockaddr_storage	file:
hp_cutoff	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static void hp_cutoff(const opus_val16 *in, opus_int32 cutoff_Hz, opus_val16 *out, opus_val32 *hp_mem, int len, int channels, opus_int32 Fs, int arch)$/;"	f	file:
hp_ener_accum	src/hw/audio/opus-1.2.1/analysis.h	/^   float hp_ener_accum;$/;"	m	struct:__anon41
hp_mem	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    opus_val32   hp_mem[4];$/;"	m	struct:OpusEncoder	file:
hw	src/hw/audio/codec2.c	/^    struct hw_event hw;$/;"	m	union:hw_msg::__anon42	typeref:struct:hw_msg::__anon42::hw_event	file:
hw	src/hw/old-codec.c	/^    struct hw_event hw;$/;"	m	union:hw_msg::__anon2	typeref:struct:hw_msg::__anon2::hw_event	file:
hw	src/module/ui.c	/^    struct hw_event     hw;$/;"	m	union:ui_msg::__anon50	typeref:struct:ui_msg::__anon50::hw_event	file:
hw_event	src/event/hw_event.h	/^EVENT_TYPE_DECLARE( hw_event );$/;"	v
hw_event	src/event/hw_event.h	/^struct hw_event {$/;"	s
hw_event_type	src/event/hw_event.h	/^enum hw_event_type {$/;"	g
hw_msg	src/hw/audio/codec2.c	/^struct hw_msg {$/;"	s	file:
hw_msg	src/hw/old-codec.c	/^struct hw_msg {$/;"	s	file:
hybrid_stereo_width_Q14	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    opus_int16   hybrid_stereo_width_Q14;$/;"	m	struct:OpusEncoder	file:
hysteresis_decision	src/hw/audio/opus-1.2.1/bands.c	/^int hysteresis_decision(opus_val16 val, const opus_val16 *thresholds, const opus_val16 *hysteresis, int N, int prev)$/;"	f
i	src/hw/audio/opus-1.2.1/bands.c	/^   int i;$/;"	m	struct:band_ctx	file:
i	src/hw/audio/opus-1.2.1/kiss_fft.h	/^    kiss_fft_scalar i;$/;"	m	struct:__anon23
i	src/hw/audio/opus-1.2.1/kiss_fft.h	/^   kiss_twiddle_scalar i;$/;"	m	struct:__anon24
i16	src/hw/audio/opus-1.2.1/resampler_structs.h	/^        opus_int16   i16[ SILK_RESAMPLER_MAX_FIR_ORDER ];$/;"	m	union:_silk_resampler_state_struct::__anon38
i2c_cfg	src/hw/audio/codec-i2s.c	/^u32_t i2c_cfg = I2C_SPEED_SET(I2C_SPEED_STANDARD) | I2C_MODE_MASTER;$/;"	v
i2c_dev	src/hw/audio/codec-i2s.c	/^struct device *i2c_dev;$/;"	v	typeref:struct:device
i2c_dev	src/hw/driver/sgtl5000.h	/^	struct device *i2c_dev;$/;"	m	struct:__anon1	typeref:struct:__anon1::device
i2s	src/module/motorola.c	/^    struct i2s_event   i2s;$/;"	m	union:radio_msg::__anon48	typeref:struct:radio_msg::__anon48::i2s_event	file:
i2s_data_handler	src/hw/audio/codec-i2s.c	/^static void i2s_data_handler(nrfx_i2s_buffers_t const * p_released,$/;"	f	file:
i2s_data_handler_old	src/hw/audio/codec-i2s.c	/^static void i2s_data_handler_old(uint32_t const * p_data_received, uint32_t * p_data_to_send, uint16_t number_of_words)$/;"	f	file:
i2s_line_in	src/hw/audio/audio.c	/^static u8_t i2s_line_in[INPUT_DATA_SIZE];$/;"	v	file:
i2s_sgtl5000_driver_evt_handler	src/hw/audio/codec-i2s.c	/^static bool i2s_sgtl5000_driver_evt_handler(drv_sgtl5000_evt_t * p_evt)$/;"	f	file:
i2s_speaker	src/hw/audio/audio.c	/^static u8_t i2s_speaker[OUTPUT_DATA_SIZE];$/;"	v	file:
i2s_speaker_two	src/hw/audio/audio.c	/^static u8_t i2s_speaker_two[OUTPUT_DATA_SIZE];$/;"	v	file:
i2s_thread_fn	src/hw/audio/codec2.c	/^static void i2s_thread_fn( void ) {$/;"	f	file:
i2s_thread_fn	src/hw/old-codec.c	/^static void i2s_thread_fn( void ) {$/;"	f	file:
i32	src/hw/audio/opus-1.2.1/resampler_structs.h	/^        opus_int32   i32[ SILK_RESAMPLER_MAX_FIR_ORDER ];$/;"	m	union:_silk_resampler_state_struct::__anon38
icon_path	src/module/ui.c	/^const char* icon_path = ".\/icon.bin";$/;"	v
icwrs	src/hw/audio/opus-1.2.1/cwrs.c	/^static OPUS_INLINE opus_uint32 icwrs(int _n,int _k,opus_uint32 *_nc,const int *_y,$/;"	f	file:
icwrs	src/hw/audio/opus-1.2.1/cwrs.c	/^static opus_uint32 icwrs(int _n,const int *_y){$/;"	f	file:
icwrs1	src/hw/audio/opus-1.2.1/cwrs.c	/^static OPUS_INLINE opus_uint32 icwrs1(const int *_y,int *_k){$/;"	f	file:
id	src/event/app.h	/^		uint32_t id;$/;"	m	union:app_module_event::__anon56
id	src/event/hw_event.h	/^    u32 id;$/;"	m	union:hw_event::__anon54
id	src/event/hw_event.h	/^  int id;$/;"	m	struct:button_data
id	src/event/modem_event.h	/^    u32 id;$/;"	m	union:modem_event::__anon55
id	src/event/radio_event.h	/^    u32 id;$/;"	m	union:radio_event::__anon57
id	src/event/server_event.h	/^    u32 id;$/;"	m	union:server_event::__anon58
id	src/module/users.c	/^  u32 id;$/;"	m	struct:user	file:
imid	src/hw/audio/opus-1.2.1/bands.c	/^   int imid;$/;"	m	struct:split_ctx	file:
inDTX	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     inDTX;                             \/* Flag to signal DTX period                                        *\/$/;"	m	struct:__anon33
inWBmodeWithoutVariableLP	src/hw/audio/opus-1.2.1/control.h	/^    opus_int inWBmodeWithoutVariableLP;$/;"	m	struct:__anon8
in_mem	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   celt_sig in_mem[1]; \/* Size = channels*mode->overlap *\/$/;"	m	struct:OpusCustomEncoder	file:
inbandFECFlag	src/hw/audio/opus-1.2.1/API.h	/^    opus_int    inbandFECFlag;                          \/* Flag indicating if packet contains in-band FEC       *\/$/;"	m	struct:__anon22
incoming_message_buffer	src/hw/audio/codec2.c	/^u16 *incoming_message_buffer;$/;"	v
incoming_message_buffer	src/hw/old-codec.c	/^u16 *incoming_message_buffer;$/;"	v
incoming_message_size	src/hw/audio/codec2.c	/^size_t incoming_message_size;$/;"	v
incoming_message_size	src/hw/old-codec.c	/^size_t incoming_message_size;$/;"	v
incoming_mutex	src/hw/audio/codec2.c	/^K_DEFINE_MUTEX( incoming_mutex );$/;"	v
incoming_mutex	src/hw/audio/codec2.c	/^const k_mutex incoming_mutex;$/;"	v
incoming_mutex	src/hw/old-codec.c	/^K_DEFINE_MUTEX( incoming_mutex );$/;"	v
incoming_mutex	src/hw/old-codec.c	/^const k_mutex incoming_mutex;$/;"	v
index	src/hw/audio/opus-1.2.1/modes.h	/^   const opus_int16 *index;$/;"	m	struct:__anon39
indices	src/hw/audio/opus-1.2.1/structs.h	/^    SideInfoIndices              indices;$/;"	m	struct:__anon33
indices	src/hw/audio/opus-1.2.1/structs.h	/^    SideInfoIndices             indices;$/;"	m	struct:__anon36
indices_LBRR	src/hw/audio/opus-1.2.1/structs.h	/^    SideInfoIndices              indices_LBRR[ MAX_FRAMES_PER_PACKET ];$/;"	m	struct:__anon33
info	src/hw/audio/opus-1.2.1/analysis.h	/^   AnalysisInfo info[DETECT_SIZE];$/;"	m	struct:__anon41
init	src/hw/audio/codec2.c	/^int init ( void ) {$/;"	f
init	src/hw/old-codec.c	/^int init ( void ) {$/;"	f
init_broker	src/module/motorola.c	/^static int init_broker( void ) {$/;"	f	file:
init_caps	src/hw/audio/opus-1.2.1/celt.c	/^void init_caps(const CELTMode *m,int *cap,int LM,int C)$/;"	f
init_client	src/module/motorola.c	/^static int init_client( void ) {$/;"	f	file:
init_freedv	src/hw/audio/codec2.c	/^int init_freedv( ) {$/;"	f
init_freedv	src/hw/audio/codec2_pdm_mic.c	/^int init_freedv( i16 *output_buffer ) {$/;"	f
init_freedv	src/hw/old-codec.c	/^int init_freedv( ) {$/;"	f
init_i2c	src/hw/audio/codec-i2s.c	/^static void init_i2c()$/;"	f	file:
init_pdm	src/hw/audio/codec2_pdm_mic.c	/^int init_pdm( i16 *output_buffer ) {$/;"	f
init_uart	src/hw/uart.c	/^void init_uart( void ) {$/;"	f
init_ui	src/module/ui.c	/^void init_ui( void ) {$/;"	f
inmem	src/hw/audio/opus-1.2.1/analysis.h	/^   opus_val32 inmem[ANALYSIS_BUF_SIZE];$/;"	m	struct:__anon41
inputBuf	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   inputBuf[ MAX_FRAME_LENGTH + 2 ];  \/* Buffer containing input signal                                   *\/$/;"	m	struct:__anon33
inputBufIx	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     inputBufIx;$/;"	m	struct:__anon33
inputDelay	src/hw/audio/opus-1.2.1/resampler_structs.h	/^    opus_int         inputDelay;$/;"	m	struct:_silk_resampler_state_struct
input_quality_Q14	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    input_quality_Q14;$/;"	m	struct:__anon14
input_quality_bands_Q15	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     input_quality_bands_Q15[ VAD_N_BANDS ];$/;"	m	struct:__anon33
input_state	src/hw/uart.c	/^enum input_state {$/;"	g	file:
input_tilt_Q15	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     input_tilt_Q15;$/;"	m	struct:__anon33
intensity	src/hw/audio/opus-1.2.1/bands.c	/^   int intensity;$/;"	m	struct:band_ctx	file:
intensity	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int intensity;$/;"	m	struct:OpusCustomEncoder	file:
intensity_stereo	src/hw/audio/opus-1.2.1/bands.c	/^static void intensity_stereo(const CELTMode *m, celt_norm * OPUS_RESTRICT X, const celt_norm * OPUS_RESTRICT Y, const celt_ener *bandE, int bandID, int N)$/;"	f	file:
interleave_hadamard	src/hw/audio/opus-1.2.1/bands.c	/^static void interleave_hadamard(celt_norm *X, int N0, int stride, int hadamard)$/;"	f	file:
internalSampleRate	src/hw/audio/opus-1.2.1/control.h	/^    opus_int32 internalSampleRate;$/;"	m	struct:__anon8
internalSampleRate	src/hw/audio/opus-1.2.1/control.h	/^    opus_int32 internalSampleRate;$/;"	m	struct:__anon9
interp_bits2pulses	src/hw/audio/opus-1.2.1/rate.c	/^static OPUS_INLINE int interp_bits2pulses(const CELTMode *m, int start, int end, int skip_start,$/;"	f	file:
inv	src/hw/audio/opus-1.2.1/bands.c	/^   int inv;$/;"	m	struct:split_ctx	file:
invQuantStepSize_Q6	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_int16             invQuantStepSize_Q6;$/;"	m	struct:__anon29
invRatio_Q16	src/hw/audio/opus-1.2.1/resampler_structs.h	/^    opus_int32       invRatio_Q16;$/;"	m	struct:_silk_resampler_state_struct
inv_NL	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  inv_NL[ VAD_N_BANDS ];          \/* Inverse noise energy level in each band                              *\/$/;"	m	struct:__anon27
is_digital_silence	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static int is_digital_silence(const opus_val16* pcm, int frame_size, int channels, int lsb_depth)$/;"	f	file:
is_initialized	src/hw/audio/codec2_pdm_mic.c	/^bool is_initialized( void ) {$/;"	f
is_supported	src/hw/audio/opus-1.2.1/kiss_fft.h	/^   int is_supported;$/;"	m	struct:arch_fft_state
iside	src/hw/audio/opus-1.2.1/bands.c	/^   int iside;$/;"	m	struct:split_ctx	file:
isqrt32	src/hw/audio/opus-1.2.1/mathops.c	/^unsigned isqrt32(opus_uint32 _val){$/;"	f
item_click_cb	src/ui/random_view_stuff.c	/^static void item_click_cb( lv_event_t *e ) {$/;"	f	file:
itheta	src/hw/audio/opus-1.2.1/bands.c	/^   int itheta;$/;"	m	struct:split_ctx	file:
kf_bfly2	src/hw/audio/opus-1.2.1/kiss_fft.c	/^static void kf_bfly2($/;"	f	file:
kf_bfly3	src/hw/audio/opus-1.2.1/kiss_fft.c	/^static void kf_bfly3($/;"	f	file:
kf_bfly4	src/hw/audio/opus-1.2.1/kiss_fft.c	/^static void kf_bfly4($/;"	f	file:
kf_bfly5	src/hw/audio/opus-1.2.1/kiss_fft.c	/^static void kf_bfly5($/;"	f	file:
kf_cexp	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define  kf_cexp(/;"	d
kf_cexp2	src/hw/audio/opus-1.2.1/_kiss_fft_guts.h	/^#define  kf_cexp2(/;"	d
kf_factor	src/hw/audio/opus-1.2.1/kiss_fft.c	/^int kf_factor(int n,opus_int16 * facbuf)$/;"	f	file:
kfft	src/hw/audio/opus-1.2.1/mdct.h	/^   const kiss_fft_state *kfft[4];$/;"	m	struct:__anon40
kiss_fft_cpx	src/hw/audio/opus-1.2.1/kiss_fft.h	/^}kiss_fft_cpx;$/;"	t	typeref:struct:__anon23
kiss_fft_scalar	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#   define kiss_fft_scalar /;"	d
kiss_fft_scalar	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#  define kiss_fft_scalar /;"	d
kiss_fft_scalar	src/hw/audio/opus-1.2.1/kiss_fft.h	/^# define kiss_fft_scalar /;"	d
kiss_fft_state	src/hw/audio/opus-1.2.1/kiss_fft.h	/^typedef struct kiss_fft_state{$/;"	s
kiss_fft_state	src/hw/audio/opus-1.2.1/kiss_fft.h	/^} kiss_fft_state;$/;"	t	typeref:struct:kiss_fft_state
kiss_twiddle_cpx	src/hw/audio/opus-1.2.1/kiss_fft.h	/^}kiss_twiddle_cpx;$/;"	t	typeref:struct:__anon24
kiss_twiddle_scalar	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#   define kiss_twiddle_scalar /;"	d
kiss_twiddle_scalar	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#  define kiss_twiddle_scalar /;"	d
l1_metric	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static opus_val32 l1_metric(const celt_norm *tmp, int N, int LM, opus_val16 bias)$/;"	f	file:
la_pitch	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     la_pitch;                          \/* Look-ahead for pitch analysis (samples)                          *\/$/;"	m	struct:__anon33
la_shape	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     la_shape;                          \/* Look-ahead for noise shape analysis (samples)                    *\/$/;"	m	struct:__anon33
lagIndex	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   lagIndex;$/;"	m	struct:__anon32
lagPrev	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    lagPrev;                            \/* Previous Lag                                                     *\/$/;"	m	struct:__anon36
lagPrev	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    lagPrev;$/;"	m	struct:__anon26
lastCodedBands	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int lastCodedBands;$/;"	m	struct:OpusCustomEncoder	file:
lastGainIndexPrev	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int8                   lastGainIndexPrev;$/;"	m	struct:__anon14
last_frame_lost	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    last_frame_lost;                    \/* Was previous frame lost                                          *\/$/;"	m	struct:__anon34
last_music	src/hw/audio/opus-1.2.1/analysis.h	/^   int last_music;$/;"	m	struct:__anon41
last_packet_duration	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   int          last_packet_duration;$/;"	m	struct:OpusDecoder	file:
last_pitch_index	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int last_pitch_index;$/;"	m	struct:OpusCustomDecoder	file:
layers	src/hw/audio/opus-1.2.1/mlp.h	/^    int layers;$/;"	m	struct:__anon21
layout	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^   ChannelLayout layout;$/;"	m	struct:OpusMSDecoder	file:
layout	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^   ChannelLayout layout;$/;"	m	struct:OpusMSEncoder	file:
leak_boost	src/hw/audio/opus-1.2.1/celt.h	/^   unsigned char leak_boost[LEAK_BANDS];$/;"	m	struct:__anon10
len	src/event/radio_event.h	/^  size_t len;$/;"	m	struct:buffer_data
len	src/event/radio_event.h	/^  size_t len;$/;"	m	struct:radio_data
len	src/event/server_event.h	/^  size_t len;$/;"	m	struct:server_data
len	src/hw/audio/opus-1.2.1/opus_private.h	/^   opus_int16 len[48];$/;"	m	struct:OpusRepacketizer
len	src/hw/uart.c	/^  u16    len;$/;"	m	struct:uart_text	file:
lfe	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int lfe;$/;"	m	struct:OpusCustomEncoder	file:
lfe	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          lfe;$/;"	m	struct:OpusEncoder	file:
lfe_stream	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^   int lfe_stream;$/;"	m	struct:OpusMSEncoder	file:
limit_warped_coefs	src/hw/audio/opus-1.2.1/noise_shape_analysis_FIX.c	/^static OPUS_INLINE void limit_warped_coefs($/;"	f	file:
list_view	src/module/ui.c	/^static const lv_obj_t *list_view;$/;"	v	file:
listen	src/hw/audio/codec2_pdm_mic.c	/^int listen ( void ) {$/;"	f
listen_view	src/module/ui.c	/^static const lv_obj_t *listen_view;$/;"	v	file:
log2_frac	src/hw/audio/opus-1.2.1/cwrs.c	/^int log2_frac(opus_uint32 val, int frac)$/;"	f
logE	src/hw/audio/opus-1.2.1/analysis.h	/^   float logE[NB_FRAMES][NB_TBANDS];$/;"	m	struct:__anon41
logN	src/hw/audio/opus-1.2.1/modes.h	/^   const opus_int16 *logN;$/;"	m	struct:OpusCustomMode
logN400	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const opus_int16 logN400[21] = {$/;"	v
logN400	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const opus_int16 logN400[21] = {$/;"	v
logSum	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^opus_val16 logSum(opus_val16 a, opus_val16 b)$/;"	f
logSum	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static opus_val16 logSum(opus_val16 a, opus_val16 b)$/;"	f	file:
lossCnt	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    lossCnt;$/;"	m	struct:__anon36
loss_count	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int loss_count;$/;"	m	struct:OpusCustomDecoder	file:
loss_distortion	src/hw/audio/opus-1.2.1/quant_bands.c	/^static opus_val32 loss_distortion(const opus_val16 *eBands, opus_val16 *oldEBands, int start, int end, int len, int C)$/;"	f	file:
loss_rate	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int loss_rate;$/;"	m	struct:OpusCustomEncoder	file:
lowE	src/hw/audio/opus-1.2.1/analysis.h	/^   float lowE[NB_TBANDS];$/;"	m	struct:__anon41
lowECount	src/hw/audio/opus-1.2.1/analysis.h	/^   float lowECount;$/;"	m	struct:__anon41
lsb_depth	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int lsb_depth;$/;"	m	struct:OpusCustomEncoder	file:
lsb_depth	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          lsb_depth;$/;"	m	struct:OpusEncoder	file:
lte_connect	src/module/modem.c	/^static int lte_connect( void ) {$/;"	f	file:
lte_connect	src/module/sdk_modem.c	/^static int lte_connect(void)$/;"	f	file:
lte_event_handler	src/module/modem.c	/^static void lte_event_handler(const struct lte_lc_evt *const event) {$/;"	f	file:
lte_evt_handler	src/module/sdk_modem.c	/^static void lte_evt_handler(const struct lte_lc_evt *const evt)$/;"	f	file:
ltp_mem_length	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     ltp_mem_length;                    \/* Length of LTP memory                                             *\/$/;"	m	struct:__anon33
ltp_mem_length	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    ltp_mem_length;                     \/* Length of LTP memory                                             *\/$/;"	m	struct:__anon36
lwm2m_carrier_event_handler	src/module/sdk_modem.c	/^int lwm2m_carrier_event_handler(const lwm2m_carrier_event_t *evt)$/;"	f
m	src/hw/audio/opus-1.2.1/bands.c	/^   const CELTMode *m;$/;"	m	struct:band_ctx	file:
m_bitrate_gauge	src/hw/old-codec.c	/^static m_audio_bitrate_gauge_t  m_bitrate_gauge;$/;"	v	file:
m_decoding_cpu_gauge	src/hw/old-codec.c	/^static m_audio_cpu_gauge_t      m_decoding_cpu_gauge;$/;"	v	file:
m_encoding_cpu_gauge	src/hw/old-codec.c	/^static m_audio_cpu_gauge_t      m_encoding_cpu_gauge;$/;"	v	file:
m_i2s_config	src/hw/audio/codec-i2s.c	/^static nrfx_i2s_config_t       m_i2s_config;$/;"	v	file:
m_i2s_evt_handler	src/hw/audio/codec-i2s.c	/^static drv_sgtl5000_handler_t     m_i2s_evt_handler;$/;"	v	file:
m_i2s_rx_buffer	src/hw/audio/codec-i2s.c	/^static uint32_t  m_i2s_rx_buffer[2][AUDIO_FRAME_WORDS];\/\/ Double buffered$/;"	v	file:
m_i2s_tx_buffer	src/hw/audio/codec-i2s.c	/^static uint32_t  m_i2s_tx_buffer[2][AUDIO_FRAME_WORDS];$/;"	v	file:
m_opus_bitrate	src/hw/audio/opus.c	/^# define                            m_opus_bitrate /;"	d	file:
m_opus_bitrate	src/hw/old-codec.c	/^# define                            m_opus_bitrate /;"	d	file:
m_opus_bitrate	src/hw/old-codec.c	/^static int32_t                      m_opus_bitrate    = ((CONFIG_OPUS_BITRATE != 0) ? CONFIG_OPUS_BITRATE : OPUS_AUTO);$/;"	v	file:
m_opus_complexity	src/hw/audio/opus.c	/^# define                            m_opus_complexity /;"	d	file:
m_opus_complexity	src/hw/old-codec.c	/^# define                            m_opus_complexity /;"	d	file:
m_opus_complexity	src/hw/old-codec.c	/^static uint8_t                      m_opus_complexity = CONFIG_OPUS_COMPLEXITY;$/;"	v	file:
m_opus_decoder	src/hw/audio/opus.c	/^__ALIGN(4) static uint8_t           m_opus_decoder[OPUS_DECODER_SIZE];$/;"	v	file:
m_opus_decoder	src/hw/old-codec.c	/^__ALIGN(4) static uint8_t           m_opus_decoder[OPUS_DECODER_SIZE];$/;"	v	file:
m_opus_decoder_state	src/hw/old-codec.c	/^static OpusDecoder * const          m_opus_decoder_state = (OpusDecoder *)m_opus_decoder;$/;"	v	file:
m_opus_encoder	src/hw/audio/opus.c	/^__ALIGN(4) static uint8_t           m_opus_encoder[OPUS_ENCODER_SIZE];$/;"	v	file:
m_opus_encoder	src/hw/old-codec.c	/^__ALIGN(4) static uint8_t           m_opus_encoder[OPUS_ENCODER_SIZE];$/;"	v	file:
m_opus_encoder_initialized	src/hw/old-codec.c	/^static bool                         m_opus_encoder_initialized;$/;"	v	file:
m_opus_encoder_state	src/hw/old-codec.c	/^static OpusEncoder * const          m_opus_encoder_state = (OpusEncoder *)m_opus_encoder;$/;"	v	file:
m_opus_state	src/hw/audio/opus.c	/^static OpusEncoder * const          m_opus_state = (OpusEncoder *)m_opus_encoder;$/;"	v	file:
m_opus_state_decoder	src/hw/audio/opus.c	/^static OpusDecoder * const          m_opus_state_decoder = (OpusDecoder *)m_opus_decoder;$/;"	v	file:
m_opus_vbr	src/hw/audio/opus.c	/^# define                            m_opus_vbr /;"	d	file:
m_opus_vbr	src/hw/old-codec.c	/^# define                            m_opus_vbr /;"	d	file:
m_opus_vbr	src/hw/old-codec.c	/^static bool                         m_opus_vbr        = ((CONFIG_OPUS_BITRATE == 0) || (CONFIG_OPUS_VBR_ENABLED != 0));$/;"	v	file:
m_state	src/hw/audio/codec-i2s.c	/^} m_state = SGTL5000_STATE_UNINITIALIZED;$/;"	v	typeref:enum:__anon44	file:
main	src/main.c	/^void main ( void ) {$/;"	f
mapping	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^   unsigned char mapping[8];$/;"	m	struct:__anon16	file:
mapping	src/hw/audio/opus-1.2.1/opus_private.h	/^   unsigned char mapping[256];$/;"	m	struct:ChannelLayout
mapping_type	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^   MappingType mapping_type;$/;"	m	struct:OpusMSEncoder	file:
matrix_adr	src/hw/audio/opus-1.2.1/macros.h	/^#define matrix_adr(/;"	d
matrix_c_ptr	src/hw/audio/opus-1.2.1/macros.h	/^#   define matrix_c_ptr(/;"	d
matrix_ptr	src/hw/audio/opus-1.2.1/macros.h	/^#define matrix_ptr(/;"	d
maxBits	src/hw/audio/opus-1.2.1/control.h	/^    opus_int maxBits;$/;"	m	struct:__anon8
maxInternalSampleRate	src/hw/audio/opus-1.2.1/control.h	/^    opus_int32 maxInternalSampleRate;$/;"	m	struct:__anon8
maxInternal_fs_Hz	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     maxInternal_fs_Hz;                 \/* Maximum internal sampling frequency (Hz)                         *\/$/;"	m	struct:__anon33
maxLM	src/hw/audio/opus-1.2.1/modes.h	/^   int         maxLM;$/;"	m	struct:OpusCustomMode
max_bandwidth	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          max_bandwidth;$/;"	m	struct:OpusEncoder	file:
max_follower	src/hw/audio/opus-1.2.1/opus_encoder.c	/^   opus_val16 max_follower;$/;"	m	struct:__anon25	file:
max_pitch_lag	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     max_pitch_lag;                     \/* Highest possible pitch lag (samples)                             *\/$/;"	m	struct:__anon33
maxshift	src/hw/audio/opus-1.2.1/mdct.h	/^   int maxshift;$/;"	m	struct:__anon40
mdct	src/hw/audio/opus-1.2.1/modes.h	/^   mdct_lookup mdct;$/;"	m	struct:OpusCustomMode
mdct_lookup	src/hw/audio/opus-1.2.1/mdct.h	/^} mdct_lookup;$/;"	t	typeref:struct:__anon40
mdct_twiddles960	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const opus_val16 mdct_twiddles960[1800] = {$/;"	v
mdct_twiddles960	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const opus_val16 mdct_twiddles960[1800] = {$/;"	v
meanE	src/hw/audio/opus-1.2.1/analysis.h	/^   float meanE[NB_TBANDS+1];$/;"	m	struct:__anon41
measure_neighboring_cells	src/module/modem.c	/^static int measure_neighboring_cells( void ) {$/;"	f	file:
median_of_3	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static opus_val16 median_of_3(const opus_val16 *x)$/;"	f	file:
median_of_5	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static opus_val16 median_of_5(const opus_val16 *x)$/;"	f	file:
mem	src/hw/audio/opus-1.2.1/analysis.h	/^   float mem[32];$/;"	m	struct:__anon41
mem_fill	src/hw/audio/opus-1.2.1/analysis.h	/^   int   mem_fill;                      \/* number of usable samples in the buffer *\/$/;"	m	struct:__anon41
message_handler	src/module/ui.c	/^void message_handler( ui_msg *msg ) {$/;"	f
mic_buffer	src/hw/audio/codec2_pdm_mic.c	/^i16 mic_buffer[1024];$/;"	v
mid_only_flags	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    mid_only_flags[ MAX_FRAMES_PER_PACKET ];$/;"	m	struct:__anon30
mid_side_amp_Q0	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                   mid_side_amp_Q0[ 4 ];$/;"	m	struct:__anon30
minInternalSampleRate	src/hw/audio/opus-1.2.1/control.h	/^    opus_int32 minInternalSampleRate;$/;"	m	struct:__anon8
minInternal_fs_Hz	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     minInternal_fs_Hz;                 \/* Minimum internal sampling frequency (Hz)                         *\/$/;"	m	struct:__anon33
mlp_process	src/hw/audio/opus-1.2.1/mlp.c	/^void mlp_process(const MLP *m, const float *in, float *out)$/;"	f
mode	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   const OpusCustomMode *mode;$/;"	m	struct:OpusCustomDecoder	file:
mode	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   const OpusCustomMode *mode;     \/**< Mode used by the encoder *\/$/;"	m	struct:OpusCustomEncoder	file:
mode	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   int          mode;$/;"	m	struct:OpusDecoder	file:
mode	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          mode;$/;"	m	struct:OpusEncoder	file:
mode	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     mode;                       \/* Operating mode, <0: switch down, >0: switch up; 0: do nothing           *\/$/;"	m	struct:__anon28
mode48000_960_120	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const CELTMode mode48000_960_120 = {$/;"	v
mode48000_960_120	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const CELTMode mode48000_960_120 = {$/;"	v
mode_thresholds	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static const opus_int32 mode_thresholds[2][2] = {$/;"	v	file:
modem	src/main.c	/^		struct modem_event modem;$/;"	m	union:app_msg::__anon53	typeref:struct:app_msg::__anon53::modem_event	file:
modem	src/module/sdk_modem.c	/^		struct modem_module_event modem;$/;"	m	union:modem_msg_data::__anon49	typeref:struct:modem_msg_data::__anon49::modem_module_event	file:
modem	src/module/ui.c	/^    struct modem_event  modem;$/;"	m	union:ui_msg::__anon50	typeref:struct:ui_msg::__anon50::modem_event	file:
modem_battery	src/event/modem_event.h	/^struct modem_battery {$/;"	s
modem_cell	src/event/modem_event.h	/^struct modem_cell {$/;"	s
modem_data_init	src/module/modem.c	/^static int modem_data_init(void)$/;"	f	file:
modem_data_init	src/module/sdk_modem.c	/^static int modem_data_init(void)$/;"	f	file:
modem_edrx	src/event/modem_event.h	/^struct modem_edrx {$/;"	s
modem_event	src/event/modem_event.h	/^EVENT_TYPE_DECLARE(modem_event);$/;"	v
modem_event	src/event/modem_event.h	/^struct modem_event {$/;"	s
modem_event_type	src/event/modem_event.h	/^enum modem_event_type {$/;"	g
modem_in	src/hw/audio/codec2_pdm_mic.c	/^i16 *modem_in;$/;"	v
modem_info	src/module/modem.c	/^struct modem_param_info modem_info;$/;"	v	typeref:struct:modem_param_info
modem_msg	src/module/modem.c	/^struct modem_msg {$/;"	s	file:
modem_msg_data	src/module/sdk_modem.c	/^struct modem_msg_data {$/;"	s	file:
modem_neighbor_cells	src/event/modem_event.h	/^struct modem_neighbor_cells {$/;"	s
modem_out	src/hw/audio/codec2_pdm_mic.c	/^i16 *modem_out;$/;"	v
modem_param	src/module/sdk_modem.c	/^static struct modem_param_info modem_param;$/;"	v	typeref:struct:modem_param_info	file:
modem_psm	src/event/modem_event.h	/^struct modem_psm {$/;"	s
modem_rsrp_handler	src/module/sdk_modem.c	/^static void modem_rsrp_handler(char rsrp_value)$/;"	f	file:
modem_thread	src/module/modem.c	/^const k_tid_t modem_thread; $/;"	v
module	src/hw/audio/codec2.c	/^  } module;$/;"	m	struct:hw_msg	typeref:union:hw_msg::__anon42	file:
module	src/hw/old-codec.c	/^  } module;$/;"	m	struct:hw_msg	typeref:union:hw_msg::__anon2	file:
module	src/main.c	/^	} module;$/;"	m	struct:app_msg	typeref:union:app_msg::__anon53	file:
module	src/module/modem.c	/^  } module;$/;"	m	struct:modem_msg	typeref:union:modem_msg::__anon51	file:
module	src/module/motorola.c	/^  } module;$/;"	m	struct:radio_msg	typeref:union:radio_msg::__anon48	file:
module	src/module/sdk_modem.c	/^	} module;$/;"	m	struct:modem_msg_data	typeref:union:modem_msg_data::__anon49	file:
module	src/module/ui.c	/^  } module;$/;"	m	struct:ui_msg	typeref:union:ui_msg::__anon50	file:
module_thread	src/module/sdk_modem.c	/^const k_tid_t module_thread;$/;"	v
module_thread_fn	src/module/sdk_modem.c	/^static void module_thread_fn(void)$/;"	f	file:
mono_music_bandwidth_thresholds	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static const opus_int32 mono_music_bandwidth_thresholds[8] = {$/;"	v	file:
mono_voice_bandwidth_thresholds	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static const opus_int32 mono_voice_bandwidth_thresholds[8] = {$/;"	v	file:
motorola	src/main.c	/^		struct motorola_event motorola;$/;"	m	union:app_msg::__anon53	typeref:struct:app_msg::__anon53::motorola_event	file:
mqtt_event_handler	src/module/motorola.c	/^void mqtt_event_handler( struct mqtt_client *client, struct mqtt_evt *evt ) {$/;"	f
ms_get_preemph_mem	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static opus_val32 *ms_get_preemph_mem(OpusMSEncoder *st)$/;"	f	file:
ms_get_window_mem	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static opus_val32 *ms_get_window_mem(OpusMSEncoder *st)$/;"	f	file:
music_confidence	src/hw/audio/opus-1.2.1/analysis.h	/^   float music_confidence;$/;"	m	struct:__anon41
music_confidence_count	src/hw/audio/opus-1.2.1/analysis.h	/^   int music_confidence_count;$/;"	m	struct:__anon41
music_prob	src/hw/audio/opus-1.2.1/analysis.h	/^   float music_prob;$/;"	m	struct:__anon41
music_prob	src/hw/audio/opus-1.2.1/celt.h	/^   float music_prob;$/;"	m	struct:__anon10
muted	src/hw/driver/sgtl5000.c	/^static bool muted;$/;"	v	file:
n	src/hw/audio/opus-1.2.1/mdct.h	/^   int n;$/;"	m	struct:__anon40
nBitsExceeded	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int32                  nBitsExceeded;$/;"	m	struct:__anon15
nBitsUsedLBRR	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int32                  nBitsUsedLBRR;$/;"	m	struct:__anon15
nChannelsAPI	src/hw/audio/opus-1.2.1/control.h	/^    opus_int32 nChannelsAPI;$/;"	m	struct:__anon8
nChannelsAPI	src/hw/audio/opus-1.2.1/control.h	/^    opus_int32 nChannelsAPI;$/;"	m	struct:__anon9
nChannelsAPI	src/hw/audio/opus-1.2.1/dec_API.c	/^    opus_int                         nChannelsAPI;$/;"	m	struct:__anon18	file:
nChannelsAPI	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     nChannelsAPI;$/;"	m	struct:__anon33
nChannelsAPI	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    nChannelsAPI;$/;"	m	struct:__anon15
nChannelsInternal	src/hw/audio/opus-1.2.1/control.h	/^    opus_int32 nChannelsInternal;$/;"	m	struct:__anon8
nChannelsInternal	src/hw/audio/opus-1.2.1/control.h	/^    opus_int32 nChannelsInternal;$/;"	m	struct:__anon9
nChannelsInternal	src/hw/audio/opus-1.2.1/dec_API.c	/^    opus_int                         nChannelsInternal;$/;"	m	struct:__anon18	file:
nChannelsInternal	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     nChannelsInternal;$/;"	m	struct:__anon33
nChannelsInternal	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    nChannelsInternal;$/;"	m	struct:__anon15
nFramesDecoded	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    nFramesDecoded;$/;"	m	struct:__anon36
nFramesEncoded	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     nFramesEncoded;                    \/* Number of frames analyzed in current packet                      *\/$/;"	m	struct:__anon33
nFramesPerPacket	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     nFramesPerPacket;$/;"	m	struct:__anon33
nFramesPerPacket	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    nFramesPerPacket;$/;"	m	struct:__anon36
nPrevChannelsInternal	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    nPrevChannelsInternal;$/;"	m	struct:__anon15
nStatesDelayedDecision	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     nStatesDelayedDecision;            \/* Number of states in delayed decision quantization                *\/$/;"	m	struct:__anon33
nVectors	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_int16             nVectors;$/;"	m	struct:__anon29
nbAllocVectors	src/hw/audio/opus-1.2.1/modes.h	/^   int          nbAllocVectors; \/**< Number of lines in the matrix below *\/$/;"	m	struct:OpusCustomMode
nbEBands	src/hw/audio/opus-1.2.1/modes.h	/^   int          nbEBands;$/;"	m	struct:OpusCustomMode
nbShortMdcts	src/hw/audio/opus-1.2.1/modes.h	/^   int         nbShortMdcts;$/;"	m	struct:OpusCustomMode
nb_channels	src/hw/audio/opus-1.2.1/opus_private.h	/^   int nb_channels;$/;"	m	struct:ChannelLayout
nb_coupled_streams	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^   int nb_coupled_streams;$/;"	m	struct:__anon16	file:
nb_coupled_streams	src/hw/audio/opus-1.2.1/opus_private.h	/^   int nb_coupled_streams;$/;"	m	struct:ChannelLayout
nb_frames	src/hw/audio/opus-1.2.1/opus_private.h	/^   int nb_frames;$/;"	m	struct:OpusRepacketizer
nb_no_activity_frames	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          nb_no_activity_frames;$/;"	m	struct:OpusEncoder	file:
nb_streams	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^   int nb_streams;$/;"	m	struct:__anon16	file:
nb_streams	src/hw/audio/opus-1.2.1/opus_private.h	/^   int nb_streams;$/;"	m	struct:ChannelLayout
nb_subfr	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     nb_subfr;                          \/* Number of 5 ms subframes in a frame                              *\/$/;"	m	struct:__anon33
nb_subfr	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    nb_subfr;                           \/* Number of 5 ms subframes in a frame                              *\/$/;"	m	struct:__anon36
nb_subfr	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    nb_subfr;$/;"	m	struct:__anon34
nbits_total	src/hw/audio/opus-1.2.1/entcode.h	/^   int            nbits_total;$/;"	m	struct:ec_ctx
ncwrs_urow	src/hw/audio/opus-1.2.1/cwrs.c	/^static opus_uint32 ncwrs_urow(unsigned _n,unsigned _k,opus_uint32 *_u){$/;"	f	file:
ne10_factors_120	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const ne10_int32_t ne10_factors_120[64] = {$/;"	v
ne10_factors_120	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const ne10_int32_t ne10_factors_120[64] = {$/;"	v
ne10_factors_240	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const ne10_int32_t ne10_factors_240[64] = {$/;"	v
ne10_factors_240	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const ne10_int32_t ne10_factors_240[64] = {$/;"	v
ne10_factors_480	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const ne10_int32_t ne10_factors_480[64] = {$/;"	v
ne10_factors_480	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const ne10_int32_t ne10_factors_480[64] = {$/;"	v
ne10_factors_60	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const ne10_int32_t ne10_factors_60[64] = {$/;"	v
ne10_factors_60	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const ne10_int32_t ne10_factors_60[64] = {$/;"	v
ne10_fft_state_float32_t_120	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const ne10_fft_state_float32_t ne10_fft_state_float32_t_120 = {$/;"	v
ne10_fft_state_float32_t_240	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const ne10_fft_state_float32_t ne10_fft_state_float32_t_240 = {$/;"	v
ne10_fft_state_float32_t_480	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const ne10_fft_state_float32_t ne10_fft_state_float32_t_480 = {$/;"	v
ne10_fft_state_float32_t_60	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const ne10_fft_state_float32_t ne10_fft_state_float32_t_60 = {$/;"	v
ne10_fft_state_int32_t_120	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const ne10_fft_state_int32_t ne10_fft_state_int32_t_120 = {$/;"	v
ne10_fft_state_int32_t_240	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const ne10_fft_state_int32_t ne10_fft_state_int32_t_240 = {$/;"	v
ne10_fft_state_int32_t_480	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const ne10_fft_state_int32_t ne10_fft_state_int32_t_480 = {$/;"	v
ne10_fft_state_int32_t_60	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const ne10_fft_state_int32_t ne10_fft_state_int32_t_60 = {$/;"	v
ne10_twiddles_120	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const ne10_fft_cpx_int32_t ne10_twiddles_120[120] = {$/;"	v
ne10_twiddles_120	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const ne10_fft_cpx_float32_t ne10_twiddles_120[120] = {$/;"	v
ne10_twiddles_240	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const ne10_fft_cpx_int32_t ne10_twiddles_240[240] = {$/;"	v
ne10_twiddles_240	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const ne10_fft_cpx_float32_t ne10_twiddles_240[240] = {$/;"	v
ne10_twiddles_480	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const ne10_fft_cpx_int32_t ne10_twiddles_480[480] = {$/;"	v
ne10_twiddles_480	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const ne10_fft_cpx_float32_t ne10_twiddles_480[480] = {$/;"	v
ne10_twiddles_60	src/hw/audio/opus-1.2.1/static_modes_fixed_arm_ne10.h	/^static const ne10_fft_cpx_int32_t ne10_twiddles_60[60] = {$/;"	v
ne10_twiddles_60	src/hw/audio/opus-1.2.1/static_modes_float_arm_ne10.h	/^static const ne10_fft_cpx_float32_t ne10_twiddles_60[60] = {$/;"	v
neighbor_cells	src/event/modem_event.h	/^    struct modem_neighbor_cells neighbor_cells;$/;"	m	union:modem_event::__anon55	typeref:struct:modem_event::__anon55::modem_neighbor_cells
neighbor_cells	src/event/modem_event.h	/^  struct lte_lc_ncell neighbor_cells[17];$/;"	m	struct:modem_neighbor_cells	typeref:struct:modem_neighbor_cells::lte_lc_ncell
neighbor_cells_data_requested	src/module/sdk_modem.c	/^static bool neighbor_cells_data_requested(enum app_module_data_type *data_list,$/;"	f	file:
neighbor_cells_measurement_start	src/module/sdk_modem.c	/^static int neighbor_cells_measurement_start(void)$/;"	f	file:
nend_bits	src/hw/audio/opus-1.2.1/entcode.h	/^   int            nend_bits;$/;"	m	struct:ec_ctx
net	src/hw/audio/opus-1.2.1/mlp_data.c	/^const MLP net = {$/;"	v
nfft	src/hw/audio/opus-1.2.1/kiss_fft.h	/^    int nfft;$/;"	m	struct:kiss_fft_state
noSpeechCounter	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     noSpeechCounter;                   \/* Counts concecutive nonactive frames, used by DTX                 *\/$/;"	m	struct:__anon33
noisiness	src/hw/audio/opus-1.2.1/celt.h	/^   float noisiness;$/;"	m	struct:__anon10
nonfinal_frame	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          nonfinal_frame; \/* current frame is not the final in a packet *\/$/;"	m	struct:OpusEncoder	file:
normalise_bands	src/hw/audio/opus-1.2.1/bands.c	/^void normalise_bands(const CELTMode *m, const celt_sig * OPUS_RESTRICT freq, celt_norm * OPUS_RESTRICT X, const celt_ener *bandE, int end, int C, int M)$/;"	f
normalise_residual	src/hw/audio/opus-1.2.1/vq.c	/^static void normalise_residual(int * OPUS_RESTRICT iy, celt_norm * OPUS_RESTRICT X,$/;"	f	file:
nrfx_pdm_event_handler	src/hw/audio/codec2_pdm_mic.c	/^void nrfx_pdm_event_handler( nrfx_pdm_evt_t *event ) {$/;"	f
num_input_samples	src/hw/audio/codec2.c	/^size_t num_input_samples, num_output_samples;$/;"	v
num_input_samples	src/hw/audio/codec2_pdm_mic.c	/^size_t num_input_samples, num_output_samples;$/;"	v
num_input_samples	src/hw/old-codec.c	/^size_t num_input_samples, num_output_samples;$/;"	v
num_modem_samples	src/hw/audio/codec2.c	/^u32 num_modem_samples;$/;"	v
num_modem_samples	src/hw/audio/codec2_pdm_mic.c	/^u32 num_modem_samples;$/;"	v
num_modem_samples	src/hw/old-codec.c	/^u32 num_modem_samples;$/;"	v
num_output_samples	src/hw/audio/codec2.c	/^size_t num_input_samples, num_output_samples;$/;"	v
num_output_samples	src/hw/audio/codec2_pdm_mic.c	/^size_t num_input_samples, num_output_samples;$/;"	v
num_output_samples	src/hw/old-codec.c	/^size_t num_input_samples, num_output_samples;$/;"	v
num_rx_samples	src/hw/audio/codec2.c	/^u32 num_rx_samples;$/;"	v
num_rx_samples	src/hw/audio/codec2_pdm_mic.c	/^u32 num_rx_samples;$/;"	v
num_rx_samples	src/hw/old-codec.c	/^u32 num_rx_samples;$/;"	v
num_tx_samples	src/hw/audio/codec2.c	/^u32 num_tx_samples;$/;"	v
num_tx_samples	src/hw/audio/codec2_pdm_mic.c	/^u32 num_tx_samples;$/;"	v
num_tx_samples	src/hw/old-codec.c	/^u32 num_tx_samples;$/;"	v
number_of_words	src/hw/audio/codec-i2s.h	/^    uint16_t   number_of_words;         \/* Buffer size in number of Words (32 bits) *\/$/;"	m	struct:__anon4
number_of_words	src/hw/audio/codec-i2s.h	/^    uint16_t   number_of_words;         \/* Buffer size in number of Words (32 bits) *\/$/;"	m	struct:__anon5
offs	src/hw/audio/opus-1.2.1/entcode.h	/^   opus_uint32    offs;$/;"	m	struct:ec_ctx
offset	src/hw/audio/opus-1.2.1/celt.h	/^   int offset;$/;"	m	struct:__anon11
offset	src/hw/audio/opus-1.2.1/control.h	/^    opus_int offset;$/;"	m	struct:__anon8
on_all_states	src/main.c	/^static void on_all_states( struct app_msg *msg ) {$/;"	f	file:
on_all_states	src/module/modem.c	/^static void on_all_states(struct modem_msg_data *msg)$/;"	f	file:
on_all_states	src/module/sdk_modem.c	/^static void on_all_states(struct modem_msg_data *msg)$/;"	f	file:
on_state_connected	src/module/modem.c	/^static void on_state_connected(struct modem_msg_data *msg)$/;"	f	file:
on_state_connected	src/module/sdk_modem.c	/^static void on_state_connected(struct modem_msg_data *msg)$/;"	f	file:
on_state_connecting	src/module/modem.c	/^static void on_state_connecting(struct modem_msg_data *msg)$/;"	f	file:
on_state_connecting	src/module/sdk_modem.c	/^static void on_state_connecting(struct modem_msg_data *msg)$/;"	f	file:
on_state_disconnected	src/module/modem.c	/^static void on_state_disconnected(struct modem_msg_data *msg)$/;"	f	file:
on_state_disconnected	src/module/sdk_modem.c	/^static void on_state_disconnected(struct modem_msg_data *msg)$/;"	f	file:
on_state_init	src/module/modem.c	/^static void on_state_init(struct modem_msg_data *msg)$/;"	f	file:
on_state_init	src/module/sdk_modem.c	/^static void on_state_init(struct modem_msg_data *msg)$/;"	f	file:
op_pvq_search	src/hw/audio/opus-1.2.1/vq.h	/^#define op_pvq_search(/;"	d
op_pvq_search_c	src/hw/audio/opus-1.2.1/vq.c	/^opus_val16 op_pvq_search_c(celt_norm *X, int *iy, int K, int N, int arch)$/;"	f
opusCanSwitch	src/hw/audio/opus-1.2.1/control.h	/^    opus_int opusCanSwitch;$/;"	m	struct:__anon8
opus_alloc	src/hw/audio/opus-1.2.1/os_support.h	/^static OPUS_INLINE void *opus_alloc (size_t size)$/;"	f
opus_alloc_scratch	src/hw/audio/opus-1.2.1/os_support.h	/^static OPUS_INLINE void *opus_alloc_scratch (size_t size)$/;"	f
opus_copy_channel_in_float	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static void opus_copy_channel_in_float($/;"	f	file:
opus_copy_channel_in_func	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^typedef void (*opus_copy_channel_in_func)($/;"	t	file:
opus_copy_channel_in_short	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static void opus_copy_channel_in_short($/;"	f	file:
opus_copy_channel_out_float	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^static void opus_copy_channel_out_float($/;"	f	file:
opus_copy_channel_out_func	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^typedef void (*opus_copy_channel_out_func)($/;"	t	file:
opus_copy_channel_out_short	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^static void opus_copy_channel_out_short($/;"	f	file:
opus_custom_decode	src/hw/audio/opus-1.2.1/celt_decoder.c	/^int opus_custom_decode(CELTDecoder * OPUS_RESTRICT st, const unsigned char *data, int len, opus_int16 * OPUS_RESTRICT pcm, int frame_size)$/;"	f
opus_custom_decode_float	src/hw/audio/opus-1.2.1/celt_decoder.c	/^int opus_custom_decode_float(CELTDecoder * OPUS_RESTRICT st, const unsigned char *data, int len, float * OPUS_RESTRICT pcm, int frame_size)$/;"	f
opus_custom_decoder_create	src/hw/audio/opus-1.2.1/celt_decoder.c	/^CELTDecoder *opus_custom_decoder_create(const CELTMode *mode, int channels, int *error)$/;"	f
opus_custom_decoder_ctl	src/hw/audio/opus-1.2.1/celt_decoder.c	/^int opus_custom_decoder_ctl(CELTDecoder * OPUS_RESTRICT st, int request, ...)$/;"	f
opus_custom_decoder_destroy	src/hw/audio/opus-1.2.1/celt_decoder.c	/^void opus_custom_decoder_destroy(CELTDecoder *st)$/;"	f
opus_custom_decoder_get_size	src/hw/audio/opus-1.2.1/celt_decoder.c	/^OPUS_CUSTOM_NOSTATIC int opus_custom_decoder_get_size(const CELTMode *mode, int channels)$/;"	f
opus_custom_decoder_init	src/hw/audio/opus-1.2.1/celt_decoder.c	/^OPUS_CUSTOM_NOSTATIC int opus_custom_decoder_init(CELTDecoder *st, const CELTMode *mode, int channels)$/;"	f
opus_custom_encode	src/hw/audio/opus-1.2.1/celt_encoder.c	/^int opus_custom_encode(CELTEncoder * OPUS_RESTRICT st, const opus_int16 * pcm, int frame_size, unsigned char *compressed, int nbCompressedBytes)$/;"	f
opus_custom_encode_float	src/hw/audio/opus-1.2.1/celt_encoder.c	/^int opus_custom_encode_float(CELTEncoder * OPUS_RESTRICT st, const float * pcm, int frame_size, unsigned char *compressed, int nbCompressedBytes)$/;"	f
opus_custom_encoder_create	src/hw/audio/opus-1.2.1/celt_encoder.c	/^CELTEncoder *opus_custom_encoder_create(const CELTMode *mode, int channels, int *error)$/;"	f
opus_custom_encoder_ctl	src/hw/audio/opus-1.2.1/celt_encoder.c	/^int opus_custom_encoder_ctl(CELTEncoder * OPUS_RESTRICT st, int request, ...)$/;"	f
opus_custom_encoder_destroy	src/hw/audio/opus-1.2.1/celt_encoder.c	/^void opus_custom_encoder_destroy(CELTEncoder *st)$/;"	f
opus_custom_encoder_get_size	src/hw/audio/opus-1.2.1/celt_encoder.c	/^OPUS_CUSTOM_NOSTATIC int opus_custom_encoder_get_size(const CELTMode *mode, int channels)$/;"	f
opus_custom_encoder_init	src/hw/audio/opus-1.2.1/celt_encoder.c	/^int opus_custom_encoder_init(CELTEncoder *st, const CELTMode *mode, int channels)$/;"	f
opus_custom_encoder_init_arch	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static int opus_custom_encoder_init_arch(CELTEncoder *st, const CELTMode *mode,$/;"	f	file:
opus_custom_mode_create	src/hw/audio/opus-1.2.1/modes.c	/^CELTMode *opus_custom_mode_create(opus_int32 Fs, int frame_size, int *error)$/;"	f
opus_custom_mode_destroy	src/hw/audio/opus-1.2.1/modes.c	/^void opus_custom_mode_destroy(CELTMode *mode)$/;"	f
opus_decode	src/hw/audio/opus-1.2.1/opus_decoder.c	/^int opus_decode(OpusDecoder *st, const unsigned char *data,$/;"	f
opus_decode_float	src/hw/audio/opus-1.2.1/opus_decoder.c	/^int opus_decode_float(OpusDecoder *st, const unsigned char *data,$/;"	f
opus_decode_frame	src/hw/audio/opus-1.2.1/opus_decoder.c	/^static int opus_decode_frame(OpusDecoder *st, const unsigned char *data,$/;"	f	file:
opus_decode_native	src/hw/audio/opus-1.2.1/opus_decoder.c	/^int opus_decode_native(OpusDecoder *st, const unsigned char *data,$/;"	f
opus_decoder_create	src/hw/audio/opus-1.2.1/opus_decoder.c	/^OpusDecoder *opus_decoder_create(opus_int32 Fs, int channels, int *error)$/;"	f
opus_decoder_ctl	src/hw/audio/opus-1.2.1/opus_decoder.c	/^int opus_decoder_ctl(OpusDecoder *st, int request, ...)$/;"	f
opus_decoder_destroy	src/hw/audio/opus-1.2.1/opus_decoder.c	/^void opus_decoder_destroy(OpusDecoder *st)$/;"	f
opus_decoder_get_nb_samples	src/hw/audio/opus-1.2.1/opus_decoder.c	/^int opus_decoder_get_nb_samples(const OpusDecoder *dec,$/;"	f
opus_decoder_get_size	src/hw/audio/opus-1.2.1/opus_decoder.c	/^int opus_decoder_get_size(int channels)$/;"	f
opus_decoder_init	src/hw/audio/opus-1.2.1/opus_decoder.c	/^int opus_decoder_init(OpusDecoder *st, opus_int32 Fs, int channels)$/;"	f
opus_encode	src/hw/audio/opus-1.2.1/opus_encoder.c	/^opus_int32 opus_encode(OpusEncoder *st, const opus_int16 *pcm, int analysis_frame_size,$/;"	f
opus_encode_float	src/hw/audio/opus-1.2.1/opus_encoder.c	/^opus_int32 opus_encode_float(OpusEncoder *st, const float *pcm, int analysis_frame_size,$/;"	f
opus_encode_native	src/hw/audio/opus-1.2.1/opus_encoder.c	/^opus_int32 opus_encode_native(OpusEncoder *st, const opus_val16 *pcm, int frame_size,$/;"	f
opus_encoder_create	src/hw/audio/opus-1.2.1/opus_encoder.c	/^OpusEncoder *opus_encoder_create(opus_int32 Fs, int channels, int application, int *error)$/;"	f
opus_encoder_ctl	src/hw/audio/opus-1.2.1/opus_encoder.c	/^int opus_encoder_ctl(OpusEncoder *st, int request, ...)$/;"	f
opus_encoder_destroy	src/hw/audio/opus-1.2.1/opus_encoder.c	/^void opus_encoder_destroy(OpusEncoder *st)$/;"	f
opus_encoder_get_size	src/hw/audio/opus-1.2.1/opus_encoder.c	/^int opus_encoder_get_size(int channels)$/;"	f
opus_encoder_init	src/hw/audio/opus-1.2.1/opus_encoder.c	/^int opus_encoder_init(OpusEncoder* st, opus_int32 Fs, int channels, int application)$/;"	f
opus_fft	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#define opus_fft(/;"	d
opus_fft_alloc	src/hw/audio/opus-1.2.1/kiss_fft.c	/^kiss_fft_state *opus_fft_alloc(int nfft,void * mem,size_t * lenmem, int arch)$/;"	f
opus_fft_alloc_arch	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#define opus_fft_alloc_arch(/;"	d
opus_fft_alloc_arch_c	src/hw/audio/opus-1.2.1/kiss_fft.c	/^int opus_fft_alloc_arch_c(kiss_fft_state *st) {$/;"	f
opus_fft_alloc_twiddles	src/hw/audio/opus-1.2.1/kiss_fft.c	/^kiss_fft_state *opus_fft_alloc_twiddles(int nfft,void * mem,size_t * lenmem,$/;"	f
opus_fft_c	src/hw/audio/opus-1.2.1/kiss_fft.c	/^void opus_fft_c(const kiss_fft_state *st,const kiss_fft_cpx *fin,kiss_fft_cpx *fout)$/;"	f
opus_fft_free	src/hw/audio/opus-1.2.1/kiss_fft.c	/^void opus_fft_free(const kiss_fft_state *cfg, int arch)$/;"	f
opus_fft_free_arch	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#define opus_fft_free_arch(/;"	d
opus_fft_free_arch_c	src/hw/audio/opus-1.2.1/kiss_fft.c	/^void opus_fft_free_arch_c(kiss_fft_state *st) {$/;"	f
opus_fft_impl	src/hw/audio/opus-1.2.1/kiss_fft.c	/^void opus_fft_impl(const kiss_fft_state *st,kiss_fft_cpx *fout)$/;"	f
opus_free	src/hw/audio/opus-1.2.1/os_support.h	/^static OPUS_INLINE void opus_free (void *ptr)$/;"	f
opus_get_version_string	src/hw/audio/opus-1.2.1/celt.c	/^const char *opus_get_version_string(void)$/;"	f
opus_ifft	src/hw/audio/opus-1.2.1/kiss_fft.h	/^#define opus_ifft(/;"	d
opus_ifft_c	src/hw/audio/opus-1.2.1/kiss_fft.c	/^void opus_ifft_c(const kiss_fft_state *st,const kiss_fft_cpx *fin,kiss_fft_cpx *fout)$/;"	f
opus_int	src/hw/audio/opus-1.2.1/opus_types.h	/^#define opus_int /;"	d
opus_int16	src/hw/audio/opus-1.2.1/opus_types.h	/^     typedef _G_int16 opus_int16;$/;"	t
opus_int16	src/hw/audio/opus-1.2.1/opus_types.h	/^     typedef __int16 opus_int16;$/;"	t
opus_int16	src/hw/audio/opus-1.2.1/opus_types.h	/^     typedef short opus_int16;$/;"	t
opus_int16	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef SInt16 opus_int16;$/;"	t
opus_int16	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef int16 opus_int16;$/;"	t
opus_int16	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef int16_t opus_int16;$/;"	t
opus_int16	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef short opus_int16;$/;"	t
opus_int16	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef signed short opus_int16;$/;"	t
opus_int32	src/hw/audio/opus-1.2.1/opus_types.h	/^     typedef _G_int32_t opus_int32;$/;"	t
opus_int32	src/hw/audio/opus-1.2.1/opus_types.h	/^     typedef __int32 opus_int32;$/;"	t
opus_int32	src/hw/audio/opus-1.2.1/opus_types.h	/^     typedef int opus_int32;$/;"	t
opus_int32	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef SInt32 opus_int32;$/;"	t
opus_int32	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef int opus_int32;$/;"	t
opus_int32	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef int32_t opus_int32;$/;"	t
opus_int32	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef long opus_int32;$/;"	t
opus_int32	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef signed int opus_int32;$/;"	t
opus_int64	src/hw/audio/opus-1.2.1/opus_types.h	/^#define opus_int64 /;"	d
opus_int8	src/hw/audio/opus-1.2.1/opus_types.h	/^#define opus_int8 /;"	d
opus_likely	src/hw/audio/opus-1.2.1/arch.h	/^#define opus_likely(/;"	d
opus_memmove	src/hw/audio/libc_opus/newlib_libc_string_memmove.c	/^opus_memmove (void *dst_void,$/;"	f
opus_mempcpy	src/hw/audio/libc_opus/newlib_libc_string_mempcpy.c	/^opus_mempcpy (void *dst0,$/;"	f
opus_memset	src/hw/audio/libc_opus/newlib_libc_string_memset.c	/^opus_memset (void *m,$/;"	f
opus_multistream_decode	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^int opus_multistream_decode($/;"	f
opus_multistream_decode	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^int opus_multistream_decode(OpusMSDecoder *st, const unsigned char *data,$/;"	f
opus_multistream_decode_float	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^int opus_multistream_decode_float($/;"	f
opus_multistream_decode_float	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^int opus_multistream_decode_float(OpusMSDecoder *st, const unsigned char *data,$/;"	f
opus_multistream_decode_native	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^static int opus_multistream_decode_native($/;"	f	file:
opus_multistream_decoder_create	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^OpusMSDecoder *opus_multistream_decoder_create($/;"	f
opus_multistream_decoder_ctl	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^int opus_multistream_decoder_ctl(OpusMSDecoder *st, int request, ...)$/;"	f
opus_multistream_decoder_destroy	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^void opus_multistream_decoder_destroy(OpusMSDecoder *st)$/;"	f
opus_multistream_decoder_get_size	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^opus_int32 opus_multistream_decoder_get_size(int nb_streams, int nb_coupled_streams)$/;"	f
opus_multistream_decoder_init	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^int opus_multistream_decoder_init($/;"	f
opus_multistream_encode	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^int opus_multistream_encode($/;"	f
opus_multistream_encode_float	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^int opus_multistream_encode_float$/;"	f
opus_multistream_encode_float	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^int opus_multistream_encode_float($/;"	f
opus_multistream_encode_native	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static int opus_multistream_encode_native$/;"	f	file:
opus_multistream_encoder_create	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^OpusMSEncoder *opus_multistream_encoder_create($/;"	f
opus_multistream_encoder_ctl	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^int opus_multistream_encoder_ctl(OpusMSEncoder *st, int request, ...)$/;"	f
opus_multistream_encoder_destroy	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^void opus_multistream_encoder_destroy(OpusMSEncoder *st)$/;"	f
opus_multistream_encoder_get_size	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^opus_int32 opus_multistream_encoder_get_size(int nb_streams, int nb_coupled_streams)$/;"	f
opus_multistream_encoder_init	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^int opus_multistream_encoder_init($/;"	f
opus_multistream_encoder_init_impl	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static int opus_multistream_encoder_init_impl($/;"	f	file:
opus_multistream_packet_pad	src/hw/audio/opus-1.2.1/repacketizer.c	/^int opus_multistream_packet_pad(unsigned char *data, opus_int32 len, opus_int32 new_len, int nb_streams)$/;"	f
opus_multistream_packet_unpad	src/hw/audio/opus-1.2.1/repacketizer.c	/^opus_int32 opus_multistream_packet_unpad(unsigned char *data, opus_int32 len, int nb_streams)$/;"	f
opus_multistream_packet_validate	src/hw/audio/opus-1.2.1/opus_multistream_decoder.c	/^static int opus_multistream_packet_validate(const unsigned char *data,$/;"	f	file:
opus_multistream_surround_encoder_create	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^OpusMSEncoder *opus_multistream_surround_encoder_create($/;"	f
opus_multistream_surround_encoder_get_size	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^opus_int32 opus_multistream_surround_encoder_get_size(int channels, int mapping_family)$/;"	f
opus_multistream_surround_encoder_init	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^int opus_multistream_surround_encoder_init($/;"	f
opus_packet_get_bandwidth	src/hw/audio/opus-1.2.1/opus_decoder.c	/^int opus_packet_get_bandwidth(const unsigned char *data)$/;"	f
opus_packet_get_mode	src/hw/audio/opus-1.2.1/opus_decoder.c	/^static int opus_packet_get_mode(const unsigned char *data)$/;"	f	file:
opus_packet_get_nb_channels	src/hw/audio/opus-1.2.1/opus_decoder.c	/^int opus_packet_get_nb_channels(const unsigned char *data)$/;"	f
opus_packet_get_nb_frames	src/hw/audio/opus-1.2.1/opus_decoder.c	/^int opus_packet_get_nb_frames(const unsigned char packet[], opus_int32 len)$/;"	f
opus_packet_get_nb_samples	src/hw/audio/opus-1.2.1/opus_decoder.c	/^int opus_packet_get_nb_samples(const unsigned char packet[], opus_int32 len,$/;"	f
opus_packet_get_samples_per_frame	src/hw/audio/opus-1.2.1/opus.c	/^int opus_packet_get_samples_per_frame(const unsigned char *data,$/;"	f
opus_packet_pad	src/hw/audio/opus-1.2.1/repacketizer.c	/^int opus_packet_pad(unsigned char *data, opus_int32 len, opus_int32 new_len)$/;"	f
opus_packet_parse	src/hw/audio/opus-1.2.1/opus.c	/^int opus_packet_parse(const unsigned char *data, opus_int32 len,$/;"	f
opus_packet_parse_impl	src/hw/audio/opus-1.2.1/opus.c	/^int opus_packet_parse_impl(const unsigned char *data, opus_int32 len,$/;"	f
opus_packet_unpad	src/hw/audio/opus-1.2.1/repacketizer.c	/^opus_int32 opus_packet_unpad(unsigned char *data, opus_int32 len)$/;"	f
opus_pcm_soft_clip	src/hw/audio/opus-1.2.1/opus.c	/^OPUS_EXPORT void opus_pcm_soft_clip(float *_x, int N, int C, float *declip_mem)$/;"	f
opus_repacketizer_cat	src/hw/audio/opus-1.2.1/repacketizer.c	/^int opus_repacketizer_cat(OpusRepacketizer *rp, const unsigned char *data, opus_int32 len)$/;"	f
opus_repacketizer_cat_impl	src/hw/audio/opus-1.2.1/repacketizer.c	/^static int opus_repacketizer_cat_impl(OpusRepacketizer *rp, const unsigned char *data, opus_int32 len, int self_delimited)$/;"	f	file:
opus_repacketizer_create	src/hw/audio/opus-1.2.1/repacketizer.c	/^OpusRepacketizer *opus_repacketizer_create(void)$/;"	f
opus_repacketizer_destroy	src/hw/audio/opus-1.2.1/repacketizer.c	/^void opus_repacketizer_destroy(OpusRepacketizer *rp)$/;"	f
opus_repacketizer_get_nb_frames	src/hw/audio/opus-1.2.1/repacketizer.c	/^int opus_repacketizer_get_nb_frames(OpusRepacketizer *rp)$/;"	f
opus_repacketizer_get_size	src/hw/audio/opus-1.2.1/repacketizer.c	/^int opus_repacketizer_get_size(void)$/;"	f
opus_repacketizer_init	src/hw/audio/opus-1.2.1/repacketizer.c	/^OpusRepacketizer *opus_repacketizer_init(OpusRepacketizer *rp)$/;"	f
opus_repacketizer_out	src/hw/audio/opus-1.2.1/repacketizer.c	/^opus_int32 opus_repacketizer_out(OpusRepacketizer *rp, unsigned char *data, opus_int32 maxlen)$/;"	f
opus_repacketizer_out_range	src/hw/audio/opus-1.2.1/repacketizer.c	/^opus_int32 opus_repacketizer_out_range(OpusRepacketizer *rp, int begin, int end, unsigned char *data, opus_int32 maxlen)$/;"	f
opus_repacketizer_out_range_impl	src/hw/audio/opus-1.2.1/repacketizer.c	/^opus_int32 opus_repacketizer_out_range_impl(OpusRepacketizer *rp, int begin, int end,$/;"	f
opus_select_arch	src/hw/audio/opus-1.2.1/cpu_support.h	/^static OPUS_INLINE int opus_select_arch(void)$/;"	f
opus_strerror	src/hw/audio/opus-1.2.1/celt.c	/^const char *opus_strerror(int error)$/;"	f
opus_uint	src/hw/audio/opus-1.2.1/opus_types.h	/^#define opus_uint /;"	d
opus_uint16	src/hw/audio/opus-1.2.1/opus_types.h	/^     typedef _G_uint16 opus_uint16;$/;"	t
opus_uint16	src/hw/audio/opus-1.2.1/opus_types.h	/^     typedef unsigned __int16 opus_uint16;$/;"	t
opus_uint16	src/hw/audio/opus-1.2.1/opus_types.h	/^     typedef unsigned short opus_uint16;$/;"	t
opus_uint16	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef UInt16 opus_uint16;$/;"	t
opus_uint16	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef u_int16 opus_uint16;$/;"	t
opus_uint16	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef u_int16_t opus_uint16;$/;"	t
opus_uint16	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef uint16_t opus_uint16;$/;"	t
opus_uint16	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef unsigned short opus_uint16;$/;"	t
opus_uint32	src/hw/audio/opus-1.2.1/opus_types.h	/^     typedef _G_uint32_t opus_uint32;$/;"	t
opus_uint32	src/hw/audio/opus-1.2.1/opus_types.h	/^     typedef unsigned __int32 opus_uint32;$/;"	t
opus_uint32	src/hw/audio/opus-1.2.1/opus_types.h	/^     typedef unsigned int opus_uint32;$/;"	t
opus_uint32	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef UInt32 opus_uint32;$/;"	t
opus_uint32	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef u_int32_t opus_uint32;$/;"	t
opus_uint32	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef uint32_t opus_uint32;$/;"	t
opus_uint32	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef unsigned int opus_uint32;$/;"	t
opus_uint32	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef unsigned long opus_uint32;$/;"	t
opus_uint32	src/hw/audio/opus-1.2.1/opus_types.h	/^   typedef unsigned opus_uint32;$/;"	t
opus_uint64	src/hw/audio/opus-1.2.1/opus_types.h	/^#define opus_uint64 /;"	d
opus_uint8	src/hw/audio/opus-1.2.1/opus_types.h	/^#define opus_uint8 /;"	d
opus_unlikely	src/hw/audio/opus-1.2.1/arch.h	/^#define opus_unlikely(/;"	d
opus_val16	src/hw/audio/opus-1.2.1/arch.h	/^typedef float opus_val16;$/;"	t
opus_val16	src/hw/audio/opus-1.2.1/arch.h	/^typedef opus_int16 opus_val16;$/;"	t
opus_val32	src/hw/audio/opus-1.2.1/arch.h	/^typedef float opus_val32;$/;"	t
opus_val32	src/hw/audio/opus-1.2.1/arch.h	/^typedef opus_int32 opus_val32;$/;"	t
opus_val64	src/hw/audio/opus-1.2.1/arch.h	/^typedef float opus_val64;$/;"	t
opus_val64	src/hw/audio/opus-1.2.1/arch.h	/^typedef opus_int64 opus_val64;$/;"	t
order	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_int16             order;$/;"	m	struct:__anon29
ordery_table	src/hw/audio/opus-1.2.1/bands.c	/^static const int ordery_table[] = {$/;"	v	file:
outBuf	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                  outBuf[ MAX_FRAME_LENGTH + 2 * MAX_SUB_FRAME_LENGTH ];  \/* Buffer for output signal                     *\/$/;"	m	struct:__anon36
outgoing_buffer_available	src/hw/audio/codec2.c	/^bool outgoing_buffer_available;$/;"	v
outgoing_buffer_available	src/hw/old-codec.c	/^bool outgoing_buffer_available;$/;"	v
outgoing_message_buffer	src/hw/audio/codec2.c	/^i16 *outgoing_message_buffer;$/;"	v
outgoing_message_buffer	src/hw/old-codec.c	/^i16 *outgoing_message_buffer;$/;"	v
outgoing_message_size	src/hw/audio/codec2.c	/^size_t outgoing_message_size;$/;"	v
outgoing_message_size	src/hw/old-codec.c	/^size_t outgoing_message_size;$/;"	v
outgoing_mutex	src/hw/audio/codec2.c	/^K_DEFINE_MUTEX( outgoing_mutex );$/;"	v
outgoing_mutex	src/hw/audio/codec2.c	/^const k_mutex outgoing_mutex;$/;"	v
outgoing_mutex	src/hw/old-codec.c	/^K_DEFINE_MUTEX( outgoing_mutex );$/;"	v
outgoing_mutex	src/hw/old-codec.c	/^const k_mutex outgoing_mutex;$/;"	v
overlap	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int overlap;$/;"	m	struct:OpusCustomDecoder	file:
overlap	src/hw/audio/opus-1.2.1/modes.h	/^   int          overlap;$/;"	m	struct:OpusCustomMode
overlap_max	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_val32 overlap_max;$/;"	m	struct:OpusCustomEncoder	file:
p_data_received	src/hw/audio/codec-i2s.h	/^	const uint32_t * p_data_received; \/* Pointer to buffer that should be filled  *\/$/;"	m	struct:__anon5
p_data_to_send	src/hw/audio/codec-i2s.h	/^    uint32_t * p_data_to_send;          \/* Pointer to buffer that should be filled  *\/$/;"	m	struct:__anon4
p_drv_params	src/hw/driver/sgtl5000.c	/^static drv_sgtl5000_init_t * p_drv_params;$/;"	v	file:
p_msgq_I2S_Rx	src/hw/audio/codec-i2s.c	/^static struct k_msgq *p_msgq_I2S_Rx;$/;"	v	typeref:struct:k_msgq	file:
p_msgq_I2S_Tx	src/hw/audio/codec-i2s.c	/^static struct k_msgq *p_msgq_I2S_Tx;$/;"	v	typeref:struct:k_msgq	file:
p_msgq_OPUS_DECODE	src/hw/audio/audio.c	/^struct k_msgq *p_msgq_OPUS_DECODE = &msgq_OPUS_DECODE;$/;"	v	typeref:struct:k_msgq
p_msgq_OPUS_ENCODE	src/hw/audio/audio.c	/^struct k_msgq *p_msgq_OPUS_ENCODE = &msgq_OPUS_ENCODE;$/;"	v	typeref:struct:k_msgq
p_msgq_i2s_in	src/hw/audio/audio.c	/^struct k_msgq *p_msgq_i2s_in = &msgq_i2s_in;$/;"	v	typeref:struct:k_msgq
p_msgq_i2s_out	src/hw/audio/audio.c	/^struct k_msgq *p_msgq_i2s_out = &msgq_i2s_out;$/;"	v	typeref:struct:k_msgq
p_msgq_radio_decoded	src/hw/audio/codec-i2s.c	/^struct k_msgq *p_msgq_radio_decoded;$/;"	v	typeref:struct:k_msgq
p_sample	src/hw/audio/codec-i2s.c	/^static uint8_t * p_sample           = (uint8_t *)car_sample;$/;"	v	file:
p_timer	src/hw/audio/codec-i2s.c	/^static NRF_TIMER_Type * p_timer = _CONCAT(NRF_TIMER, SYS_MCLK_TIMER_ID);$/;"	v	file:
packetLossPercentage	src/hw/audio/opus-1.2.1/control.h	/^    opus_int packetLossPercentage;$/;"	m	struct:__anon8
param	src/hw/audio/codec-i2s.h	/^    } param;$/;"	m	struct:__anon6	typeref:union:__anon6::__anon7
parent	src/ui/random_view_stuff.c	/^static lv_obj_t *create_user_list_button lv_obj_t *parent, char *username ) {$/;"	v	file:
parse_size	src/hw/audio/opus-1.2.1/opus.c	/^static int parse_size(const unsigned char *data, opus_int32 len, opus_int16 *size)$/;"	f	file:
patch_transient_decision	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static int patch_transient_decision(opus_val16 *newE, opus_val16 *oldE, int nbEBands,$/;"	f	file:
payloadSize_ms	src/hw/audio/opus-1.2.1/control.h	/^    opus_int payloadSize_ms;$/;"	m	struct:__anon8
payloadSize_ms	src/hw/audio/opus-1.2.1/control.h	/^    opus_int payloadSize_ms;$/;"	m	struct:__anon9
peak_signal_energy	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    opus_val32   peak_signal_energy;$/;"	m	struct:OpusEncoder	file:
pitchEstimationComplexity	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     pitchEstimationComplexity;         \/* Complexity level for pitch estimator                             *\/$/;"	m	struct:__anon33
pitchEstimationLPCOrder	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     pitchEstimationLPCOrder;           \/* Whitening filter order for pitch estimator                       *\/$/;"	m	struct:__anon33
pitchEstimationThreshold_Q16	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                   pitchEstimationThreshold_Q16;      \/* Threshold for pitch estimator                                    *\/$/;"	m	struct:__anon33
pitchL	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    pitchL[ MAX_NB_SUBFR ];$/;"	m	struct:__anon37
pitchL	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    pitchL[ MAX_NB_SUBFR ];$/;"	m	struct:__anon14
pitchL_Q8	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  pitchL_Q8;                          \/* Pitch lag to use for voiced concealment                          *\/$/;"	m	struct:__anon34
pitch_LPC_win_length	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     pitch_LPC_win_length;$/;"	m	struct:__anon33
pitch_contour_iCDF	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_uint8             *pitch_contour_iCDF;               \/* Pointer to iCDF table for pitch contour index                    *\/$/;"	m	struct:__anon33
pitch_contour_iCDF	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_uint8            *pitch_contour_iCDF;                \/* Pointer to iCDF table for pitch contour index                    *\/$/;"	m	struct:__anon36
pitch_downsample	src/hw/audio/opus-1.2.1/pitch.c	/^void pitch_downsample(celt_sig * OPUS_RESTRICT x[], opus_val16 * OPUS_RESTRICT x_lp,$/;"	f
pitch_lag_low_bits_iCDF	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_uint8             *pitch_lag_low_bits_iCDF;          \/* Pointer to iCDF table for low bits of pitch lag index            *\/$/;"	m	struct:__anon33
pitch_lag_low_bits_iCDF	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_uint8            *pitch_lag_low_bits_iCDF;           \/* Pointer to iCDF table for low bits of pitch lag index            *\/$/;"	m	struct:__anon36
pitch_search	src/hw/audio/opus-1.2.1/pitch.c	/^void pitch_search(const opus_val16 * OPUS_RESTRICT x_lp, opus_val16 * OPUS_RESTRICT y,$/;"	f
player	src/hw/audio/codec-i2s.c	/^	player,$/;"	e	enum:__anon43	file:
pmusic	src/hw/audio/opus-1.2.1/analysis.h	/^   float pmusic[DETECT_SIZE];$/;"	m	struct:__anon41
populate_event_with_dynamic_modem_data	src/module/sdk_modem.c	/^static void populate_event_with_dynamic_modem_data(struct modem_module_event *event,$/;"	f	file:
postfilter_gain	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   opus_val16 postfilter_gain;$/;"	m	struct:OpusCustomDecoder	file:
postfilter_gain_old	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   opus_val16 postfilter_gain_old;$/;"	m	struct:OpusCustomDecoder	file:
postfilter_period	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int postfilter_period;$/;"	m	struct:OpusCustomDecoder	file:
postfilter_period_old	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int postfilter_period_old;$/;"	m	struct:OpusCustomDecoder	file:
postfilter_tapset	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int postfilter_tapset;$/;"	m	struct:OpusCustomDecoder	file:
postfilter_tapset_old	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int postfilter_tapset_old;$/;"	m	struct:OpusCustomDecoder	file:
predGain_Q16	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int32                  predGain_Q16;$/;"	m	struct:__anon14
predIx	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    predIx[ MAX_FRAMES_PER_PACKET ][ 2 ][ 3 ];$/;"	m	struct:__anon30
pred_Q8	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_uint8             *pred_Q8;$/;"	m	struct:__anon29
pred_coef	src/hw/audio/opus-1.2.1/quant_bands.c	/^static const opus_val16 pred_coef[4] = {29440, 26112, 21248, 16384};$/;"	v	file:
pred_coef	src/hw/audio/opus-1.2.1/quant_bands.c	/^static const opus_val16 pred_coef[4] = {29440\/32768., 26112\/32768., 21248\/32768., 16384\/32768.};$/;"	v	file:
pred_prev_Q13	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   pred_prev_Q13[ 2 ];$/;"	m	struct:__anon30
pred_prev_Q13	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   pred_prev_Q13[ 2 ];$/;"	m	struct:__anon31
predictLPCOrder	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     predictLPCOrder;                   \/* Filter order for prediction filters                              *\/$/;"	m	struct:__anon33
preemph	src/hw/audio/opus-1.2.1/modes.h	/^   opus_val16    preemph[4];$/;"	m	struct:OpusCustomMode
preemph_memD	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   celt_sig preemph_memD[2];$/;"	m	struct:OpusCustomDecoder	file:
preemph_memD	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_val32 preemph_memD[2];$/;"	m	struct:OpusCustomEncoder	file:
preemph_memE	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_val32 preemph_memE[2];$/;"	m	struct:OpusCustomEncoder	file:
prefillFlag	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     prefillFlag;                       \/* Flag to indicate that only buffers are prefilled, no coding      *\/$/;"	m	struct:__anon33
prefilter_gain	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_val16 prefilter_gain;$/;"	m	struct:OpusCustomEncoder	file:
prefilter_gain_old	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_val16 prefilter_gain_old;$/;"	m	struct:OpusCustomEncoder	file:
prefilter_period	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int prefilter_period;$/;"	m	struct:OpusCustomEncoder	file:
prefilter_period_old	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int prefilter_period_old;$/;"	m	struct:OpusCustomEncoder	file:
prefilter_tapset	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int prefilter_tapset;$/;"	m	struct:OpusCustomEncoder	file:
prefilter_tapset_old	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int prefilter_tapset_old;$/;"	m	struct:OpusCustomEncoder	file:
prevGain_Q16	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  prevGain_Q16[ 2 ];$/;"	m	struct:__anon34
prevLPC_Q12	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                  prevLPC_Q12[ MAX_LPC_ORDER ];$/;"	m	struct:__anon34
prevLTP_scale_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                  prevLTP_scale_Q14;$/;"	m	struct:__anon34
prevLag	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     prevLag;$/;"	m	struct:__anon33
prevNLSF_Q15	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                  prevNLSF_Q15[ MAX_LPC_ORDER ];      \/* Used to interpolate LSFs                                         *\/$/;"	m	struct:__anon36
prevPitchLag	src/hw/audio/opus-1.2.1/control.h	/^    opus_int prevPitchLag;$/;"	m	struct:__anon9
prevSignalType	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    prevSignalType;$/;"	m	struct:__anon36
prevSignalType	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    prevSignalType;$/;"	m	struct:__anon33
prev_API_fs_Hz	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                   prev_API_fs_Hz;                    \/* Previous API sampling frequency (Hz)                             *\/$/;"	m	struct:__anon33
prev_HB_gain	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    opus_val16   prev_HB_gain;$/;"	m	struct:OpusEncoder	file:
prev_NLSFq_Q15	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   prev_NLSFq_Q15[ MAX_LPC_ORDER ];   \/* Previously quantized NLSF vector                                 *\/$/;"	m	struct:__anon33
prev_band_tonality	src/hw/audio/opus-1.2.1/analysis.h	/^   float prev_band_tonality[NB_TBANDS];$/;"	m	struct:__anon41
prev_bandwidth	src/hw/audio/opus-1.2.1/analysis.h	/^   int prev_bandwidth;$/;"	m	struct:__anon41
prev_channels	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          prev_channels;$/;"	m	struct:OpusEncoder	file:
prev_decode_only_middle	src/hw/audio/opus-1.2.1/dec_API.c	/^    opus_int                         prev_decode_only_middle;$/;"	m	struct:__anon18	file:
prev_decode_only_middle	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    prev_decode_only_middle;$/;"	m	struct:__anon15
prev_framesize	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          prev_framesize;$/;"	m	struct:OpusEncoder	file:
prev_gain_Q16	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  prev_gain_Q16;$/;"	m	struct:__anon26
prev_gain_Q16	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  prev_gain_Q16;$/;"	m	struct:__anon36
prev_mode	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   int          prev_mode;$/;"	m	struct:OpusDecoder	file:
prev_mode	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          prev_mode;$/;"	m	struct:OpusEncoder	file:
prev_redundancy	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   int          prev_redundancy;$/;"	m	struct:OpusDecoder	file:
prev_tonality	src/hw/audio/opus-1.2.1/analysis.h	/^   float prev_tonality;$/;"	m	struct:__anon41
print_carrier_deferred_reason	src/module/sdk_modem.c	/^static void print_carrier_deferred_reason(const lwm2m_carrier_event_t *evt)$/;"	f	file:
print_carrier_error	src/module/sdk_modem.c	/^static void print_carrier_error(const lwm2m_carrier_event_t *evt)$/;"	f	file:
priv	src/hw/audio/opus-1.2.1/kiss_fft.h	/^   void *priv;$/;"	m	struct:arch_fft_state
process_text	src/hw/uart.c	/^void process_text() {$/;"	f
psNLSF_CB	src/hw/audio/opus-1.2.1/structs.h	/^    const silk_NLSF_CB_struct    *psNLSF_CB;                        \/* Pointer to NLSF codebook                                         *\/$/;"	m	struct:__anon33
psNLSF_CB	src/hw/audio/opus-1.2.1/structs.h	/^    const silk_NLSF_CB_struct   *psNLSF_CB;                         \/* Pointer to NLSF codebook                                         *\/$/;"	m	struct:__anon36
psm	src/event/modem_event.h	/^    struct modem_psm psm;$/;"	m	union:modem_event::__anon55	typeref:struct:modem_event::__anon55::modem_psm
pspeech	src/hw/audio/opus-1.2.1/analysis.h	/^   float pspeech[DETECT_SIZE];$/;"	m	struct:__anon41
ptr	src/event/radio_event.h	/^  char *ptr;$/;"	m	struct:buffer_data
ptt_press_handler	src/ui/ui_input.c	/^int ptt_press_handler( void ) {$/;"	f
ptt_unpress_handler	src/ui/ui_input.c	/^int ptt_unpress_handler( void ) {$/;"	f
ptw	src/event/modem_event.h	/^  float ptw;$/;"	m	struct:modem_edrx
public_img	src/module/users.c	/^  lvgl_obj_t *public_img;$/;"	m	struct:user	file:
public_name	src/module/users.c	/^  char public_name[32];$/;"	m	struct:user	file:
publish_info	src/module/motorola.c	/^void publish_info( struct mqtt_client *client, u16 *data, size_t len ) {$/;"	f
pulses	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    pulses[ MAX_FRAME_LENGTH ];$/;"	m	struct:__anon33
pulses2bits	src/hw/audio/opus-1.2.1/rate.h	/^static OPUS_INLINE int pulses2bits(const CELTMode *m, int band, int LM, int pulses)$/;"	f
pulses_LBRR	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    pulses_LBRR[ MAX_FRAMES_PER_PACKET ][ MAX_FRAME_LENGTH ];$/;"	m	struct:__anon33
push_audio_payload	src/module/old-radio.c	/^int push_audio_payload ( struct mqtt_client *client, struct mqtt_publish_message *msg ) {$/;"	f
qalloc	src/hw/audio/opus-1.2.1/bands.c	/^   int qalloc;$/;"	m	struct:split_ctx	file:
quantOffsetType	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    quantOffsetType;$/;"	m	struct:__anon32
quantStepSize_Q16	src/hw/audio/opus-1.2.1/structs.h	/^    const opus_int16             quantStepSize_Q16;$/;"	m	struct:__anon29
quant_all_bands	src/hw/audio/opus-1.2.1/bands.c	/^void quant_all_bands(int encode, const CELTMode *m, int start, int end,$/;"	f
quant_band	src/hw/audio/opus-1.2.1/bands.c	/^static unsigned quant_band(struct band_ctx *ctx, celt_norm *X,$/;"	f	file:
quant_band_n1	src/hw/audio/opus-1.2.1/bands.c	/^static unsigned quant_band_n1(struct band_ctx *ctx, celt_norm *X, celt_norm *Y, int b,$/;"	f	file:
quant_band_stereo	src/hw/audio/opus-1.2.1/bands.c	/^static unsigned quant_band_stereo(struct band_ctx *ctx, celt_norm *X, celt_norm *Y,$/;"	f	file:
quant_coarse_energy	src/hw/audio/opus-1.2.1/quant_bands.c	/^void quant_coarse_energy(const CELTMode *m, int start, int end, int effEnd,$/;"	f
quant_coarse_energy_impl	src/hw/audio/opus-1.2.1/quant_bands.c	/^static int quant_coarse_energy_impl(const CELTMode *m, int start, int end,$/;"	f	file:
quant_energy_finalise	src/hw/audio/opus-1.2.1/quant_bands.c	/^void quant_energy_finalise(const CELTMode *m, int start, int end, opus_val16 *oldEBands, opus_val16 *error, int *fine_quant, int *fine_priority, int bits_left, ec_enc *enc, int C)$/;"	f
quant_fine_energy	src/hw/audio/opus-1.2.1/quant_bands.c	/^void quant_fine_energy(const CELTMode *m, int start, int end, opus_val16 *oldEBands, opus_val16 *error, int *fine_quant, ec_enc *enc, int C)$/;"	f
quant_partition	src/hw/audio/opus-1.2.1/bands.c	/^static unsigned quant_partition(struct band_ctx *ctx, celt_norm *X,$/;"	f	file:
r	src/hw/audio/opus-1.2.1/kiss_fft.h	/^    kiss_fft_scalar r;$/;"	m	struct:__anon23
r	src/hw/audio/opus-1.2.1/kiss_fft.h	/^   kiss_twiddle_scalar r;$/;"	m	struct:__anon24
radio	src/hw/audio/codec2.c	/^    struct radio_event radio;$/;"	m	union:hw_msg::__anon42	typeref:struct:hw_msg::__anon42::radio_event	file:
radio	src/hw/old-codec.c	/^    struct radio_event radio;$/;"	m	union:hw_msg::__anon2	typeref:struct:hw_msg::__anon2::radio_event	file:
radio	src/main.c	/^		struct radio_event radio;$/;"	m	union:app_msg::__anon53	typeref:struct:app_msg::__anon53::radio_event	file:
radio	src/module/modem.c	/^    struct radio_event radio;$/;"	m	union:modem_msg::__anon51	typeref:struct:modem_msg::__anon51::radio_event	file:
radio	src/module/motorola.c	/^    struct radio_event radio;$/;"	m	union:radio_msg::__anon48	typeref:struct:radio_msg::__anon48::radio_event	file:
radio	src/module/ui.c	/^    struct radio_event  radio;$/;"	m	union:ui_msg::__anon50	typeref:struct:ui_msg::__anon50::radio_event	file:
radio_data	src/event/radio_event.h	/^struct radio_data {$/;"	s
radio_event	src/event/radio_event.h	/^EVENT_TYPE_DECLARE( radio_event );$/;"	v
radio_event	src/event/radio_event.h	/^struct radio_event {$/;"	s
radio_event_type	src/event/radio_event.h	/^enum radio_event_type {$/;"	g
radio_loop	src/module/motorola.c	/^void radio_loop() {$/;"	f
radio_msg	src/module/motorola.c	/^struct radio_msg {$/;"	s	file:
radio_rx_job	src/module/radio.c	/^void radio_rx_job( void ) {$/;"	f
radio_station_frame_rx	src/hw/audio/audio.c	/^static m_audio_frame_t radio_station_frame_rx = {.data_size = 0};$/;"	v	file:
radio_thread	src/module/motorola.c	/^const k_tid_t radio_thread;$/;"	v
radio_tx_job	src/module/radio.c	/^void radio_tx_job( void ) {$/;"	f
randScale_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                  randScale_Q14;                      \/* Scaling of unvoiced random signal                                *\/$/;"	m	struct:__anon34
rand_seed	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  rand_seed;                          \/* Seed for unvoiced signal generation                              *\/$/;"	m	struct:__anon34
rand_seed	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  rand_seed;$/;"	m	struct:__anon26
rand_seed	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  rand_seed;$/;"	m	struct:__anon35
rangeFinal	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   opus_uint32  rangeFinal;$/;"	m	struct:OpusDecoder	file:
rangeFinal	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    opus_uint32  rangeFinal;$/;"	m	struct:OpusEncoder	file:
rateID	src/hw/audio/opus-1.2.1/resampler.c	/^#define rateID(/;"	d	file:
rate_allocation	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static opus_int32 rate_allocation($/;"	f	file:
read_pos	src/hw/audio/opus-1.2.1/analysis.h	/^   int read_pos;$/;"	m	struct:__anon41
read_subframe	src/hw/audio/opus-1.2.1/analysis.h	/^   int read_subframe;$/;"	m	struct:__anon41
recorder	src/hw/audio/codec-i2s.c	/^	recorder,$/;"	e	enum:__anon43	file:
recv_buffer	src/hw/audio/codec2_pdm_mic.c	/^i16 recv_buffer[2048];$/;"	v
reducedDependency	src/hw/audio/opus-1.2.1/control.h	/^    opus_int reducedDependency;$/;"	m	struct:__anon8
rem	src/hw/audio/opus-1.2.1/entcode.h	/^   int            rem;$/;"	m	struct:ec_ctx
remaining_bits	src/hw/audio/opus-1.2.1/bands.c	/^   opus_int32 remaining_bits;$/;"	m	struct:band_ctx	file:
remove_doubling	src/hw/audio/opus-1.2.1/pitch.c	/^opus_val16 remove_doubling(opus_val16 *x, int maxperiod, int minperiod,$/;"	f
renormalise_vector	src/hw/audio/opus-1.2.1/vq.c	/^void renormalise_vector(celt_norm *X, int N, opus_val16 gain, int arch)$/;"	f
resNrgSmth	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int32                    resNrgSmth;$/;"	m	struct:__anon13
resampler_function	src/hw/audio/opus-1.2.1/resampler_structs.h	/^    opus_int         resampler_function;$/;"	m	struct:_silk_resampler_state_struct
resampler_state	src/hw/audio/opus-1.2.1/structs.h	/^    silk_resampler_state_struct resampler_state;$/;"	m	struct:__anon33
resampler_state	src/hw/audio/opus-1.2.1/structs.h	/^    silk_resampler_state_struct resampler_state;$/;"	m	struct:__anon36
resampling_factor	src/hw/audio/opus-1.2.1/celt.c	/^int resampling_factor(opus_int32 rate)$/;"	f
resynth	src/hw/audio/opus-1.2.1/bands.c	/^   int resynth;$/;"	m	struct:band_ctx	file:
ret	src/hw/audio/codec2.c	/^static int ret;$/;"	v	file:
ret	src/hw/old-codec.c	/^static int ret;$/;"	v	file:
rewhite_flag	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    rewhite_flag;$/;"	m	struct:__anon26
rng	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   opus_uint32 rng;$/;"	m	struct:OpusCustomDecoder	file:
rng	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_uint32 rng;$/;"	m	struct:OpusCustomEncoder	file:
rng	src/hw/audio/opus-1.2.1/entcode.h	/^   opus_uint32    rng;$/;"	m	struct:ec_ctx
rsrp_handler	src/module/modem.c	/^static void rsrp_handler( char rsrp_val ) {$/;"	f	file:
rsrp_to_dbm	src/module/modem.c	/^static inline int rsrp_to_dbm(int input) {$/;"	f	file:
rsrp_value_latest	src/module/modem.c	/^static i16 rsrp_value_latest;$/;"	v	file:
rsrp_value_latest	src/module/sdk_modem.c	/^static int16_t rsrp_value_latest;$/;"	v	file:
rsrq_to_db	src/module/modem.c	/^static inline int rsrq_to_db(int input) {$/;"	f	file:
run_analysis	src/hw/audio/opus-1.2.1/analysis.c	/^void run_analysis(TonalityAnalysisState *analysis, const CELTMode *celt_mode, const void *analysis_pcm,$/;"	f
run_prefilter	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static int run_prefilter(CELTEncoder *st, celt_sig *in, celt_sig *prefilter_mem, int CC, int N,$/;"	f	file:
rx_buf_received	src/hw/audio/codec-i2s.h	/^    	rx_buf_received_t rx_buf_received;$/;"	m	union:__anon6::__anon7
rx_buf_received_t	src/hw/audio/codec-i2s.h	/^} rx_buf_received_t;$/;"	t	typeref:struct:__anon5
rx_buffer	src/hw/audio/codec2.c	/^static char rx_buffer[AUDIO_FRAME_BUF_BYTES * I2S_PLAY_BUF_COUNT];$/;"	v	file:
rx_buffer	src/hw/old-codec.c	/^static char rx_buffer[AUDIO_FRAME_BUF_BYTES * I2S_PLAY_BUF_COUNT];$/;"	v	file:
rx_config	src/hw/audio/codec2.c	/^static struct i2s_config rx_config;$/;"	v	typeref:struct:i2s_config	file:
rx_config	src/hw/old-codec.c	/^static struct i2s_config rx_config;$/;"	v	typeref:struct:i2s_config	file:
rx_device	src/hw/audio/codec2.c	/^static const struct device *rx_device;$/;"	v	typeref:struct:device	file:
rx_device	src/hw/old-codec.c	/^static const struct device *rx_device;$/;"	v	typeref:struct:device	file:
rx_frame	src/module/motorola.c	/^struct m_audio_frame_t *rx_frame;$/;"	v	typeref:struct:m_audio_frame_t
rx_lock	src/hw/audio/audio.c	/^static struct k_sem rx_lock;$/;"	v	typeref:struct:k_sem	file:
rx_mem_slab	src/hw/audio/codec2.c	/^static struct k_mem_slab rx_mem_slab;$/;"	v	typeref:struct:k_mem_slab	file:
rx_mem_slab	src/hw/old-codec.c	/^static struct k_mem_slab rx_mem_slab;$/;"	v	typeref:struct:k_mem_slab	file:
rx_unlock	src/hw/audio/audio.c	/^static void rx_unlock(struct k_timer *timer_id)$/;"	f	file:
s16	src/types.h	/^typedef int16_t s16;$/;"	t
s32	src/types.h	/^typedef int32_t s32;$/;"	t
s64	src/types.h	/^typedef int64_t s64;$/;"	t
s8	src/types.h	/^typedef int8_t s8;$/;"	t
sAR2_Q14	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 sAR2_Q14[ MAX_SHAPE_LPC_ORDER ];$/;"	m	struct:__anon19	file:
sAR2_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  sAR2_Q14[ MAX_SHAPE_LPC_ORDER ];$/;"	m	struct:__anon26
sCNG	src/hw/audio/opus-1.2.1/structs.h	/^    silk_CNG_struct             sCNG;$/;"	m	struct:__anon36
sCmn	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    silk_encoder_state          sCmn;                                   \/* Common struct, shared with floating-point code       *\/$/;"	m	struct:__anon13
sDiff_shp_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  sDiff_shp_Q14;$/;"	m	struct:__anon26
sFIR	src/hw/audio/opus-1.2.1/resampler_structs.h	/^    }                sFIR;$/;"	m	struct:_silk_resampler_state_struct	typeref:union:_silk_resampler_state_struct::__anon38
sIIR	src/hw/audio/opus-1.2.1/resampler_structs.h	/^    opus_int32       sIIR[ SILK_RESAMPLER_MAX_IIR_ORDER ]; \/* this must be the first element of this struct *\/$/;"	m	struct:_silk_resampler_state_struct
sLF_AR_shp_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  sLF_AR_shp_Q14;$/;"	m	struct:__anon26
sLP	src/hw/audio/opus-1.2.1/structs.h	/^    silk_LP_state                sLP;                               \/* Low pass filter state                                            *\/$/;"	m	struct:__anon33
sLPC_Q14	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 sLPC_Q14[ MAX_SUB_FRAME_LENGTH + NSQ_LPC_BUF_LENGTH ];$/;"	m	struct:__anon19	file:
sLPC_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  sLPC_Q14[ MAX_SUB_FRAME_LENGTH + NSQ_LPC_BUF_LENGTH ];$/;"	m	struct:__anon26
sLPC_Q14_buf	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  sLPC_Q14_buf[ MAX_LPC_ORDER ];$/;"	m	struct:__anon36
sLTP_buf_idx	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    sLTP_buf_idx;$/;"	m	struct:__anon26
sLTP_shp_Q14	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 sLTP_shp_Q14;$/;"	m	struct:__anon20	file:
sLTP_shp_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                  sLTP_shp_Q14[ 2 * MAX_FRAME_LENGTH ];$/;"	m	struct:__anon26
sLTP_shp_buf_idx	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    sLTP_shp_buf_idx;$/;"	m	struct:__anon26
sMid	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   sMid[ 2 ];$/;"	m	struct:__anon30
sMid	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   sMid[ 2 ];$/;"	m	struct:__anon31
sNSQ	src/hw/audio/opus-1.2.1/structs.h	/^    silk_nsq_state               sNSQ;                              \/* Noise Shape Quantizer State                                      *\/$/;"	m	struct:__anon33
sPLC	src/hw/audio/opus-1.2.1/structs.h	/^    silk_PLC_struct sPLC;$/;"	m	struct:__anon36
sShape	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    silk_shape_state_FIX        sShape;                                 \/* Shape state                                          *\/$/;"	m	struct:__anon13
sSide	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   sSide[ 2 ];$/;"	m	struct:__anon30
sSide	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   sSide[ 2 ];$/;"	m	struct:__anon31
sStereo	src/hw/audio/opus-1.2.1/dec_API.c	/^    stereo_dec_state                sStereo;$/;"	m	struct:__anon18	file:
sStereo	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    stereo_enc_state            sStereo;$/;"	m	struct:__anon15
sVAD	src/hw/audio/opus-1.2.1/structs.h	/^    silk_VAD_state               sVAD;                              \/* Voice activity detector state                                    *\/$/;"	m	struct:__anon33
sample_idx	src/hw/audio/codec-i2s.c	/^static uint32_t sample_idx          = 0;$/;"	v	file:
scale	src/hw/audio/opus-1.2.1/kiss_fft.h	/^    opus_val16 scale;$/;"	m	struct:kiss_fft_state
scale_shift	src/hw/audio/opus-1.2.1/kiss_fft.h	/^    int scale_shift;$/;"	m	struct:kiss_fft_state
scratch_ptr	src/hw/audio/opus-1.2.1/stack_alloc.h	/^char *scratch_ptr=0;$/;"	v
screen_id	src/module/ui.c	/^static enum screen_id {$/;"	g	file:
screens	src/module/ui.c	/^static const lv_screen_t screens[SCREEN_COUNT];$/;"	v	file:
second_check	src/hw/audio/opus-1.2.1/pitch.c	/^static const int second_check[16] = {0, 0, 3, 2, 3, 2, 5, 2, 3, 2, 3, 2, 5, 2, 3, 2};$/;"	v	file:
seed	src/hw/audio/opus-1.2.1/bands.c	/^   opus_uint32 seed;$/;"	m	struct:band_ctx	file:
self	src/hw/audio/codec2.c	/^static struct module_data self = {$/;"	v	typeref:struct:module_data	file:
self	src/hw/old-codec.c	/^static struct module_data self = {$/;"	v	typeref:struct:module_data	file:
self	src/main.c	/^static struct module_data self = {$/;"	v	typeref:struct:module_data	file:
self	src/module/modem.c	/^static struct module_data self = {$/;"	v	typeref:struct:module_data	file:
self	src/module/sdk_modem.c	/^static struct module_data self = {$/;"	v	typeref:struct:module_data	file:
self	src/module/ui.c	/^static struct module_data self = {$/;"	v	typeref:struct:module_data	file:
semi_automated	src/hw/driver/sgtl5000.c	/^static 	bool semi_automated;$/;"	v	file:
send_cell_update	src/module/sdk_modem.c	/^static void send_cell_update(uint32_t cell_id, uint32_t tac)$/;"	f	file:
send_edrx_update	src/module/sdk_modem.c	/^static void send_edrx_update(float edrx, float ptw)$/;"	f	file:
send_neighbor_cell_update	src/module/sdk_modem.c	/^static void send_neighbor_cell_update(struct lte_lc_cells_info *cell_info)$/;"	f	file:
send_psm_update	src/module/sdk_modem.c	/^static void send_psm_update(int tau, int active_time)$/;"	f	file:
server	src/main.c	/^		struct server_event server;$/;"	m	union:app_msg::__anon53	typeref:struct:app_msg::__anon53::server_event	file:
server	src/module/ui.c	/^    struct server_event server;$/;"	m	union:ui_msg::__anon50	typeref:struct:ui_msg::__anon50::server_event	file:
server_connect	src/module/radio.c	/^static int server_connect(void)$/;"	f	file:
server_data	src/event/server_event.h	/^struct server_data {$/;"	s
server_disconnect	src/module/radio.c	/^static void server_disconnect(void)$/;"	f	file:
server_event	src/event/server_event.h	/^EVENT_TYPE_DECLARE( server_event );$/;"	v
server_event	src/event/server_event.h	/^struct server_event {$/;"	s
server_event_type	src/event/server_event.h	/^enum server_event_type {$/;"	g
server_init	src/module/radio.c	/^static int server_init(void)$/;"	f	file:
set_state	src/module/ui.c	/^static void set_state( enum state_type new_state ) {$/;"	f	file:
setup	src/module/modem.c	/^static int setup(void)$/;"	f	file:
setup	src/module/sdk_modem.c	/^static int setup(void)$/;"	f	file:
sgtl_drv_params	src/hw/audio/codec-i2s.c	/^static drv_sgtl5000_init_t sgtl_drv_params;$/;"	v	file:
shapeWinLength	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     shapeWinLength;                    \/* Window length for noise shape analysis (samples)                 *\/$/;"	m	struct:__anon33
shapingLPCOrder	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     shapingLPCOrder;                   \/* Filter order for noise shaping filters                           *\/$/;"	m	struct:__anon33
shift	src/hw/audio/opus-1.2.1/kiss_fft.h	/^    int shift;$/;"	m	struct:kiss_fft_state
shortMdctSize	src/hw/audio/opus-1.2.1/modes.h	/^   int         shortMdctSize;$/;"	m	struct:OpusCustomMode
sigm_LUT_neg_Q15	src/hw/audio/opus-1.2.1/sigm_Q15.c	/^static const opus_int32 sigm_LUT_neg_Q15[ 6 ] = {$/;"	v	file:
sigm_LUT_pos_Q15	src/hw/audio/opus-1.2.1/sigm_Q15.c	/^static const opus_int32 sigm_LUT_pos_Q15[ 6 ] = {$/;"	v	file:
sigm_LUT_slope_Q10	src/hw/audio/opus-1.2.1/sigm_Q15.c	/^static const opus_int32 sigm_LUT_slope_Q10[ 6 ] = {$/;"	v	file:
signalType	src/hw/audio/opus-1.2.1/celt.h	/^   int signalType;$/;"	m	struct:__anon11
signalType	src/hw/audio/opus-1.2.1/control.h	/^    opus_int signalType;$/;"	m	struct:__anon8
signalType	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int8                    signalType;$/;"	m	struct:__anon32
signal_type	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          signal_type;$/;"	m	struct:OpusEncoder	file:
signalling	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int signalling;$/;"	m	struct:OpusCustomDecoder	file:
signalling	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int signalling;$/;"	m	struct:OpusCustomEncoder	file:
silent_side_len	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   silent_side_len;$/;"	m	struct:__anon30
silk_A2NLSF	src/hw/audio/opus-1.2.1/A2NLSF.c	/^void silk_A2NLSF($/;"	f
silk_A2NLSF_eval_poly	src/hw/audio/opus-1.2.1/A2NLSF.c	/^static OPUS_INLINE opus_int32 silk_A2NLSF_eval_poly( \/* return the polynomial evaluation, in Q16     *\/$/;"	f	file:
silk_A2NLSF_init	src/hw/audio/opus-1.2.1/A2NLSF.c	/^static OPUS_INLINE void silk_A2NLSF_init($/;"	f	file:
silk_A2NLSF_trans_poly	src/hw/audio/opus-1.2.1/A2NLSF.c	/^static OPUS_INLINE void silk_A2NLSF_trans_poly($/;"	f	file:
silk_ADD16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_ADD16$/;"	d
silk_ADD16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int16 silk_ADD16(opus_int16 a, opus_int16 b){$/;"	f
silk_ADD16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_ADD16(/;"	d
silk_ADD16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_ADD16$/;"	d
silk_ADD16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD16(/;"	d
silk_ADD16_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int16 silk_ADD16_(opus_int16 a, opus_int16 b, char *file, int line){$/;"	f
silk_ADD32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_ADD32$/;"	d
silk_ADD32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_ADD32(opus_int32 a, opus_int32 b){$/;"	f
silk_ADD32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_ADD32(/;"	d
silk_ADD32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_ADD32$/;"	d
silk_ADD32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD32(/;"	d
silk_ADD32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_ADD32_(opus_int32 a, opus_int32 b, char *file, int line){$/;"	f
silk_ADD32_ovflw	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD32_ovflw(/;"	d
silk_ADD64	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_ADD64$/;"	d
silk_ADD64	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_ADD64(opus_int64 a, opus_int64 b){$/;"	f
silk_ADD64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_ADD64(/;"	d
silk_ADD64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_ADD64$/;"	d
silk_ADD64	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD64(/;"	d
silk_ADD64_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int64 silk_ADD64_(opus_int64 a, opus_int64 b, char *file, int line){$/;"	f
silk_ADD_LSHIFT	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_ADD_LSHIFT$/;"	d
silk_ADD_LSHIFT	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_ADD_LSHIFT(opus_int32 a, opus_int32 b, opus_int32 shift){$/;"	f
silk_ADD_LSHIFT	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_ADD_LSHIFT(/;"	d
silk_ADD_LSHIFT	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_ADD_LSHIFT$/;"	d
silk_ADD_LSHIFT	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD_LSHIFT(/;"	d
silk_ADD_LSHIFT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_ADD_LSHIFT32$/;"	d
silk_ADD_LSHIFT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_ADD_LSHIFT32(opus_int32 a, opus_int32 b, opus_int32 shift){$/;"	f
silk_ADD_LSHIFT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_ADD_LSHIFT32(/;"	d
silk_ADD_LSHIFT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_ADD_LSHIFT32$/;"	d
silk_ADD_LSHIFT32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD_LSHIFT32(/;"	d
silk_ADD_LSHIFT32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_ADD_LSHIFT32_(opus_int32 a, opus_int32 b, opus_int32 shift, char *file, int line){$/;"	f
silk_ADD_LSHIFT_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE int silk_ADD_LSHIFT_(int a, int b, int shift, char *file, int line){$/;"	f
silk_ADD_LSHIFT_uint	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_ADD_LSHIFT_uint$/;"	d
silk_ADD_LSHIFT_uint	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_uint32 silk_ADD_LSHIFT_uint(opus_uint32 a, opus_uint32 b, opus_int32 shift){$/;"	f
silk_ADD_LSHIFT_uint	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_ADD_LSHIFT_uint(/;"	d
silk_ADD_LSHIFT_uint	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_ADD_LSHIFT_uint$/;"	d
silk_ADD_LSHIFT_uint	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD_LSHIFT_uint(/;"	d
silk_ADD_LSHIFT_uint_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_uint32 silk_ADD_LSHIFT_uint_(opus_uint32 a, opus_uint32 b, opus_int32 shift, char *file, int line){$/;"	f
silk_ADD_POS_SAT16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_ADD_POS_SAT16$/;"	d
silk_ADD_POS_SAT16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int16 silk_ADD_POS_SAT16(opus_int64 a, opus_int64 b){$/;"	f
silk_ADD_POS_SAT16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD_POS_SAT16(/;"	d
silk_ADD_POS_SAT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_ADD_POS_SAT32$/;"	d
silk_ADD_POS_SAT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_ADD_POS_SAT32(opus_int64 a, opus_int64 b){$/;"	f
silk_ADD_POS_SAT32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD_POS_SAT32(/;"	d
silk_ADD_POS_SAT8	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_ADD_POS_SAT8$/;"	d
silk_ADD_POS_SAT8	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int8 silk_ADD_POS_SAT8(opus_int64 a, opus_int64 b){$/;"	f
silk_ADD_POS_SAT8	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD_POS_SAT8(/;"	d
silk_ADD_RSHIFT	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_ADD_RSHIFT$/;"	d
silk_ADD_RSHIFT	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_ADD_RSHIFT(opus_int32 a, opus_int32 b, opus_int32 shift){$/;"	f
silk_ADD_RSHIFT	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_ADD_RSHIFT(/;"	d
silk_ADD_RSHIFT	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_ADD_RSHIFT$/;"	d
silk_ADD_RSHIFT	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD_RSHIFT(/;"	d
silk_ADD_RSHIFT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_ADD_RSHIFT32$/;"	d
silk_ADD_RSHIFT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_ADD_RSHIFT32(opus_int32 a, opus_int32 b, opus_int32 shift){$/;"	f
silk_ADD_RSHIFT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_ADD_RSHIFT32(/;"	d
silk_ADD_RSHIFT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_ADD_RSHIFT32$/;"	d
silk_ADD_RSHIFT32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD_RSHIFT32(/;"	d
silk_ADD_RSHIFT32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_ADD_RSHIFT32_(opus_int32 a, opus_int32 b, opus_int32 shift, char *file, int line){$/;"	f
silk_ADD_RSHIFT_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE int silk_ADD_RSHIFT_(int a, int b, int shift, char *file, int line){$/;"	f
silk_ADD_RSHIFT_uint	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_ADD_RSHIFT_uint$/;"	d
silk_ADD_RSHIFT_uint	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_uint32 silk_ADD_RSHIFT_uint(opus_uint32 a, opus_uint32 b, opus_int32 shift){$/;"	f
silk_ADD_RSHIFT_uint	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_ADD_RSHIFT_uint(/;"	d
silk_ADD_RSHIFT_uint	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_ADD_RSHIFT_uint$/;"	d
silk_ADD_RSHIFT_uint	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD_RSHIFT_uint(/;"	d
silk_ADD_RSHIFT_uint_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_uint32 silk_ADD_RSHIFT_uint_(opus_uint32 a, opus_uint32 b, opus_int32 shift, char *file, int line){$/;"	f
silk_ADD_SAT16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_ADD_SAT16$/;"	d
silk_ADD_SAT16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int16 silk_ADD_SAT16( opus_int16 a16, opus_int16 b16 ) {$/;"	f
silk_ADD_SAT16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_ADD_SAT16(/;"	d
silk_ADD_SAT16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_ADD_SAT16$/;"	d
silk_ADD_SAT16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD_SAT16(/;"	d
silk_ADD_SAT16_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int16 silk_ADD_SAT16_( opus_int16 a16, opus_int16 b16, char *file, int line) {$/;"	f
silk_ADD_SAT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_ADD_SAT32$/;"	d
silk_ADD_SAT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_ADD_SAT32(opus_int32 a32, opus_int32 b32){$/;"	f
silk_ADD_SAT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_ADD_SAT32(/;"	d
silk_ADD_SAT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_ADD_SAT32$/;"	d
silk_ADD_SAT32	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define silk_ADD_SAT32(/;"	d
silk_ADD_SAT32	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef silk_ADD_SAT32$/;"	d
silk_ADD_SAT32	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_ADD_SAT32(/;"	d
silk_ADD_SAT32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_ADD_SAT32_(opus_int32 a32, opus_int32 b32, char *file, int line){$/;"	f
silk_ADD_SAT32_armv5e	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^static OPUS_INLINE opus_int32 silk_ADD_SAT32_armv5e(opus_int32 a, opus_int32 b)$/;"	f
silk_ADD_SAT64	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_ADD_SAT64$/;"	d
silk_ADD_SAT64	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_ADD_SAT64( opus_int64 a64, opus_int64 b64 ) {$/;"	f
silk_ADD_SAT64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_ADD_SAT64(/;"	d
silk_ADD_SAT64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_ADD_SAT64$/;"	d
silk_ADD_SAT64	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_ADD_SAT64(/;"	d
silk_ADD_SAT64_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int64 silk_ADD_SAT64_( opus_int64 a64, opus_int64 b64, char *file, int line) {$/;"	f
silk_CB_lags_stage2	src/hw/audio/opus-1.2.1/pitch_est_tables.c	/^const opus_int8 silk_CB_lags_stage2[ PE_MAX_NB_SUBFR ][ PE_NB_CBKS_STAGE2_EXT ] =$/;"	v
silk_CB_lags_stage2_10_ms	src/hw/audio/opus-1.2.1/pitch_est_tables.c	/^const opus_int8 silk_CB_lags_stage2_10_ms[ PE_MAX_NB_SUBFR >> 1][ PE_NB_CBKS_STAGE2_10MS ] =$/;"	v
silk_CB_lags_stage3	src/hw/audio/opus-1.2.1/pitch_est_tables.c	/^const opus_int8 silk_CB_lags_stage3[ PE_MAX_NB_SUBFR ][ PE_NB_CBKS_STAGE3_MAX ] =$/;"	v
silk_CB_lags_stage3_10_ms	src/hw/audio/opus-1.2.1/pitch_est_tables.c	/^const opus_int8 silk_CB_lags_stage3_10_ms[ PE_MAX_NB_SUBFR >> 1 ][ PE_NB_CBKS_STAGE3_10MS ] =$/;"	v
silk_CHECK_FIT16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_CHECK_FIT16(/;"	d
silk_CHECK_FIT16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_CHECK_FIT16$/;"	d
silk_CHECK_FIT16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_CHECK_FIT16(/;"	d
silk_CHECK_FIT16_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int16 silk_CHECK_FIT16_( opus_int64 a, char *file, int line ){$/;"	f
silk_CHECK_FIT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_CHECK_FIT32(/;"	d
silk_CHECK_FIT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_CHECK_FIT32$/;"	d
silk_CHECK_FIT32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_CHECK_FIT32(/;"	d
silk_CHECK_FIT32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_CHECK_FIT32_( opus_int64 a, char *file, int line ){$/;"	f
silk_CHECK_FIT8	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_CHECK_FIT8(/;"	d
silk_CHECK_FIT8	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_CHECK_FIT8$/;"	d
silk_CHECK_FIT8	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_CHECK_FIT8(/;"	d
silk_CHECK_FIT8_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int8 silk_CHECK_FIT8_( opus_int64 a, char *file, int line ){$/;"	f
silk_CLZ16	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define silk_CLZ16(/;"	d
silk_CLZ16	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef silk_CLZ16$/;"	d
silk_CLZ16	src/hw/audio/opus-1.2.1/macros.h	/^static OPUS_INLINE opus_int32 silk_CLZ16(opus_int16 in16)$/;"	f
silk_CLZ16_armv5	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^static OPUS_INLINE opus_int32 silk_CLZ16_armv5(opus_int16 in16)$/;"	f
silk_CLZ32	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define silk_CLZ32(/;"	d
silk_CLZ32	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef silk_CLZ32$/;"	d
silk_CLZ32	src/hw/audio/opus-1.2.1/macros.h	/^static OPUS_INLINE opus_int32 silk_CLZ32(opus_int32 in32)$/;"	f
silk_CLZ32_armv5	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^static OPUS_INLINE opus_int32 silk_CLZ32_armv5(opus_int32 in32)$/;"	f
silk_CLZ64	src/hw/audio/opus-1.2.1/Inlines.h	/^static OPUS_INLINE opus_int32 silk_CLZ64( opus_int64 in )$/;"	f
silk_CLZ_FRAC	src/hw/audio/opus-1.2.1/Inlines.h	/^static OPUS_INLINE void silk_CLZ_FRAC($/;"	f
silk_CNG	src/hw/audio/opus-1.2.1/CNG.c	/^void silk_CNG($/;"	f
silk_CNG_Reset	src/hw/audio/opus-1.2.1/CNG.c	/^void silk_CNG_Reset($/;"	f
silk_CNG_exc	src/hw/audio/opus-1.2.1/CNG.c	/^static OPUS_INLINE void silk_CNG_exc($/;"	f	file:
silk_CNG_struct	src/hw/audio/opus-1.2.1/structs.h	/^} silk_CNG_struct;$/;"	t	typeref:struct:__anon35
silk_DIV32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_DIV32$/;"	d
silk_DIV32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_DIV32(opus_int32 a32, opus_int32 b32){$/;"	f
silk_DIV32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_DIV32(/;"	d
silk_DIV32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_DIV32$/;"	d
silk_DIV32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_DIV32(/;"	d
silk_DIV32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_DIV32_(opus_int32 a32, opus_int32 b32, char *file, int line){$/;"	f
silk_DIV32_16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_DIV32_16$/;"	d
silk_DIV32_16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_DIV32_16(opus_int32 a32, opus_int32 b32){$/;"	f
silk_DIV32_16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_DIV32_16(/;"	d
silk_DIV32_16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_DIV32_16$/;"	d
silk_DIV32_16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_DIV32_16(/;"	d
silk_DIV32_16_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_DIV32_16_(opus_int32 a32, opus_int32 b32, char *file, int line){$/;"	f
silk_DIV32_varQ	src/hw/audio/opus-1.2.1/Inlines.h	/^static OPUS_INLINE opus_int32 silk_DIV32_varQ(   \/* O    returns a good approximation of "(a32 << Qres) \/ b32" *\/$/;"	f
silk_DWORD_ALIGN	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_DWORD_ALIGN /;"	d
silk_DWORD_ALIGN	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_DWORD_ALIGN$/;"	d
silk_DecControlStruct	src/hw/audio/opus-1.2.1/control.h	/^} silk_DecControlStruct;$/;"	t	typeref:struct:__anon9
silk_Decode	src/hw/audio/opus-1.2.1/dec_API.c	/^opus_int silk_Decode(                                   \/* O    Returns error code                              *\/$/;"	f
silk_EncControlStruct	src/hw/audio/opus-1.2.1/control.h	/^} silk_EncControlStruct;$/;"	t	typeref:struct:__anon8
silk_Encode	src/hw/audio/opus-1.2.1/enc_API.c	/^opus_int silk_Encode(                                   \/* O    Returns error code                              *\/$/;"	f
silk_FALSE	src/hw/audio/opus-1.2.1/typedef.h	/^#define silk_FALSE /;"	d
silk_GetHighResolutionTime	src/hw/audio/opus-1.2.1/debug.c	/^unsigned long silk_GetHighResolutionTime(void) \/* O  time in usec*\/$/;"	f
silk_Get_Decoder_Size	src/hw/audio/opus-1.2.1/dec_API.c	/^opus_int silk_Get_Decoder_Size(                         \/* O    Returns error code                              *\/$/;"	f
silk_Get_Encoder_Size	src/hw/audio/opus-1.2.1/enc_API.c	/^opus_int silk_Get_Encoder_Size(                         \/* O    Returns error code                              *\/$/;"	f
silk_HP_variable_cutoff	src/hw/audio/opus-1.2.1/HP_variable_cutoff.c	/^void silk_HP_variable_cutoff($/;"	f
silk_INVERSE32_varQ	src/hw/audio/opus-1.2.1/Inlines.h	/^static OPUS_INLINE opus_int32 silk_INVERSE32_varQ(   \/* O    returns a good approximation of "(1 << Qres) \/ b32" *\/$/;"	f
silk_InitDecoder	src/hw/audio/opus-1.2.1/dec_API.c	/^opus_int silk_InitDecoder(                              \/* O    Returns error code                              *\/$/;"	f
silk_InitEncoder	src/hw/audio/opus-1.2.1/enc_API.c	/^opus_int silk_InitEncoder(                              \/* O    Returns error code                              *\/$/;"	f
silk_LBRR_encode_FIX	src/hw/audio/opus-1.2.1/encode_frame_FIX.c	/^static OPUS_INLINE void silk_LBRR_encode_FIX($/;"	f	file:
silk_LBRR_flags_2_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^static const opus_uint8 silk_LBRR_flags_2_iCDF[ 3 ] = { 203, 150, 0 };$/;"	v	file:
silk_LBRR_flags_3_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^static const opus_uint8 silk_LBRR_flags_3_iCDF[ 7 ] = { 215, 195, 166, 125, 110, 82, 0 };$/;"	v	file:
silk_LBRR_flags_iCDF_ptr	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8 * const silk_LBRR_flags_iCDF_ptr[ 2 ] = {$/;"	v
silk_LIMIT	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LIMIT(/;"	d
silk_LIMIT_16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_LIMIT_16$/;"	d
silk_LIMIT_16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int16 silk_LIMIT_16(opus_int16 a, opus_int16 limit1, opus_int16 limit2)$/;"	f
silk_LIMIT_16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LIMIT_16 /;"	d
silk_LIMIT_32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_LIMIT_32$/;"	d
silk_LIMIT_32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_LIMIT_32(opus_int32 a, opus_int32 limit1, opus_int32 limit2)$/;"	f
silk_LIMIT_32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LIMIT_32 /;"	d
silk_LIMIT_int	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_LIMIT_int$/;"	d
silk_LIMIT_int	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int silk_LIMIT_int(opus_int a, opus_int limit1, opus_int limit2)$/;"	f
silk_LIMIT_int	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LIMIT_int /;"	d
silk_LPC_analysis_filter	src/hw/audio/opus-1.2.1/LPC_analysis_filter.c	/^void silk_LPC_analysis_filter($/;"	f
silk_LPC_fit	src/hw/audio/opus-1.2.1/LPC_fit.c	/^void silk_LPC_fit($/;"	f
silk_LPC_inverse_pred_gain	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LPC_inverse_pred_gain(/;"	d
silk_LPC_inverse_pred_gain	src/hw/audio/opus-1.2.1/arm/LPC_inv_pred_gain_arm.h	/^#   define silk_LPC_inverse_pred_gain(/;"	d
silk_LPC_inverse_pred_gain_c	src/hw/audio/opus-1.2.1/LPC_inv_pred_gain.c	/^opus_int32 silk_LPC_inverse_pred_gain_c(            \/* O   Returns inverse prediction gain in energy domain, Q30        *\/$/;"	f
silk_LP_interpolate_filter_taps	src/hw/audio/opus-1.2.1/LP_variable_cutoff.c	/^static OPUS_INLINE void silk_LP_interpolate_filter_taps($/;"	f	file:
silk_LP_state	src/hw/audio/opus-1.2.1/structs.h	/^} silk_LP_state;$/;"	t	typeref:struct:__anon28
silk_LP_variable_cutoff	src/hw/audio/opus-1.2.1/LP_variable_cutoff.c	/^void silk_LP_variable_cutoff($/;"	f
silk_LSFCosTab_FIX_Q12	src/hw/audio/opus-1.2.1/table_LSF_cos.c	/^const opus_int16 silk_LSFCosTab_FIX_Q12[ LSF_COS_TAB_SZ_FIX + 1 ] = {$/;"	v
silk_LSHIFT	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LSHIFT(/;"	d
silk_LSHIFT16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_LSHIFT16$/;"	d
silk_LSHIFT16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int16 silk_LSHIFT16(opus_int16 a, opus_int32 shift){$/;"	f
silk_LSHIFT16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_LSHIFT16(/;"	d
silk_LSHIFT16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_LSHIFT16$/;"	d
silk_LSHIFT16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LSHIFT16(/;"	d
silk_LSHIFT16_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int16 silk_LSHIFT16_(opus_int16 a, opus_int32 shift, char *file, int line){$/;"	f
silk_LSHIFT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_LSHIFT32$/;"	d
silk_LSHIFT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_LSHIFT32(opus_int32 a, opus_int32 shift){$/;"	f
silk_LSHIFT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_LSHIFT32(/;"	d
silk_LSHIFT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_LSHIFT32$/;"	d
silk_LSHIFT32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LSHIFT32(/;"	d
silk_LSHIFT32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_LSHIFT32_(opus_int32 a, opus_int32 shift, char *file, int line){$/;"	f
silk_LSHIFT64	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_LSHIFT64$/;"	d
silk_LSHIFT64	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_LSHIFT64(opus_int64 a, opus_int shift){$/;"	f
silk_LSHIFT64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_LSHIFT64(/;"	d
silk_LSHIFT64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_LSHIFT64$/;"	d
silk_LSHIFT64	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LSHIFT64(/;"	d
silk_LSHIFT64_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int64 silk_LSHIFT64_(opus_int64 a, opus_int shift, char *file, int line){$/;"	f
silk_LSHIFT8	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_LSHIFT8$/;"	d
silk_LSHIFT8	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int8 silk_LSHIFT8(opus_int8 a, opus_int32 shift){$/;"	f
silk_LSHIFT8	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_LSHIFT8(/;"	d
silk_LSHIFT8	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_LSHIFT8$/;"	d
silk_LSHIFT8	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LSHIFT8(/;"	d
silk_LSHIFT8_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int8 silk_LSHIFT8_(opus_int8 a, opus_int32 shift, char *file, int line){$/;"	f
silk_LSHIFT_SAT32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LSHIFT_SAT32(/;"	d
silk_LSHIFT_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_LSHIFT_ovflw$/;"	d
silk_LSHIFT_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_LSHIFT_ovflw(opus_int32 a, opus_int32 shift){$/;"	f
silk_LSHIFT_ovflw	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_LSHIFT_ovflw(/;"	d
silk_LSHIFT_ovflw	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_LSHIFT_ovflw$/;"	d
silk_LSHIFT_ovflw	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LSHIFT_ovflw(/;"	d
silk_LSHIFT_ovflw_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_LSHIFT_ovflw_(opus_int32 a, opus_int32 shift, char *file, int line){$/;"	f
silk_LSHIFT_uint	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_LSHIFT_uint$/;"	d
silk_LSHIFT_uint	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_uint32 silk_LSHIFT_uint(opus_uint32 a, opus_int32 shift){$/;"	f
silk_LSHIFT_uint	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_LSHIFT_uint(/;"	d
silk_LSHIFT_uint	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_LSHIFT_uint$/;"	d
silk_LSHIFT_uint	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_LSHIFT_uint(/;"	d
silk_LSHIFT_uint_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_uint32 silk_LSHIFT_uint_(opus_uint32 a, opus_int32 shift, char *file, int line){$/;"	f
silk_LTPScales_table_Q14	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_int16 silk_LTPScales_table_Q14[ 3 ] = { 15565, 12288, 8192 };$/;"	v
silk_LTP_analysis_filter_FIX	src/hw/audio/opus-1.2.1/LTP_analysis_filter_FIX.c	/^void silk_LTP_analysis_filter_FIX($/;"	f
silk_LTP_gain_BITS_Q5_0	src/hw/audio/opus-1.2.1/tables_LTP.c	/^static const opus_uint8 silk_LTP_gain_BITS_Q5_0[8] = {$/;"	v	file:
silk_LTP_gain_BITS_Q5_1	src/hw/audio/opus-1.2.1/tables_LTP.c	/^static const opus_uint8 silk_LTP_gain_BITS_Q5_1[16] = {$/;"	v	file:
silk_LTP_gain_BITS_Q5_2	src/hw/audio/opus-1.2.1/tables_LTP.c	/^static const opus_uint8 silk_LTP_gain_BITS_Q5_2[32] = {$/;"	v	file:
silk_LTP_gain_BITS_Q5_ptrs	src/hw/audio/opus-1.2.1/tables_LTP.c	/^const opus_uint8 * const silk_LTP_gain_BITS_Q5_ptrs[NB_LTP_CBKS] = {$/;"	v
silk_LTP_gain_iCDF_0	src/hw/audio/opus-1.2.1/tables_LTP.c	/^static const opus_uint8 silk_LTP_gain_iCDF_0[8] = {$/;"	v	file:
silk_LTP_gain_iCDF_1	src/hw/audio/opus-1.2.1/tables_LTP.c	/^static const opus_uint8 silk_LTP_gain_iCDF_1[16] = {$/;"	v	file:
silk_LTP_gain_iCDF_2	src/hw/audio/opus-1.2.1/tables_LTP.c	/^static const opus_uint8 silk_LTP_gain_iCDF_2[32] = {$/;"	v	file:
silk_LTP_gain_iCDF_ptrs	src/hw/audio/opus-1.2.1/tables_LTP.c	/^const opus_uint8 * const silk_LTP_gain_iCDF_ptrs[NB_LTP_CBKS] = {$/;"	v
silk_LTP_gain_vq_0	src/hw/audio/opus-1.2.1/tables_LTP.c	/^static const opus_int8 silk_LTP_gain_vq_0[8][5] =$/;"	v	file:
silk_LTP_gain_vq_0_gain	src/hw/audio/opus-1.2.1/tables_LTP.c	/^static const opus_uint8 silk_LTP_gain_vq_0_gain[8] = {$/;"	v	file:
silk_LTP_gain_vq_1	src/hw/audio/opus-1.2.1/tables_LTP.c	/^static const opus_int8 silk_LTP_gain_vq_1[16][5] =$/;"	v	file:
silk_LTP_gain_vq_1_gain	src/hw/audio/opus-1.2.1/tables_LTP.c	/^static const opus_uint8 silk_LTP_gain_vq_1_gain[16] = {$/;"	v	file:
silk_LTP_gain_vq_2	src/hw/audio/opus-1.2.1/tables_LTP.c	/^static const opus_int8 silk_LTP_gain_vq_2[32][5] =$/;"	v	file:
silk_LTP_gain_vq_2_gain	src/hw/audio/opus-1.2.1/tables_LTP.c	/^static const opus_uint8 silk_LTP_gain_vq_2_gain[32] = {$/;"	v	file:
silk_LTP_per_index_iCDF	src/hw/audio/opus-1.2.1/tables_LTP.c	/^const opus_uint8 silk_LTP_per_index_iCDF[3] = {$/;"	v
silk_LTP_scale_ctrl_FIX	src/hw/audio/opus-1.2.1/LTP_scale_ctrl_FIX.c	/^void silk_LTP_scale_ctrl_FIX($/;"	f
silk_LTP_vq_gain_ptrs_Q7	src/hw/audio/opus-1.2.1/tables_LTP.c	/^const opus_uint8 * const silk_LTP_vq_gain_ptrs_Q7[NB_LTP_CBKS] = {$/;"	v
silk_LTP_vq_ptrs_Q7	src/hw/audio/opus-1.2.1/tables_LTP.c	/^const opus_int8 * const silk_LTP_vq_ptrs_Q7[NB_LTP_CBKS] = {$/;"	v
silk_LTP_vq_sizes	src/hw/audio/opus-1.2.1/tables_LTP.c	/^const opus_int8 silk_LTP_vq_sizes[NB_LTP_CBKS] = {$/;"	v
silk_LTPscale_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8 silk_LTPscale_iCDF[ 3 ] = { 128, 64, 0 };$/;"	v
silk_Lag_range_stage3	src/hw/audio/opus-1.2.1/pitch_est_tables.c	/^const opus_int8 silk_Lag_range_stage3[ SILK_PE_MAX_COMPLEX + 1 ] [ PE_MAX_NB_SUBFR ][ 2 ] =$/;"	v
silk_Lag_range_stage3_10_ms	src/hw/audio/opus-1.2.1/pitch_est_tables.c	/^const opus_int8 silk_Lag_range_stage3_10_ms[ PE_MAX_NB_SUBFR >> 1 ][ 2 ] =$/;"	v
silk_MLA	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_MLA$/;"	d
silk_MLA	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_MLA(opus_int32 a32, opus_int32 b32, opus_int32 c32){$/;"	f
silk_MLA	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_MLA(/;"	d
silk_MLA	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_MLA$/;"	d
silk_MLA	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_MLA(/;"	d
silk_MLA	src/hw/audio/opus-1.2.1/arm/SigProc_FIX_armv4.h	/^#define silk_MLA(/;"	d
silk_MLA	src/hw/audio/opus-1.2.1/arm/SigProc_FIX_armv4.h	/^#undef silk_MLA$/;"	d
silk_MLA_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_MLA_(opus_int32 a32, opus_int32 b32, opus_int32 c32, char *file, int line){$/;"	f
silk_MLA_armv4	src/hw/audio/opus-1.2.1/arm/SigProc_FIX_armv4.h	/^static OPUS_INLINE opus_int32 silk_MLA_armv4(opus_int32 a, opus_int32 b,$/;"	f
silk_MLA_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#define silk_MLA_ovflw /;"	d
silk_MLA_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_MLA_ovflw$/;"	d
silk_MLA_ovflw	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_MLA_ovflw(/;"	d
silk_MLA_ovflw	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef  silk_MLA_ovflw$/;"	d
silk_MLA_ovflw	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_MLA_ovflw(/;"	d
silk_MLA_uint	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_MLA_uint$/;"	d
silk_MLA_uint	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_MLA_uint(opus_uint32 a32, opus_uint32 b32, opus_uint32 c32){$/;"	f
silk_MLA_uint	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_MLA_uint(/;"	d
silk_MLA_uint	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_MLA_uint$/;"	d
silk_MLA_uint	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_MLA_uint(/;"	d
silk_MLA_uint_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_MLA_uint_(opus_uint32 a32, opus_uint32 b32, opus_uint32 c32, char *file, int line){$/;"	f
silk_MUL	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_MUL$/;"	d
silk_MUL	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_MUL(opus_int32 a32, opus_int32 b32){$/;"	f
silk_MUL	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_MUL(/;"	d
silk_MUL	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_MUL$/;"	d
silk_MUL	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_MUL(/;"	d
silk_MUL_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_MUL_(opus_int32 a32, opus_int32 b32, char *file, int line){$/;"	f
silk_MUL_uint	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_MUL_uint$/;"	d
silk_MUL_uint	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_uint32 silk_MUL_uint(opus_uint32 a32, opus_uint32 b32){$/;"	f
silk_MUL_uint	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_MUL_uint(/;"	d
silk_MUL_uint	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_MUL_uint$/;"	d
silk_MUL_uint	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_MUL_uint(/;"	d
silk_MUL_uint_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_uint32 silk_MUL_uint_(opus_uint32 a32, opus_uint32 b32, char *file, int line){$/;"	f
silk_NLSF2A	src/hw/audio/opus-1.2.1/NLSF2A.c	/^void silk_NLSF2A($/;"	f
silk_NLSF2A_find_poly	src/hw/audio/opus-1.2.1/NLSF2A.c	/^static OPUS_INLINE void silk_NLSF2A_find_poly($/;"	f	file:
silk_NLSF_CB1_NB_MB_Q8	src/hw/audio/opus-1.2.1/tables_NLSF_CB_NB_MB.c	/^static const opus_uint8 silk_NLSF_CB1_NB_MB_Q8[ 320 ] = {$/;"	v	file:
silk_NLSF_CB1_WB_Q8	src/hw/audio/opus-1.2.1/tables_NLSF_CB_WB.c	/^static const opus_uint8 silk_NLSF_CB1_WB_Q8[ 512 ] = {$/;"	v	file:
silk_NLSF_CB1_WB_Wght_Q9	src/hw/audio/opus-1.2.1/tables_NLSF_CB_WB.c	/^static const opus_int16 silk_NLSF_CB1_WB_Wght_Q9[ 512 ] = {$/;"	v	file:
silk_NLSF_CB1_Wght_Q9	src/hw/audio/opus-1.2.1/tables_NLSF_CB_NB_MB.c	/^static const opus_int16 silk_NLSF_CB1_Wght_Q9[ 320 ] = {$/;"	v	file:
silk_NLSF_CB1_iCDF_NB_MB	src/hw/audio/opus-1.2.1/tables_NLSF_CB_NB_MB.c	/^static const opus_uint8 silk_NLSF_CB1_iCDF_NB_MB[ 64 ] = {$/;"	v	file:
silk_NLSF_CB1_iCDF_WB	src/hw/audio/opus-1.2.1/tables_NLSF_CB_WB.c	/^static const opus_uint8 silk_NLSF_CB1_iCDF_WB[ 64 ] = {$/;"	v	file:
silk_NLSF_CB2_BITS_NB_MB_Q5	src/hw/audio/opus-1.2.1/tables_NLSF_CB_NB_MB.c	/^static const opus_uint8 silk_NLSF_CB2_BITS_NB_MB_Q5[ 72 ] = {$/;"	v	file:
silk_NLSF_CB2_BITS_WB_Q5	src/hw/audio/opus-1.2.1/tables_NLSF_CB_WB.c	/^static const opus_uint8 silk_NLSF_CB2_BITS_WB_Q5[ 72 ] = {$/;"	v	file:
silk_NLSF_CB2_SELECT_NB_MB	src/hw/audio/opus-1.2.1/tables_NLSF_CB_NB_MB.c	/^static const opus_uint8 silk_NLSF_CB2_SELECT_NB_MB[ 160 ] = {$/;"	v	file:
silk_NLSF_CB2_SELECT_WB	src/hw/audio/opus-1.2.1/tables_NLSF_CB_WB.c	/^static const opus_uint8 silk_NLSF_CB2_SELECT_WB[ 256 ] = {$/;"	v	file:
silk_NLSF_CB2_iCDF_NB_MB	src/hw/audio/opus-1.2.1/tables_NLSF_CB_NB_MB.c	/^static const opus_uint8 silk_NLSF_CB2_iCDF_NB_MB[ 72 ] = {$/;"	v	file:
silk_NLSF_CB2_iCDF_WB	src/hw/audio/opus-1.2.1/tables_NLSF_CB_WB.c	/^static const opus_uint8 silk_NLSF_CB2_iCDF_WB[ 72 ] = {$/;"	v	file:
silk_NLSF_CB_NB_MB	src/hw/audio/opus-1.2.1/tables_NLSF_CB_NB_MB.c	/^const silk_NLSF_CB_struct silk_NLSF_CB_NB_MB =$/;"	v
silk_NLSF_CB_WB	src/hw/audio/opus-1.2.1/tables_NLSF_CB_WB.c	/^const silk_NLSF_CB_struct silk_NLSF_CB_WB =$/;"	v
silk_NLSF_CB_struct	src/hw/audio/opus-1.2.1/structs.h	/^} silk_NLSF_CB_struct;$/;"	t	typeref:struct:__anon29
silk_NLSF_DELTA_MIN_NB_MB_Q15	src/hw/audio/opus-1.2.1/tables_NLSF_CB_NB_MB.c	/^static const opus_int16 silk_NLSF_DELTA_MIN_NB_MB_Q15[ 11 ] = {$/;"	v	file:
silk_NLSF_DELTA_MIN_WB_Q15	src/hw/audio/opus-1.2.1/tables_NLSF_CB_WB.c	/^static const opus_int16 silk_NLSF_DELTA_MIN_WB_Q15[ 17 ] = {$/;"	v	file:
silk_NLSF_EXT_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8 silk_NLSF_EXT_iCDF[ 7 ] = { 100, 40, 16, 7, 3, 1, 0 };$/;"	v
silk_NLSF_PRED_NB_MB_Q8	src/hw/audio/opus-1.2.1/tables_NLSF_CB_NB_MB.c	/^static const opus_uint8 silk_NLSF_PRED_NB_MB_Q8[ 18 ] = {$/;"	v	file:
silk_NLSF_PRED_WB_Q8	src/hw/audio/opus-1.2.1/tables_NLSF_CB_WB.c	/^static const opus_uint8 silk_NLSF_PRED_WB_Q8[ 30 ] = {$/;"	v	file:
silk_NLSF_VQ	src/hw/audio/opus-1.2.1/NLSF_VQ.c	/^void silk_NLSF_VQ($/;"	f
silk_NLSF_VQ_weights_laroia	src/hw/audio/opus-1.2.1/NLSF_VQ_weights_laroia.c	/^void silk_NLSF_VQ_weights_laroia($/;"	f
silk_NLSF_decode	src/hw/audio/opus-1.2.1/NLSF_decode.c	/^void silk_NLSF_decode($/;"	f
silk_NLSF_del_dec_quant	src/hw/audio/opus-1.2.1/NLSF_del_dec_quant.c	/^opus_int32 silk_NLSF_del_dec_quant(                             \/* O    Returns RD value in Q25                     *\/$/;"	f
silk_NLSF_encode	src/hw/audio/opus-1.2.1/NLSF_encode.c	/^opus_int32 silk_NLSF_encode(                                    \/* O    Returns RD value in Q25                     *\/$/;"	f
silk_NLSF_interpolation_factor_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8 silk_NLSF_interpolation_factor_iCDF[ 5 ] = { 243, 221, 192, 181, 0 };$/;"	v
silk_NLSF_residual_dequant	src/hw/audio/opus-1.2.1/NLSF_decode.c	/^static OPUS_INLINE void silk_NLSF_residual_dequant(          \/* O    Returns RD value in Q30                     *\/$/;"	f	file:
silk_NLSF_stabilize	src/hw/audio/opus-1.2.1/NLSF_stabilize.c	/^void silk_NLSF_stabilize($/;"	f
silk_NLSF_unpack	src/hw/audio/opus-1.2.1/NLSF_unpack.c	/^void silk_NLSF_unpack($/;"	f
silk_NSHIFT_MUL_16_16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_NSHIFT_MUL_16_16(/;"	d
silk_NSHIFT_MUL_32_32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_NSHIFT_MUL_32_32(/;"	d
silk_NSQ	src/hw/audio/opus-1.2.1/main.h	/^#define silk_NSQ(/;"	d
silk_NSQ_c	src/hw/audio/opus-1.2.1/NSQ.c	/^void silk_NSQ_c$/;"	f
silk_NSQ_del_dec	src/hw/audio/opus-1.2.1/arm/NSQ_del_dec_arm.h	/^#define silk_NSQ_del_dec(/;"	d
silk_NSQ_del_dec	src/hw/audio/opus-1.2.1/main.h	/^#define silk_NSQ_del_dec(/;"	d
silk_NSQ_del_dec_c	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^void silk_NSQ_del_dec_c($/;"	f
silk_NSQ_noise_shape_feedback_loop	src/hw/audio/opus-1.2.1/NSQ.h	/^#define silk_NSQ_noise_shape_feedback_loop(/;"	d
silk_NSQ_noise_shape_feedback_loop_c	src/hw/audio/opus-1.2.1/NSQ.h	/^static OPUS_INLINE opus_int32 silk_NSQ_noise_shape_feedback_loop_c(const opus_int32 *data0, opus_int32 *data1, const opus_int16 *coef, opus_int order)$/;"	f
silk_NUM_STORES_MAX	src/hw/audio/opus-1.2.1/debug.h	/^#define silk_NUM_STORES_MAX /;"	d
silk_NUM_TIMERS_MAX	src/hw/audio/opus-1.2.1/debug.h	/^#define silk_NUM_TIMERS_MAX /;"	d
silk_NUM_TIMERS_MAX_TAG_LEN	src/hw/audio/opus-1.2.1/debug.h	/^#define silk_NUM_TIMERS_MAX_TAG_LEN /;"	d
silk_PLC	src/hw/audio/opus-1.2.1/PLC.c	/^void silk_PLC($/;"	f
silk_PLC_Reset	src/hw/audio/opus-1.2.1/PLC.c	/^void silk_PLC_Reset($/;"	f
silk_PLC_conceal	src/hw/audio/opus-1.2.1/PLC.c	/^static OPUS_INLINE void silk_PLC_conceal($/;"	f	file:
silk_PLC_energy	src/hw/audio/opus-1.2.1/PLC.c	/^static OPUS_INLINE void silk_PLC_energy(opus_int32 *energy1, opus_int *shift1, opus_int32 *energy2, opus_int *shift2,$/;"	f	file:
silk_PLC_glue_frames	src/hw/audio/opus-1.2.1/PLC.c	/^void silk_PLC_glue_frames($/;"	f
silk_PLC_struct	src/hw/audio/opus-1.2.1/structs.h	/^} silk_PLC_struct;$/;"	t	typeref:struct:__anon34
silk_PLC_update	src/hw/audio/opus-1.2.1/PLC.c	/^static OPUS_INLINE void silk_PLC_update($/;"	f	file:
silk_POS_SAT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_POS_SAT32$/;"	d
silk_POS_SAT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_POS_SAT32(opus_int64 a){$/;"	f
silk_POS_SAT32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_POS_SAT32(/;"	d
silk_P_Ana_calc_corr_st3	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^static void silk_P_Ana_calc_corr_st3($/;"	f	file:
silk_P_Ana_calc_energy_st3	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^static void silk_P_Ana_calc_energy_st3($/;"	f	file:
silk_PrintCount	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE silk_PrintCount(){$/;"	f
silk_Quantization_Offsets_Q10	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_int16  silk_Quantization_Offsets_Q10[ 2 ][ 2 ] = {$/;"	v
silk_QueryEncoder	src/hw/audio/opus-1.2.1/enc_API.c	/^static opus_int silk_QueryEncoder(                      \/* O    Returns error code                              *\/$/;"	f	file:
silk_RAND	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_RAND(/;"	d
silk_ROR32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^static OPUS_INLINE opus_int32 silk_ROR32( opus_int32 a32, opus_int rot )$/;"	f
silk_RSHIFT	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_RSHIFT(/;"	d
silk_RSHIFT16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_RSHIFT16$/;"	d
silk_RSHIFT16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int16 silk_RSHIFT16(opus_int16 a, opus_int32 shift){$/;"	f
silk_RSHIFT16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_RSHIFT16$/;"	d
silk_RSHIFT16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_RSHIFT16(/;"	d
silk_RSHIFT16_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int16 silk_RSHIFT16_(opus_int16 a, opus_int32 shift, char *file, int line){$/;"	f
silk_RSHIFT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_RSHIFT32$/;"	d
silk_RSHIFT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_RSHIFT32(opus_int32 a, opus_int32 shift){$/;"	f
silk_RSHIFT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_RSHIFT32(/;"	d
silk_RSHIFT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_RSHIFT32$/;"	d
silk_RSHIFT32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_RSHIFT32(/;"	d
silk_RSHIFT32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_RSHIFT32_(opus_int32 a, opus_int32 shift, char *file, int line){$/;"	f
silk_RSHIFT64	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_RSHIFT64$/;"	d
silk_RSHIFT64	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_RSHIFT64(opus_int64 a, opus_int64 shift){$/;"	f
silk_RSHIFT64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_RSHIFT64(/;"	d
silk_RSHIFT64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_RSHIFT64$/;"	d
silk_RSHIFT64	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_RSHIFT64(/;"	d
silk_RSHIFT64_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int64 silk_RSHIFT64_(opus_int64 a, opus_int64 shift, char *file, int line){$/;"	f
silk_RSHIFT8	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_RSHIFT8$/;"	d
silk_RSHIFT8	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int8 silk_RSHIFT8(opus_int8 a, opus_int32 shift){$/;"	f
silk_RSHIFT8	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_RSHIFT8$/;"	d
silk_RSHIFT8	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_RSHIFT8(/;"	d
silk_RSHIFT8_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int8 silk_RSHIFT8_(opus_int8 a, opus_int32 shift, char *file, int line){$/;"	f
silk_RSHIFT_ROUND	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_RSHIFT_ROUND$/;"	d
silk_RSHIFT_ROUND	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_RSHIFT_ROUND(opus_int32 a, opus_int32 shift){$/;"	f
silk_RSHIFT_ROUND	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_RSHIFT_ROUND(/;"	d
silk_RSHIFT_ROUND	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_RSHIFT_ROUND$/;"	d
silk_RSHIFT_ROUND	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_RSHIFT_ROUND(/;"	d
silk_RSHIFT_ROUND64	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_RSHIFT_ROUND64$/;"	d
silk_RSHIFT_ROUND64	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_RSHIFT_ROUND64(opus_int64 a, opus_int32 shift){$/;"	f
silk_RSHIFT_ROUND64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_RSHIFT_ROUND64(/;"	d
silk_RSHIFT_ROUND64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_RSHIFT_ROUND64$/;"	d
silk_RSHIFT_ROUND64	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_RSHIFT_ROUND64(/;"	d
silk_RSHIFT_ROUND64_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int64 silk_RSHIFT_ROUND64_(opus_int64 a, opus_int32 shift, char *file, int line){$/;"	f
silk_RSHIFT_ROUND_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_RSHIFT_ROUND_(opus_int32 a, opus_int32 shift, char *file, int line){$/;"	f
silk_RSHIFT_uint	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_RSHIFT_uint$/;"	d
silk_RSHIFT_uint	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_uint32 silk_RSHIFT_uint(opus_uint32 a, opus_int32 shift){$/;"	f
silk_RSHIFT_uint	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_RSHIFT_uint(/;"	d
silk_RSHIFT_uint	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_RSHIFT_uint$/;"	d
silk_RSHIFT_uint	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_RSHIFT_uint(/;"	d
silk_RSHIFT_uint_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_uint32 silk_RSHIFT_uint_(opus_uint32 a, opus_int32 shift, char *file, int line){$/;"	f
silk_RSHITF16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_RSHITF16(/;"	d
silk_RSHITF8	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_RSHITF8(/;"	d
silk_Resampler_1_2_COEFS	src/hw/audio/opus-1.2.1/resampler_rom.c	/^silk_DWORD_ALIGN const opus_int16 silk_Resampler_1_2_COEFS[ 2 + RESAMPLER_DOWN_ORDER_FIR1 \/ 2 ] = {$/;"	v
silk_Resampler_1_3_COEFS	src/hw/audio/opus-1.2.1/resampler_rom.c	/^silk_DWORD_ALIGN const opus_int16 silk_Resampler_1_3_COEFS[ 2 + RESAMPLER_DOWN_ORDER_FIR2 \/ 2 ] = {$/;"	v
silk_Resampler_1_4_COEFS	src/hw/audio/opus-1.2.1/resampler_rom.c	/^silk_DWORD_ALIGN const opus_int16 silk_Resampler_1_4_COEFS[ 2 + RESAMPLER_DOWN_ORDER_FIR2 \/ 2 ] = {$/;"	v
silk_Resampler_1_6_COEFS	src/hw/audio/opus-1.2.1/resampler_rom.c	/^silk_DWORD_ALIGN const opus_int16 silk_Resampler_1_6_COEFS[ 2 + RESAMPLER_DOWN_ORDER_FIR2 \/ 2 ] = {$/;"	v
silk_Resampler_2_3_COEFS	src/hw/audio/opus-1.2.1/resampler_rom.c	/^silk_DWORD_ALIGN const opus_int16 silk_Resampler_2_3_COEFS[ 2 + 2 * RESAMPLER_DOWN_ORDER_FIR0 \/ 2 ] = {$/;"	v
silk_Resampler_2_3_COEFS_LQ	src/hw/audio/opus-1.2.1/resampler_rom.c	/^silk_DWORD_ALIGN const opus_int16 silk_Resampler_2_3_COEFS_LQ[ 2 + 2 * 2 ] = {$/;"	v
silk_Resampler_3_4_COEFS	src/hw/audio/opus-1.2.1/resampler_rom.c	/^silk_DWORD_ALIGN const opus_int16 silk_Resampler_3_4_COEFS[ 2 + 3 * RESAMPLER_DOWN_ORDER_FIR0 \/ 2 ] = {$/;"	v
silk_SAT16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SAT16$/;"	d
silk_SAT16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int16 silk_SAT16(opus_int64 a){$/;"	f
silk_SAT16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SAT16(/;"	d
silk_SAT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SAT32$/;"	d
silk_SAT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SAT32(opus_int64 a){$/;"	f
silk_SAT32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SAT32(/;"	d
silk_SAT8	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SAT8$/;"	d
silk_SAT8	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int8 silk_SAT8(opus_int64 a){$/;"	f
silk_SAT8	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SAT8(/;"	d
silk_SMLABB	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMLABB$/;"	d
silk_SMLABB	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SMLABB(opus_int32 a32, opus_int32 b32, opus_int32 c32){$/;"	f
silk_SMLABB	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SMLABB(/;"	d
silk_SMLABB	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SMLABB$/;"	d
silk_SMLABB	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define silk_SMLABB(/;"	d
silk_SMLABB	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef silk_SMLABB$/;"	d
silk_SMLABB	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_SMLABB(/;"	d
silk_SMLABB_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SMLABB_(opus_int32 a32, opus_int32 b32, opus_int32 c32, char *file, int line){$/;"	f
silk_SMLABB_armv5e	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^static OPUS_INLINE opus_int32 silk_SMLABB_armv5e(opus_int32 a, opus_int32 b,$/;"	f
silk_SMLABB_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#define silk_SMLABB_ovflw /;"	d
silk_SMLABB_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMLABB_ovflw$/;"	d
silk_SMLABB_ovflw	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SMLABB_ovflw(/;"	d
silk_SMLABB_ovflw	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef  silk_SMLABB_ovflw$/;"	d
silk_SMLABB_ovflw	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SMLABB_ovflw(/;"	d
silk_SMLABT	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMLABT$/;"	d
silk_SMLABT	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SMLABT(opus_int32 a32, opus_int32 b32, opus_int32 c32){$/;"	f
silk_SMLABT	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SMLABT(/;"	d
silk_SMLABT	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SMLABT$/;"	d
silk_SMLABT	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define silk_SMLABT(/;"	d
silk_SMLABT	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef silk_SMLABT$/;"	d
silk_SMLABT	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_SMLABT(/;"	d
silk_SMLABT_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SMLABT_(opus_int32 a32, opus_int32 b32, opus_int32 c32, char *file, int line){$/;"	f
silk_SMLABT_armv5e	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^static OPUS_INLINE opus_int32 silk_SMLABT_armv5e(opus_int32 a, opus_int32 b,$/;"	f
silk_SMLABT_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#define silk_SMLABT_ovflw /;"	d
silk_SMLABT_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMLABT_ovflw$/;"	d
silk_SMLAL	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_SMLAL$/;"	d
silk_SMLAL	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_SMLAL(opus_int64 a64, opus_int32 b32, opus_int32 c32){$/;"	f
silk_SMLAL	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_SMLAL(/;"	d
silk_SMLALBB	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_SMLALBB$/;"	d
silk_SMLALBB	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_SMLALBB(opus_int64 a64, opus_int16 b16, opus_int16 c16){$/;"	f
silk_SMLALBB	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SMLALBB(/;"	d
silk_SMLATT	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_SMLATT$/;"	d
silk_SMLATT	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SMLATT(opus_int32 a32, opus_int32 b32, opus_int32 c32){$/;"	f
silk_SMLATT	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SMLATT(/;"	d
silk_SMLATT	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SMLATT$/;"	d
silk_SMLATT	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SMLATT(/;"	d
silk_SMLATT	src/hw/audio/opus-1.2.1/arm/SigProc_FIX_armv5e.h	/^#define silk_SMLATT(/;"	d
silk_SMLATT	src/hw/audio/opus-1.2.1/arm/SigProc_FIX_armv5e.h	/^#undef silk_SMLATT$/;"	d
silk_SMLATT_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SMLATT_(opus_int32 a32, opus_int32 b32, opus_int32 c32, char *file, int line){$/;"	f
silk_SMLATT_armv5e	src/hw/audio/opus-1.2.1/arm/SigProc_FIX_armv5e.h	/^static OPUS_INLINE opus_int32 silk_SMLATT_armv5e(opus_int32 a, opus_int32 b,$/;"	f
silk_SMLATT_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#define silk_SMLATT_ovflw /;"	d
silk_SMLATT_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMLATT_ovflw$/;"	d
silk_SMLAWB	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_SMLAWB$/;"	d
silk_SMLAWB	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SMLAWB(opus_int32 a32, opus_int32 b32, opus_int32 c32){$/;"	f
silk_SMLAWB	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SMLAWB(/;"	d
silk_SMLAWB	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SMLAWB$/;"	d
silk_SMLAWB	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#define silk_SMLAWB(/;"	d
silk_SMLAWB	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#undef silk_SMLAWB$/;"	d
silk_SMLAWB	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define silk_SMLAWB(/;"	d
silk_SMLAWB	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef silk_SMLAWB$/;"	d
silk_SMLAWB	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_SMLAWB(/;"	d
silk_SMLAWB_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SMLAWB_(opus_int32 a32, opus_int32 b32, opus_int32 c32, char *file, int line){$/;"	f
silk_SMLAWB_armv5e	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^static OPUS_INLINE opus_int32 silk_SMLAWB_armv5e(opus_int32 a, opus_int32 b,$/;"	f
silk_SMLAWB_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#define silk_SMLAWB_ovflw /;"	d
silk_SMLAWB_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMLAWB_ovflw$/;"	d
silk_SMLAWT	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMLAWT$/;"	d
silk_SMLAWT	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SMLAWT(opus_int32 a32, opus_int32 b32, opus_int32 c32){$/;"	f
silk_SMLAWT	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SMLAWT(/;"	d
silk_SMLAWT	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SMLAWT$/;"	d
silk_SMLAWT	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#define silk_SMLAWT(/;"	d
silk_SMLAWT	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#undef silk_SMLAWT$/;"	d
silk_SMLAWT	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define silk_SMLAWT(/;"	d
silk_SMLAWT	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef silk_SMLAWT$/;"	d
silk_SMLAWT	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_SMLAWT(/;"	d
silk_SMLAWT_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SMLAWT_(opus_int32 a32, opus_int32 b32, opus_int32 c32, char *file, int line){$/;"	f
silk_SMLAWT_armv5e	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^static OPUS_INLINE opus_int32 silk_SMLAWT_armv5e(opus_int32 a, opus_int32 b,$/;"	f
silk_SMLAWT_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#define silk_SMLAWT_ovflw /;"	d
silk_SMLAWT_ovflw	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMLAWT_ovflw$/;"	d
silk_SMLAWW	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_SMLAWW$/;"	d
silk_SMLAWW	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SMLAWW(opus_int32 a32, opus_int32 b32, opus_int32 c32){$/;"	f
silk_SMLAWW	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SMLAWW(/;"	d
silk_SMLAWW	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SMLAWW$/;"	d
silk_SMLAWW	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#define silk_SMLAWW(/;"	d
silk_SMLAWW	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#undef silk_SMLAWW$/;"	d
silk_SMLAWW	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_SMLAWW(/;"	d
silk_SMLAWW_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SMLAWW_(opus_int32 a32, opus_int32 b32, opus_int32 c32, char *file, int line){$/;"	f
silk_SMLAWW_armv4	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^static OPUS_INLINE opus_int32 silk_SMLAWW_armv4(opus_int32 a, opus_int32 b,$/;"	f
silk_SMMUL	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SMMUL(/;"	d
silk_SMULBB	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMULBB$/;"	d
silk_SMULBB	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SMULBB(opus_int32 a32, opus_int32 b32){$/;"	f
silk_SMULBB	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define silk_SMULBB(/;"	d
silk_SMULBB	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef silk_SMULBB$/;"	d
silk_SMULBB	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_SMULBB(/;"	d
silk_SMULBB_armv5e	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^static OPUS_INLINE opus_int32 silk_SMULBB_armv5e(opus_int32 a, opus_int32 b)$/;"	f
silk_SMULBT	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMULBT$/;"	d
silk_SMULBT	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SMULBT(opus_int32 a32, opus_int32 b32 ){$/;"	f
silk_SMULBT	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define silk_SMULBT(/;"	d
silk_SMULBT	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef silk_SMULBT$/;"	d
silk_SMULBT	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_SMULBT(/;"	d
silk_SMULBT_armv5e	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^static OPUS_INLINE opus_int32 silk_SMULBT_armv5e(opus_int32 a, opus_int32 b)$/;"	f
silk_SMULL	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMULL$/;"	d
silk_SMULL	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_SMULL(opus_int32 a32, opus_int32 b32){$/;"	f
silk_SMULL	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SMULL(/;"	d
silk_SMULL	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SMULL$/;"	d
silk_SMULL	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SMULL(/;"	d
silk_SMULL_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int64 silk_SMULL_(opus_int64 a64, opus_int64 b64, char *file, int line){$/;"	f
silk_SMULTT	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMULTT$/;"	d
silk_SMULTT	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SMULTT(opus_int32 a32, opus_int32 b32){$/;"	f
silk_SMULTT	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SMULTT(/;"	d
silk_SMULTT	src/hw/audio/opus-1.2.1/arm/SigProc_FIX_armv5e.h	/^#define silk_SMULTT(/;"	d
silk_SMULTT	src/hw/audio/opus-1.2.1/arm/SigProc_FIX_armv5e.h	/^#undef silk_SMULTT$/;"	d
silk_SMULTT_armv5e	src/hw/audio/opus-1.2.1/arm/SigProc_FIX_armv5e.h	/^static OPUS_INLINE opus_int32 silk_SMULTT_armv5e(opus_int32 a, opus_int32 b)$/;"	f
silk_SMULWB	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMULWB$/;"	d
silk_SMULWB	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SMULWB(opus_int32 a32, opus_int32 b32){$/;"	f
silk_SMULWB	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SMULWB(/;"	d
silk_SMULWB	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SMULWB$/;"	d
silk_SMULWB	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#define silk_SMULWB(/;"	d
silk_SMULWB	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#undef silk_SMULWB$/;"	d
silk_SMULWB	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define silk_SMULWB(/;"	d
silk_SMULWB	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef silk_SMULWB$/;"	d
silk_SMULWB	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_SMULWB(/;"	d
silk_SMULWB_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SMULWB_(opus_int32 a32, opus_int32 b32, char *file, int line){$/;"	f
silk_SMULWB_armv4	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^static OPUS_INLINE opus_int32 silk_SMULWB_armv4(opus_int32 a, opus_int16 b)$/;"	f
silk_SMULWB_armv5e	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^static OPUS_INLINE opus_int32 silk_SMULWB_armv5e(opus_int32 a, opus_int16 b)$/;"	f
silk_SMULWT	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SMULWT$/;"	d
silk_SMULWT	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SMULWT(opus_int32 a32, opus_int32 b32){$/;"	f
silk_SMULWT	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SMULWT(/;"	d
silk_SMULWT	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SMULWT$/;"	d
silk_SMULWT	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#define silk_SMULWT(/;"	d
silk_SMULWT	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#undef silk_SMULWT$/;"	d
silk_SMULWT	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define silk_SMULWT(/;"	d
silk_SMULWT	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef silk_SMULWT$/;"	d
silk_SMULWT	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_SMULWT(/;"	d
silk_SMULWT_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SMULWT_(opus_int32 a32, opus_int32 b32, char *file, int line){$/;"	f
silk_SMULWT_armv4	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^static OPUS_INLINE opus_int32 silk_SMULWT_armv4(opus_int32 a, opus_int32 b)$/;"	f
silk_SMULWT_armv5e	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^static OPUS_INLINE opus_int32 silk_SMULWT_armv5e(opus_int32 a, opus_int32 b)$/;"	f
silk_SMULWW	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_SMULWW$/;"	d
silk_SMULWW	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SMULWW(opus_int32 a32, opus_int32 b32){$/;"	f
silk_SMULWW	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SMULWW(/;"	d
silk_SMULWW	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SMULWW$/;"	d
silk_SMULWW	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#define silk_SMULWW(/;"	d
silk_SMULWW	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^#undef silk_SMULWW$/;"	d
silk_SMULWW	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_SMULWW(/;"	d
silk_SMULWW_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SMULWW_(opus_int32 a32, opus_int32 b32, char *file, int line){$/;"	f
silk_SMULWW_armv4	src/hw/audio/opus-1.2.1/arm/macros_armv4.h	/^static OPUS_INLINE opus_int32 silk_SMULWW_armv4(opus_int32 a, opus_int32 b)$/;"	f
silk_SNR_table_Q1	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_int16 silk_SNR_table_Q1[ TARGET_RATE_TAB_SZ ] = {$/;"	v
silk_SQRT_APPROX	src/hw/audio/opus-1.2.1/Inlines.h	/^static OPUS_INLINE opus_int32 silk_SQRT_APPROX( opus_int32 x )$/;"	f
silk_SUB16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_SUB16$/;"	d
silk_SUB16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int16 silk_SUB16(opus_int16 a, opus_int16 b){$/;"	f
silk_SUB16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SUB16(/;"	d
silk_SUB16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SUB16$/;"	d
silk_SUB16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SUB16(/;"	d
silk_SUB16_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int16 silk_SUB16_(opus_int16 a, opus_int16 b, char *file, int line){$/;"	f
silk_SUB32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_SUB32$/;"	d
silk_SUB32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SUB32(opus_int32 a, opus_int32 b){$/;"	f
silk_SUB32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SUB32(/;"	d
silk_SUB32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SUB32$/;"	d
silk_SUB32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SUB32(/;"	d
silk_SUB32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SUB32_(opus_int32 a, opus_int32 b, char *file, int line){$/;"	f
silk_SUB32_ovflw	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SUB32_ovflw(/;"	d
silk_SUB64	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_SUB64$/;"	d
silk_SUB64	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_SUB64(opus_int64 a, opus_int64 b){$/;"	f
silk_SUB64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SUB64(/;"	d
silk_SUB64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SUB64$/;"	d
silk_SUB64	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SUB64(/;"	d
silk_SUB64_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int64 silk_SUB64_(opus_int64 a, opus_int64 b, char *file, int line){$/;"	f
silk_SUB_LSHIFT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_SUB_LSHIFT32$/;"	d
silk_SUB_LSHIFT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SUB_LSHIFT32(opus_int32 a, opus_int32 b, opus_int32 shift){$/;"	f
silk_SUB_LSHIFT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SUB_LSHIFT32(/;"	d
silk_SUB_LSHIFT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SUB_LSHIFT32$/;"	d
silk_SUB_LSHIFT32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SUB_LSHIFT32(/;"	d
silk_SUB_LSHIFT32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SUB_LSHIFT32_(opus_int32 a, opus_int32 b, opus_int32 shift, char *file, int line){$/;"	f
silk_SUB_RSHIFT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_SUB_RSHIFT32$/;"	d
silk_SUB_RSHIFT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SUB_RSHIFT32(opus_int32 a, opus_int32 b, opus_int32 shift){$/;"	f
silk_SUB_RSHIFT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SUB_RSHIFT32(/;"	d
silk_SUB_RSHIFT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SUB_RSHIFT32$/;"	d
silk_SUB_RSHIFT32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SUB_RSHIFT32(/;"	d
silk_SUB_RSHIFT32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SUB_RSHIFT32_(opus_int32 a, opus_int32 b, opus_int32 shift, char *file, int line){$/;"	f
silk_SUB_SAT16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SUB_SAT16$/;"	d
silk_SUB_SAT16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int16 silk_SUB_SAT16( opus_int16 a16, opus_int16 b16 ) {$/;"	f
silk_SUB_SAT16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SUB_SAT16(/;"	d
silk_SUB_SAT16	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SUB_SAT16$/;"	d
silk_SUB_SAT16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SUB_SAT16(/;"	d
silk_SUB_SAT16_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int16 silk_SUB_SAT16_( opus_int16 a16, opus_int16 b16, char *file, int line ) {$/;"	f
silk_SUB_SAT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SUB_SAT32$/;"	d
silk_SUB_SAT32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_SUB_SAT32( opus_int32 a32, opus_int32 b32 ) {$/;"	f
silk_SUB_SAT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SUB_SAT32(/;"	d
silk_SUB_SAT32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SUB_SAT32$/;"	d
silk_SUB_SAT32	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#define silk_SUB_SAT32(/;"	d
silk_SUB_SAT32	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^#undef silk_SUB_SAT32$/;"	d
silk_SUB_SAT32	src/hw/audio/opus-1.2.1/macros.h	/^#define silk_SUB_SAT32(/;"	d
silk_SUB_SAT32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_SUB_SAT32_( opus_int32 a32, opus_int32 b32, char *file, int line ) {$/;"	f
silk_SUB_SAT32_armv5e	src/hw/audio/opus-1.2.1/arm/macros_armv5e.h	/^static OPUS_INLINE opus_int32 silk_SUB_SAT32_armv5e(opus_int32 a, opus_int32 b)$/;"	f
silk_SUB_SAT64	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_SUB_SAT64$/;"	d
silk_SUB_SAT64	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_SUB_SAT64( opus_int64 a64, opus_int64 b64 ) {$/;"	f
silk_SUB_SAT64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_SUB_SAT64(/;"	d
silk_SUB_SAT64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_SUB_SAT64$/;"	d
silk_SUB_SAT64	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_SUB_SAT64(/;"	d
silk_SUB_SAT64_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int64 silk_SUB_SAT64_( opus_int64 a64, opus_int64 b64, char *file, int line ) {$/;"	f
silk_SaveCount	src/hw/audio/opus-1.2.1/MacroCount.h	/^#define silk_SaveCount(/;"	d
silk_SaveCount	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_SaveCount(){$/;"	f
silk_SaveResetCount	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_SaveResetCount(){$/;"	f
silk_TOC_struct	src/hw/audio/opus-1.2.1/API.h	/^} silk_TOC_struct;$/;"	t	typeref:struct:__anon22
silk_TRUE	src/hw/audio/opus-1.2.1/typedef.h	/^#define silk_TRUE /;"	d
silk_TargetRate_table_MB	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_int32 silk_TargetRate_table_MB[ TARGET_RATE_TAB_SZ ] = {$/;"	v
silk_TargetRate_table_NB	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_int32 silk_TargetRate_table_NB[ TARGET_RATE_TAB_SZ ] = {$/;"	v
silk_TargetRate_table_WB	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_int32 silk_TargetRate_table_WB[ TARGET_RATE_TAB_SZ ] = {$/;"	v
silk_TimerSave	src/hw/audio/opus-1.2.1/debug.c	/^void silk_TimerSave(char *file_name)$/;"	f
silk_TimerSave	src/hw/audio/opus-1.2.1/debug.h	/^#define silk_TimerSave(/;"	d
silk_Timer_cnt	src/hw/audio/opus-1.2.1/debug.c	/^unsigned int  silk_Timer_cnt[silk_NUM_TIMERS_MAX];$/;"	v
silk_Timer_depth	src/hw/audio/opus-1.2.1/debug.c	/^opus_int64     silk_Timer_depth[silk_NUM_TIMERS_MAX];$/;"	v
silk_Timer_depth_ctr	src/hw/audio/opus-1.2.1/debug.c	/^int           silk_Timer_depth_ctr = 0;$/;"	v
silk_Timer_max	src/hw/audio/opus-1.2.1/debug.c	/^opus_int64     silk_Timer_max[silk_NUM_TIMERS_MAX];$/;"	v
silk_Timer_min	src/hw/audio/opus-1.2.1/debug.c	/^opus_int64     silk_Timer_min[silk_NUM_TIMERS_MAX];$/;"	v
silk_Timer_nTimers	src/hw/audio/opus-1.2.1/debug.c	/^int           silk_Timer_nTimers = 0;$/;"	v
silk_Timer_start	src/hw/audio/opus-1.2.1/debug.c	/^LARGE_INTEGER silk_Timer_start[silk_NUM_TIMERS_MAX];$/;"	v
silk_Timer_start	src/hw/audio/opus-1.2.1/debug.c	/^unsigned long silk_Timer_start[silk_NUM_TIMERS_MAX];$/;"	v
silk_Timer_sum	src/hw/audio/opus-1.2.1/debug.c	/^opus_int64     silk_Timer_sum[silk_NUM_TIMERS_MAX];$/;"	v
silk_Timer_tags	src/hw/audio/opus-1.2.1/debug.c	/^char          silk_Timer_tags[silk_NUM_TIMERS_MAX][silk_NUM_TIMERS_MAX_TAG_LEN];$/;"	v
silk_Transition_LP_A_Q28	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_int32 silk_Transition_LP_A_Q28[ TRANSITION_INT_NUM ][ TRANSITION_NA ] =$/;"	v
silk_Transition_LP_B_Q28	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_int32 silk_Transition_LP_B_Q28[ TRANSITION_INT_NUM ][ TRANSITION_NB ] =$/;"	v
silk_VAD_GetNoiseLevels	src/hw/audio/opus-1.2.1/VAD.c	/^void silk_VAD_GetNoiseLevels($/;"	f	file:
silk_VAD_GetSA_Q8	src/hw/audio/opus-1.2.1/main.h	/^#define silk_VAD_GetSA_Q8(/;"	d
silk_VAD_GetSA_Q8_c	src/hw/audio/opus-1.2.1/VAD.c	/^opus_int silk_VAD_GetSA_Q8_c(                                   \/* O    Return value, 0 if success                  *\/$/;"	f
silk_VAD_Init	src/hw/audio/opus-1.2.1/VAD.c	/^opus_int silk_VAD_Init(                                         \/* O    Return value, 0 if success                  *\/$/;"	f
silk_VAD_state	src/hw/audio/opus-1.2.1/structs.h	/^} silk_VAD_state;$/;"	t	typeref:struct:__anon27
silk_VQ_WMat_EC	src/hw/audio/opus-1.2.1/main.h	/^#define silk_VQ_WMat_EC(/;"	d
silk_VQ_WMat_EC_c	src/hw/audio/opus-1.2.1/VQ_WMat_EC.c	/^void silk_VQ_WMat_EC_c($/;"	f
silk_abs	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_abs(/;"	d
silk_abs_int	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_abs_int(/;"	d
silk_abs_int32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_abs_int32$/;"	d
silk_abs_int32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_abs_int32(opus_int32 a){$/;"	f
silk_abs_int32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_abs_int32(/;"	d
silk_abs_int32	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_abs_int32$/;"	d
silk_abs_int32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_abs_int32(/;"	d
silk_abs_int32_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int32 silk_abs_int32_(opus_int32 a, char *file, int line){$/;"	f
silk_abs_int64	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_abs_int64$/;"	d
silk_abs_int64	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_abs_int64(opus_int64 a){$/;"	f
silk_abs_int64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#define silk_abs_int64(/;"	d
silk_abs_int64	src/hw/audio/opus-1.2.1/MacroDebug.h	/^#undef silk_abs_int64$/;"	d
silk_abs_int64	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_abs_int64(/;"	d
silk_abs_int64_	src/hw/audio/opus-1.2.1/MacroDebug.h	/^static OPUS_INLINE opus_int64 silk_abs_int64_(opus_int64 a, char *file, int line){$/;"	f
silk_ana_filt_bank_1	src/hw/audio/opus-1.2.1/ana_filt_bank_1.c	/^void silk_ana_filt_bank_1($/;"	f
silk_apply_sine_window	src/hw/audio/opus-1.2.1/apply_sine_window_FIX.c	/^void silk_apply_sine_window($/;"	f
silk_assert	src/hw/audio/opus-1.2.1/typedef.h	/^#  define silk_assert(/;"	d
silk_autocorr	src/hw/audio/opus-1.2.1/autocorr_FIX.c	/^void silk_autocorr($/;"	f
silk_biquad_alt_stride1	src/hw/audio/opus-1.2.1/biquad_alt.c	/^void silk_biquad_alt_stride1($/;"	f
silk_biquad_alt_stride2	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_biquad_alt_stride2(/;"	d
silk_biquad_alt_stride2	src/hw/audio/opus-1.2.1/arm/biquad_alt_arm.h	/^#   define silk_biquad_alt_stride2(/;"	d
silk_biquad_alt_stride2_c	src/hw/audio/opus-1.2.1/biquad_alt.c	/^void silk_biquad_alt_stride2_c($/;"	f
silk_biquad_float	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static void silk_biquad_float($/;"	f	file:
silk_burg_modified	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_burg_modified(/;"	d
silk_burg_modified_c	src/hw/audio/opus-1.2.1/burg_modified_FIX.c	/^void silk_burg_modified_c($/;"	f
silk_bw_switch	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          silk_bw_switch;$/;"	m	struct:OpusEncoder	file:
silk_bwexpander	src/hw/audio/opus-1.2.1/bwexpander.c	/^void silk_bwexpander($/;"	f
silk_bwexpander_32	src/hw/audio/opus-1.2.1/bwexpander_32.c	/^void silk_bwexpander_32($/;"	f
silk_control_SNR	src/hw/audio/opus-1.2.1/control_SNR.c	/^opus_int silk_control_SNR($/;"	f
silk_control_audio_bandwidth	src/hw/audio/opus-1.2.1/control_audio_bandwidth.c	/^opus_int silk_control_audio_bandwidth($/;"	f
silk_control_encoder	src/hw/audio/opus-1.2.1/control_codec.c	/^opus_int silk_control_encoder($/;"	f
silk_corrMatrix_FIX	src/hw/audio/opus-1.2.1/corrMatrix_FIX.c	/^void silk_corrMatrix_FIX($/;"	f
silk_corrVector_FIX	src/hw/audio/opus-1.2.1/corrMatrix_FIX.c	/^void silk_corrVector_FIX($/;"	f
silk_debug_store_count	src/hw/audio/opus-1.2.1/debug.c	/^int silk_debug_store_count = 0;$/;"	v
silk_debug_store_fp	src/hw/audio/opus-1.2.1/debug.c	/^FILE *silk_debug_store_fp[ silk_NUM_STORES_MAX ];$/;"	v
silk_dec_map	src/hw/audio/opus-1.2.1/code_signs.c	/^#define silk_dec_map(/;"	d	file:
silk_dec_offset	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   int          silk_dec_offset;$/;"	m	struct:OpusDecoder	file:
silk_decode_core	src/hw/audio/opus-1.2.1/decode_core.c	/^void silk_decode_core($/;"	f
silk_decode_frame	src/hw/audio/opus-1.2.1/decode_frame.c	/^opus_int silk_decode_frame($/;"	f
silk_decode_indices	src/hw/audio/opus-1.2.1/decode_indices.c	/^void silk_decode_indices($/;"	f
silk_decode_parameters	src/hw/audio/opus-1.2.1/decode_parameters.c	/^void silk_decode_parameters($/;"	f
silk_decode_pitch	src/hw/audio/opus-1.2.1/decode_pitch.c	/^void silk_decode_pitch($/;"	f
silk_decode_pulses	src/hw/audio/opus-1.2.1/decode_pulses.c	/^void silk_decode_pulses($/;"	f
silk_decode_signs	src/hw/audio/opus-1.2.1/code_signs.c	/^void silk_decode_signs($/;"	f
silk_decoder	src/hw/audio/opus-1.2.1/dec_API.c	/^} silk_decoder;$/;"	t	typeref:struct:__anon18	file:
silk_decoder_control	src/hw/audio/opus-1.2.1/structs.h	/^} silk_decoder_control;$/;"	t	typeref:struct:__anon37
silk_decoder_set_fs	src/hw/audio/opus-1.2.1/decoder_set_fs.c	/^opus_int silk_decoder_set_fs($/;"	f
silk_decoder_state	src/hw/audio/opus-1.2.1/structs.h	/^} silk_decoder_state;$/;"	t	typeref:struct:__anon36
silk_delta_gain_iCDF	src/hw/audio/opus-1.2.1/tables_gain.c	/^const opus_uint8 silk_delta_gain_iCDF[ MAX_DELTA_GAIN_QUANT - MIN_DELTA_GAIN_QUANT + 1 ] = {$/;"	v
silk_enc_map	src/hw/audio/opus-1.2.1/code_signs.c	/^#define silk_enc_map(/;"	d	file:
silk_enc_offset	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          silk_enc_offset;$/;"	m	struct:OpusEncoder	file:
silk_encode_do_VAD_FIX	src/hw/audio/opus-1.2.1/encode_frame_FIX.c	/^void silk_encode_do_VAD_FIX($/;"	f
silk_encode_do_VAD_Fxx	src/hw/audio/opus-1.2.1/main_FIX.h	/^#define silk_encode_do_VAD_Fxx /;"	d
silk_encode_frame_FIX	src/hw/audio/opus-1.2.1/encode_frame_FIX.c	/^opus_int silk_encode_frame_FIX($/;"	f
silk_encode_frame_Fxx	src/hw/audio/opus-1.2.1/main_FIX.h	/^#define silk_encode_frame_Fxx /;"	d
silk_encode_indices	src/hw/audio/opus-1.2.1/encode_indices.c	/^void silk_encode_indices($/;"	f
silk_encode_pulses	src/hw/audio/opus-1.2.1/encode_pulses.c	/^void silk_encode_pulses($/;"	f
silk_encode_signs	src/hw/audio/opus-1.2.1/code_signs.c	/^void silk_encode_signs($/;"	f
silk_encoder	src/hw/audio/opus-1.2.1/structs_FIX.h	/^} silk_encoder;$/;"	t	typeref:struct:__anon15
silk_encoder_control_FIX	src/hw/audio/opus-1.2.1/structs_FIX.h	/^} silk_encoder_control_FIX;$/;"	t	typeref:struct:__anon14
silk_encoder_state	src/hw/audio/opus-1.2.1/structs.h	/^} silk_encoder_state;$/;"	t	typeref:struct:__anon33
silk_encoder_state_FIX	src/hw/audio/opus-1.2.1/structs_FIX.h	/^} silk_encoder_state_FIX;$/;"	t	typeref:struct:__anon13
silk_encoder_state_Fxx	src/hw/audio/opus-1.2.1/control_codec.c	/^#define silk_encoder_state_Fxx /;"	d	file:
silk_encoder_state_Fxx	src/hw/audio/opus-1.2.1/main_FIX.h	/^#define silk_encoder_state_Fxx /;"	d
silk_fatal	src/hw/audio/opus-1.2.1/typedef.h	/^#define silk_fatal(/;"	d
silk_find_LPC_FIX	src/hw/audio/opus-1.2.1/find_LPC_FIX.c	/^void silk_find_LPC_FIX($/;"	f
silk_find_LTP_FIX	src/hw/audio/opus-1.2.1/find_LTP_FIX.c	/^void silk_find_LTP_FIX($/;"	f
silk_find_pitch_lags_FIX	src/hw/audio/opus-1.2.1/find_pitch_lags_FIX.c	/^void silk_find_pitch_lags_FIX($/;"	f
silk_find_pred_coefs_FIX	src/hw/audio/opus-1.2.1/find_pred_coefs_FIX.c	/^void silk_find_pred_coefs_FIX($/;"	f
silk_float	src/hw/audio/opus-1.2.1/typedef.h	/^# define silk_float /;"	d
silk_float_MAX	src/hw/audio/opus-1.2.1/typedef.h	/^# define silk_float_MAX /;"	d
silk_gain_iCDF	src/hw/audio/opus-1.2.1/tables_gain.c	/^const opus_uint8 silk_gain_iCDF[ 3 ][ N_LEVELS_QGAIN \/ 8 ] =$/;"	v
silk_gains_ID	src/hw/audio/opus-1.2.1/gain_quant.c	/^opus_int32 silk_gains_ID(                                       \/* O    returns unique identifier of gains          *\/$/;"	f
silk_gains_dequant	src/hw/audio/opus-1.2.1/gain_quant.c	/^void silk_gains_dequant($/;"	f
silk_gains_quant	src/hw/audio/opus-1.2.1/gain_quant.c	/^void silk_gains_quant($/;"	f
silk_info	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   SILKInfo silk_info;$/;"	m	struct:OpusCustomEncoder	file:
silk_init_decoder	src/hw/audio/opus-1.2.1/init_decoder.c	/^opus_int silk_init_decoder($/;"	f
silk_init_encoder	src/hw/audio/opus-1.2.1/init_encoder.c	/^opus_int silk_init_encoder($/;"	f
silk_inner_prod16_aligned_64	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_inner_prod16_aligned_64(/;"	d
silk_inner_prod16_aligned_64_c	src/hw/audio/opus-1.2.1/vector_ops_FIX.c	/^opus_int64 silk_inner_prod16_aligned_64_c($/;"	f
silk_inner_prod_aligned	src/hw/audio/opus-1.2.1/vector_ops_FIX.c	/^opus_int32 silk_inner_prod_aligned($/;"	f
silk_inner_prod_aligned_scale	src/hw/audio/opus-1.2.1/inner_prod_aligned.c	/^opus_int32 silk_inner_prod_aligned_scale($/;"	f
silk_insertion_sort_decreasing_int16	src/hw/audio/opus-1.2.1/sort.c	/^void silk_insertion_sort_decreasing_int16($/;"	f
silk_insertion_sort_increasing	src/hw/audio/opus-1.2.1/sort.c	/^void silk_insertion_sort_increasing($/;"	f
silk_insertion_sort_increasing_all_values_int16	src/hw/audio/opus-1.2.1/sort.c	/^void silk_insertion_sort_increasing_all_values_int16($/;"	f
silk_int16_MAX	src/hw/audio/opus-1.2.1/typedef.h	/^#define silk_int16_MAX /;"	d
silk_int16_MIN	src/hw/audio/opus-1.2.1/typedef.h	/^#define silk_int16_MIN /;"	d
silk_int32_MAX	src/hw/audio/opus-1.2.1/typedef.h	/^#define silk_int32_MAX /;"	d
silk_int32_MIN	src/hw/audio/opus-1.2.1/typedef.h	/^#define silk_int32_MIN /;"	d
silk_int64_MAX	src/hw/audio/opus-1.2.1/typedef.h	/^#define silk_int64_MAX /;"	d
silk_int64_MIN	src/hw/audio/opus-1.2.1/typedef.h	/^#define silk_int64_MIN /;"	d
silk_int8_MAX	src/hw/audio/opus-1.2.1/typedef.h	/^#define silk_int8_MAX /;"	d
silk_int8_MIN	src/hw/audio/opus-1.2.1/typedef.h	/^#define silk_int8_MIN /;"	d
silk_interpolate	src/hw/audio/opus-1.2.1/interpolate.c	/^void silk_interpolate($/;"	f
silk_k2a	src/hw/audio/opus-1.2.1/k2a_FIX.c	/^void silk_k2a($/;"	f
silk_k2a_Q16	src/hw/audio/opus-1.2.1/k2a_Q16_FIX.c	/^void silk_k2a_Q16($/;"	f
silk_lin2log	src/hw/audio/opus-1.2.1/lin2log.c	/^opus_int32 silk_lin2log($/;"	f
silk_log2lin	src/hw/audio/opus-1.2.1/log2lin.c	/^opus_int32 silk_log2lin($/;"	f
silk_lsb_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8 silk_lsb_iCDF[ 2 ] = { 120, 0 };$/;"	v
silk_max	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_max$/;"	d
silk_max	src/hw/audio/opus-1.2.1/MacroCount.h	/^static silk_max(a, b){$/;"	f
silk_max	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_max(/;"	d
silk_max_16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_max_16$/;"	d
silk_max_16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int16 silk_max_16(opus_int16 a, opus_int16 b)$/;"	f
silk_max_16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^static OPUS_INLINE opus_int16 silk_max_16(opus_int16 a, opus_int16 b)$/;"	f
silk_max_32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_max_32$/;"	d
silk_max_32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_max_32(opus_int32 a, opus_int32 b)$/;"	f
silk_max_32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^static OPUS_INLINE opus_int32 silk_max_32(opus_int32 a, opus_int32 b)$/;"	f
silk_max_64	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_max_64$/;"	d
silk_max_64	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_max_64(opus_int64 a, opus_int64 b)$/;"	f
silk_max_64	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^static OPUS_INLINE opus_int64 silk_max_64(opus_int64 a, opus_int64 b)$/;"	f
silk_max_int	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_max_int$/;"	d
silk_max_int	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int silk_max_int(opus_int a, opus_int b)$/;"	f
silk_max_int	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^static OPUS_INLINE opus_int silk_max_int(opus_int a, opus_int b)$/;"	f
silk_max_pulses_table	src/hw/audio/opus-1.2.1/tables_pulses_per_block.c	/^const opus_uint8 silk_max_pulses_table[ 4 ] = {$/;"	v
silk_memcpy	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_memcpy(/;"	d
silk_memmove	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_memmove(/;"	d
silk_memset	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_memset(/;"	d
silk_min	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_min$/;"	d
silk_min	src/hw/audio/opus-1.2.1/MacroCount.h	/^static silk_min(a, b){$/;"	f
silk_min	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_min(/;"	d
silk_min_16	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_min_16$/;"	d
silk_min_16	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int16 silk_min_16(opus_int16 a, opus_int16 b)$/;"	f
silk_min_16	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^static OPUS_INLINE opus_int16 silk_min_16(opus_int16 a, opus_int16 b)$/;"	f
silk_min_32	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_min_32$/;"	d
silk_min_32	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int32 silk_min_32(opus_int32 a, opus_int32 b)$/;"	f
silk_min_32	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^static OPUS_INLINE opus_int32 silk_min_32(opus_int32 a, opus_int32 b)$/;"	f
silk_min_64	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_min_64$/;"	d
silk_min_64	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int64 silk_min_64(opus_int64 a, opus_int64 b)$/;"	f
silk_min_64	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^static OPUS_INLINE opus_int64 silk_min_64(opus_int64 a, opus_int64 b)$/;"	f
silk_min_int	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef    silk_min_int$/;"	d
silk_min_int	src/hw/audio/opus-1.2.1/MacroCount.h	/^static OPUS_INLINE opus_int silk_min_int(opus_int a, opus_int b)$/;"	f
silk_min_int	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^static OPUS_INLINE opus_int silk_min_int(opus_int a, opus_int b)$/;"	f
silk_mode	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    silk_EncControlStruct silk_mode;$/;"	m	struct:OpusEncoder	file:
silk_nb_cbk_searchs_stage3	src/hw/audio/opus-1.2.1/pitch_est_tables.c	/^const opus_int8 silk_nb_cbk_searchs_stage3[ SILK_PE_MAX_COMPLEX + 1 ] =$/;"	v
silk_noise_shape_analysis_FIX	src/hw/audio/opus-1.2.1/noise_shape_analysis_FIX.c	/^void silk_noise_shape_analysis_FIX($/;"	f
silk_noise_shape_quantizer	src/hw/audio/opus-1.2.1/NSQ.c	/^void silk_noise_shape_quantizer($/;"	f	file:
silk_noise_shape_quantizer_del_dec	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^static OPUS_INLINE void silk_noise_shape_quantizer_del_dec($/;"	f	file:
silk_noise_shape_quantizer_short_prediction	src/hw/audio/opus-1.2.1/NSQ.h	/^#define silk_noise_shape_quantizer_short_prediction(/;"	d
silk_noise_shape_quantizer_short_prediction_c	src/hw/audio/opus-1.2.1/NSQ.h	/^static OPUS_INLINE opus_int32 silk_noise_shape_quantizer_short_prediction_c(const opus_int32 *buf32, const opus_int16 *coef16, opus_int order)$/;"	f
silk_nsq_del_dec_scale_states	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^static OPUS_INLINE void silk_nsq_del_dec_scale_states($/;"	f	file:
silk_nsq_scale_states	src/hw/audio/opus-1.2.1/NSQ.c	/^static OPUS_INLINE void silk_nsq_scale_states($/;"	f	file:
silk_nsq_state	src/hw/audio/opus-1.2.1/structs.h	/^} silk_nsq_state;$/;"	t	typeref:struct:__anon26
silk_pe_stage3_vals	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^typedef opus_int32 silk_pe_stage3_vals[ PE_NB_STAGE3_LAGS ];$/;"	t	file:
silk_pitch_analysis_core	src/hw/audio/opus-1.2.1/pitch_analysis_core_FIX.c	/^opus_int silk_pitch_analysis_core(                  \/* O    Voicing estimate: 0 voiced, 1 unvoiced                      *\/$/;"	f
silk_pitch_contour_10_ms_NB_iCDF	src/hw/audio/opus-1.2.1/tables_pitch_lag.c	/^const opus_uint8 silk_pitch_contour_10_ms_NB_iCDF[3] = {$/;"	v
silk_pitch_contour_10_ms_iCDF	src/hw/audio/opus-1.2.1/tables_pitch_lag.c	/^const opus_uint8 silk_pitch_contour_10_ms_iCDF[12] = {$/;"	v
silk_pitch_contour_NB_iCDF	src/hw/audio/opus-1.2.1/tables_pitch_lag.c	/^const opus_uint8 silk_pitch_contour_NB_iCDF[11] = {$/;"	v
silk_pitch_contour_iCDF	src/hw/audio/opus-1.2.1/tables_pitch_lag.c	/^const opus_uint8 silk_pitch_contour_iCDF[34] = {$/;"	v
silk_pitch_delta_iCDF	src/hw/audio/opus-1.2.1/tables_pitch_lag.c	/^const opus_uint8 silk_pitch_delta_iCDF[21] = {$/;"	v
silk_pitch_lag_iCDF	src/hw/audio/opus-1.2.1/tables_pitch_lag.c	/^const opus_uint8 silk_pitch_lag_iCDF[ 2 * ( PITCH_EST_MAX_LAG_MS - PITCH_EST_MIN_LAG_MS ) ] = {$/;"	v
silk_process_NLSFs	src/hw/audio/opus-1.2.1/process_NLSFs.c	/^void silk_process_NLSFs($/;"	f
silk_process_gains_FIX	src/hw/audio/opus-1.2.1/process_gains_FIX.c	/^void silk_process_gains_FIX($/;"	f
silk_pulses_per_block_BITS_Q5	src/hw/audio/opus-1.2.1/tables_pulses_per_block.c	/^const opus_uint8 silk_pulses_per_block_BITS_Q5[ 9 ][ 18 ] = {$/;"	v
silk_pulses_per_block_iCDF	src/hw/audio/opus-1.2.1/tables_pulses_per_block.c	/^const opus_uint8 silk_pulses_per_block_iCDF[ 10 ][ 18 ] = {$/;"	v
silk_quant_LTP_gains	src/hw/audio/opus-1.2.1/quant_LTP_gains.c	/^void silk_quant_LTP_gains($/;"	f
silk_rate_levels_BITS_Q5	src/hw/audio/opus-1.2.1/tables_pulses_per_block.c	/^const opus_uint8 silk_rate_levels_BITS_Q5[ 2 ][ 9 ] =$/;"	v
silk_rate_levels_iCDF	src/hw/audio/opus-1.2.1/tables_pulses_per_block.c	/^const opus_uint8 silk_rate_levels_iCDF[ 2 ][ 9 ] =$/;"	v
silk_regularize_correlations_FIX	src/hw/audio/opus-1.2.1/regularize_correlations_FIX.c	/^void silk_regularize_correlations_FIX($/;"	f
silk_resampler	src/hw/audio/opus-1.2.1/resampler.c	/^opus_int silk_resampler($/;"	f
silk_resampler_down2	src/hw/audio/opus-1.2.1/resampler_down2.c	/^void silk_resampler_down2($/;"	f
silk_resampler_down2_0	src/hw/audio/opus-1.2.1/resampler_rom.h	/^static const opus_int16 silk_resampler_down2_0 = 9872;$/;"	v
silk_resampler_down2_1	src/hw/audio/opus-1.2.1/resampler_rom.h	/^static const opus_int16 silk_resampler_down2_1 = 39809 - 65536;$/;"	v
silk_resampler_down2_3	src/hw/audio/opus-1.2.1/resampler_down2_3.c	/^void silk_resampler_down2_3($/;"	f
silk_resampler_down2_hp	src/hw/audio/opus-1.2.1/analysis.c	/^static opus_val32 silk_resampler_down2_hp($/;"	f	file:
silk_resampler_frac_FIR_12	src/hw/audio/opus-1.2.1/resampler_rom.c	/^silk_DWORD_ALIGN const opus_int16 silk_resampler_frac_FIR_12[ 12 ][ RESAMPLER_ORDER_FIR_12 \/ 2 ] = {$/;"	v
silk_resampler_init	src/hw/audio/opus-1.2.1/resampler.c	/^opus_int silk_resampler_init($/;"	f
silk_resampler_private_AR2	src/hw/audio/opus-1.2.1/resampler_private_AR2.c	/^void silk_resampler_private_AR2($/;"	f
silk_resampler_private_IIR_FIR	src/hw/audio/opus-1.2.1/resampler_private_IIR_FIR.c	/^void silk_resampler_private_IIR_FIR($/;"	f
silk_resampler_private_IIR_FIR_INTERPOL	src/hw/audio/opus-1.2.1/resampler_private_IIR_FIR.c	/^static OPUS_INLINE opus_int16 *silk_resampler_private_IIR_FIR_INTERPOL($/;"	f	file:
silk_resampler_private_down_FIR	src/hw/audio/opus-1.2.1/resampler_private_down_FIR.c	/^void silk_resampler_private_down_FIR($/;"	f
silk_resampler_private_down_FIR_INTERPOL	src/hw/audio/opus-1.2.1/resampler_private_down_FIR.c	/^static OPUS_INLINE opus_int16 *silk_resampler_private_down_FIR_INTERPOL($/;"	f	file:
silk_resampler_private_up2_HQ	src/hw/audio/opus-1.2.1/resampler_private_up2_HQ.c	/^void silk_resampler_private_up2_HQ($/;"	f
silk_resampler_private_up2_HQ_wrapper	src/hw/audio/opus-1.2.1/resampler_private_up2_HQ.c	/^void silk_resampler_private_up2_HQ_wrapper($/;"	f
silk_resampler_state_struct	src/hw/audio/opus-1.2.1/resampler_structs.h	/^} silk_resampler_state_struct;$/;"	t	typeref:struct:_silk_resampler_state_struct
silk_resampler_up2_hq_0	src/hw/audio/opus-1.2.1/resampler_rom.h	/^static const opus_int16 silk_resampler_up2_hq_0[ 3 ] = { 1746, 14986, 39083 - 65536 };$/;"	v
silk_resampler_up2_hq_1	src/hw/audio/opus-1.2.1/resampler_rom.h	/^static const opus_int16 silk_resampler_up2_hq_1[ 3 ] = { 6854, 25769, 55542 - 65536 };$/;"	v
silk_residual_energy16_covar_FIX	src/hw/audio/opus-1.2.1/residual_energy16_FIX.c	/^opus_int32 silk_residual_energy16_covar_FIX($/;"	f
silk_residual_energy_FIX	src/hw/audio/opus-1.2.1/residual_energy_FIX.c	/^void silk_residual_energy_FIX($/;"	f
silk_scale_copy_vector16	src/hw/audio/opus-1.2.1/vector_ops_FIX.c	/^void silk_scale_copy_vector16($/;"	f
silk_scale_vector32_Q26_lshift_18	src/hw/audio/opus-1.2.1/vector_ops_FIX.c	/^void silk_scale_vector32_Q26_lshift_18($/;"	f
silk_schur	src/hw/audio/opus-1.2.1/schur_FIX.c	/^opus_int32 silk_schur(                              \/* O    Returns residual energy                                     *\/$/;"	f
silk_schur64	src/hw/audio/opus-1.2.1/schur64_FIX.c	/^opus_int32 silk_schur64(                            \/* O    returns residual energy                                     *\/$/;"	f
silk_setup_LBRR	src/hw/audio/opus-1.2.1/control_codec.c	/^static OPUS_INLINE opus_int silk_setup_LBRR($/;"	f	file:
silk_setup_complexity	src/hw/audio/opus-1.2.1/control_codec.c	/^static opus_int silk_setup_complexity($/;"	f	file:
silk_setup_fs	src/hw/audio/opus-1.2.1/control_codec.c	/^static opus_int silk_setup_fs($/;"	f	file:
silk_setup_resamplers	src/hw/audio/opus-1.2.1/control_codec.c	/^static opus_int silk_setup_resamplers($/;"	f	file:
silk_shape_state_FIX	src/hw/audio/opus-1.2.1/structs_FIX.h	/^} silk_shape_state_FIX;$/;"	t	typeref:struct:__anon12
silk_shell_code_table0	src/hw/audio/opus-1.2.1/tables_pulses_per_block.c	/^const opus_uint8 silk_shell_code_table0[ 152 ] = {$/;"	v
silk_shell_code_table1	src/hw/audio/opus-1.2.1/tables_pulses_per_block.c	/^const opus_uint8 silk_shell_code_table1[ 152 ] = {$/;"	v
silk_shell_code_table2	src/hw/audio/opus-1.2.1/tables_pulses_per_block.c	/^const opus_uint8 silk_shell_code_table2[ 152 ] = {$/;"	v
silk_shell_code_table3	src/hw/audio/opus-1.2.1/tables_pulses_per_block.c	/^const opus_uint8 silk_shell_code_table3[ 152 ] = {$/;"	v
silk_shell_code_table_offsets	src/hw/audio/opus-1.2.1/tables_pulses_per_block.c	/^const opus_uint8 silk_shell_code_table_offsets[ 17 ] = {$/;"	v
silk_shell_decoder	src/hw/audio/opus-1.2.1/shell_coder.c	/^void silk_shell_decoder($/;"	f
silk_shell_encoder	src/hw/audio/opus-1.2.1/shell_coder.c	/^void silk_shell_encoder($/;"	f
silk_short_prediction_create_arch_coef	src/hw/audio/opus-1.2.1/NSQ.h	/^#undef silk_short_prediction_create_arch_coef$/;"	d
silk_sigm_Q15	src/hw/audio/opus-1.2.1/sigm_Q15.c	/^opus_int silk_sigm_Q15($/;"	f
silk_sign	src/hw/audio/opus-1.2.1/MacroCount.h	/^#undef silk_sign$/;"	d
silk_sign	src/hw/audio/opus-1.2.1/MacroCount.h	/^static silk_sign(a){$/;"	f
silk_sign	src/hw/audio/opus-1.2.1/SigProc_FIX.h	/^#define silk_sign(/;"	d
silk_sign_iCDF	src/hw/audio/opus-1.2.1/tables_pulses_per_block.c	/^const opus_uint8 silk_sign_iCDF[ 42 ] = {$/;"	v
silk_stereo_LR_to_MS	src/hw/audio/opus-1.2.1/stereo_LR_to_MS.c	/^void silk_stereo_LR_to_MS($/;"	f
silk_stereo_MS_to_LR	src/hw/audio/opus-1.2.1/stereo_MS_to_LR.c	/^void silk_stereo_MS_to_LR($/;"	f
silk_stereo_decode_mid_only	src/hw/audio/opus-1.2.1/stereo_decode_pred.c	/^void silk_stereo_decode_mid_only($/;"	f
silk_stereo_decode_pred	src/hw/audio/opus-1.2.1/stereo_decode_pred.c	/^void silk_stereo_decode_pred($/;"	f
silk_stereo_encode_mid_only	src/hw/audio/opus-1.2.1/stereo_encode_pred.c	/^void silk_stereo_encode_mid_only($/;"	f
silk_stereo_encode_pred	src/hw/audio/opus-1.2.1/stereo_encode_pred.c	/^void silk_stereo_encode_pred($/;"	f
silk_stereo_find_predictor	src/hw/audio/opus-1.2.1/stereo_find_predictor.c	/^opus_int32 silk_stereo_find_predictor(                          \/* O    Returns predictor in Q13                    *\/$/;"	f
silk_stereo_only_code_mid_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8  silk_stereo_only_code_mid_iCDF[ 2 ] = { 64, 0 };$/;"	v
silk_stereo_pred_joint_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8  silk_stereo_pred_joint_iCDF[ 25 ] = {$/;"	v
silk_stereo_pred_quant_Q13	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_int16 silk_stereo_pred_quant_Q13[ STEREO_QUANT_TAB_SIZE ] = {$/;"	v
silk_stereo_quant_pred	src/hw/audio/opus-1.2.1/stereo_quant_pred.c	/^void silk_stereo_quant_pred($/;"	f
silk_sum_sqr_shift	src/hw/audio/opus-1.2.1/sum_sqr_shift.c	/^void silk_sum_sqr_shift($/;"	f
silk_type_offset_VAD_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8 silk_type_offset_VAD_iCDF[ 4 ] = {$/;"	v
silk_type_offset_no_VAD_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8 silk_type_offset_no_VAD_iCDF[ 2 ] = {$/;"	v
silk_uint8_MAX	src/hw/audio/opus-1.2.1/typedef.h	/^#define silk_uint8_MAX /;"	d
silk_uniform3_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8 silk_uniform3_iCDF[ 3 ] = { 171, 85, 0 };$/;"	v
silk_uniform4_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8 silk_uniform4_iCDF[ 4 ] = { 192, 128, 64, 0 };$/;"	v
silk_uniform5_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8 silk_uniform5_iCDF[ 5 ] = { 205, 154, 102, 51, 0 };$/;"	v
silk_uniform6_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8 silk_uniform6_iCDF[ 6 ] = { 213, 171, 128, 85, 43, 0 };$/;"	v
silk_uniform8_iCDF	src/hw/audio/opus-1.2.1/tables_other.c	/^const opus_uint8 silk_uniform8_iCDF[ 8 ] = { 224, 192, 160, 128, 96, 64, 32, 0 };$/;"	v
silk_warped_autocorrelation_FIX	src/hw/audio/opus-1.2.1/arm/warped_autocorrelation_FIX_arm.h	/^#    define silk_warped_autocorrelation_FIX(/;"	d
silk_warped_autocorrelation_FIX	src/hw/audio/opus-1.2.1/arm/warped_autocorrelation_FIX_arm.h	/^#   define silk_warped_autocorrelation_FIX(/;"	d
silk_warped_autocorrelation_FIX	src/hw/audio/opus-1.2.1/main_FIX.h	/^#define silk_warped_autocorrelation_FIX(/;"	d
silk_warped_autocorrelation_FIX_c	src/hw/audio/opus-1.2.1/warped_autocorrelation_FIX.c	/^void silk_warped_autocorrelation_FIX_c($/;"	f
size	src/hw/audio/opus-1.2.1/modes.h	/^   int size;$/;"	m	struct:__anon39
skip_plc	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int skip_plc;$/;"	m	struct:OpusCustomDecoder	file:
small_energy_icdf	src/hw/audio/opus-1.2.1/quant_bands.c	/^static const unsigned char small_energy_icdf[3]={2,1,0};$/;"	v	file:
smooth_fade	src/hw/audio/opus-1.2.1/opus_decoder.c	/^static void smooth_fade(const opus_val16 *in1, const opus_val16 *in2,$/;"	f	file:
smoothed_width	src/hw/audio/opus-1.2.1/opus_encoder.c	/^   opus_val16 smoothed_width;$/;"	m	struct:__anon25	file:
smth_width_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   smth_width_Q14;$/;"	m	struct:__anon30
softclip_mem	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   opus_val16   softclip_mem[2];$/;"	m	struct:OpusDecoder	file:
speaker_buffer	src/hw/audio/codec2.c	/^i16 *speaker_buffer;$/;"	v
speaker_buffer	src/hw/old-codec.c	/^i16 *speaker_buffer;$/;"	v
spec_avg	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_val16 spec_avg;$/;"	m	struct:OpusCustomEncoder	file:
special_hybrid_folding	src/hw/audio/opus-1.2.1/bands.c	/^static void special_hybrid_folding(const CELTMode *m, celt_norm *norm, celt_norm *norm2, int start, int M, int dual_stereo)$/;"	f	file:
speech_activity_Q8	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     speech_activity_Q8;                \/* Speech activity                                                  *\/$/;"	m	struct:__anon33
speech_confidence	src/hw/audio/opus-1.2.1/analysis.h	/^   float speech_confidence;$/;"	m	struct:__anon41
speech_confidence_count	src/hw/audio/opus-1.2.1/analysis.h	/^   int speech_confidence_count;$/;"	m	struct:__anon41
speech_in	src/hw/audio/codec2_pdm_mic.c	/^i16 *speech_in;$/;"	v
speech_incoming	src/hw/audio/codec2.c	/^i16 *speech_incoming;$/;"	v
speech_incoming	src/hw/old-codec.c	/^i16 *speech_incoming;$/;"	v
speech_out	src/hw/audio/codec2_pdm_mic.c	/^i16 *speech_out;$/;"	v
speech_outgoing	src/hw/audio/codec2.c	/^i16 *speech_outgoing;$/;"	v
speech_outgoing	src/hw/old-codec.c	/^i16 *speech_outgoing;$/;"	v
split_ctx	src/hw/audio/opus-1.2.1/bands.c	/^struct split_ctx {$/;"	s	file:
spread	src/hw/audio/opus-1.2.1/bands.c	/^   int spread;$/;"	m	struct:band_ctx	file:
spread_decision	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int spread_decision;$/;"	m	struct:OpusCustomEncoder	file:
spread_icdf	src/hw/audio/opus-1.2.1/celt.h	/^static const unsigned char spread_icdf[4] = {25, 23, 2, 0};$/;"	v
spreading_decision	src/hw/audio/opus-1.2.1/bands.c	/^int spreading_decision(const CELTMode *m, const celt_norm *X, int *average,$/;"	f
start	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int start, end;$/;"	m	struct:OpusCustomDecoder	file:
start	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int start, end;$/;"	m	struct:OpusCustomEncoder	file:
start_listening	src/hw/audio/codec2.c	/^int start_listening( void ) {$/;"	f
start_listening	src/hw/old-codec.c	/^int start_listening( void ) {$/;"	f
start_tx	src/hw/audio/codec2.c	/^int start_tx( void ) {$/;"	f
start_tx	src/hw/old-codec.c	/^int start_tx( void ) {$/;"	f
state	src/hw/uart.c	/^  enum   input_state state;$/;"	m	struct:uart_text	typeref:enum:uart_text::input_state	file:
state	src/module/modem.c	/^} state;$/;"	v	typeref:enum:state_type	file:
state	src/module/sdk_modem.c	/^} state;$/;"	v	typeref:enum:state_type	file:
state	src/module/ui.c	/^} state;$/;"	v	typeref:enum:state_type	file:
state2str	src/main.c	/^static char *state2str(enum state_type new_state)$/;"	f	file:
state2str	src/module/sdk_modem.c	/^static char *state2str(enum state_type state)$/;"	f	file:
state_Fxx	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    silk_encoder_state_FIX      state_Fxx[ ENCODER_NUM_CHANNELS ];$/;"	m	struct:__anon15
state_set	src/main.c	/^static void state_set(enum state_type new_state)$/;"	f	file:
state_set	src/module/sdk_modem.c	/^static void state_set(enum state_type new_state)$/;"	f	file:
state_type	src/module/modem.c	/^static enum state_type {$/;"	g	file:
state_type	src/module/sdk_modem.c	/^static enum state_type {$/;"	g	file:
state_type	src/module/ui.c	/^static enum state_type {$/;"	g	file:
static_mode_list	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const CELTMode * const static_mode_list[TOTAL_MODES] = {$/;"	v
static_mode_list	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const CELTMode * const static_mode_list[TOTAL_MODES] = {$/;"	v
static_modem_data_get	src/module/sdk_modem.c	/^static int static_modem_data_get(void)$/;"	f	file:
static_modem_data_requested	src/module/sdk_modem.c	/^static bool static_modem_data_requested(enum app_module_data_type *data_list,$/;"	f	file:
station_rx	src/module/radio.c	/^struct k_msgq *station_rx = &msgq_station_rx;$/;"	v	typeref:struct:k_msgq
status	src/hw/uart.c	/^    enum esp32_state status;$/;"	m	union:uart_message::__anon46	typeref:enum:uart_message::__anon46::esp32_state	file:
std	src/hw/audio/opus-1.2.1/analysis.h	/^   float std[9];$/;"	m	struct:__anon41
std_feature_bias	src/hw/audio/opus-1.2.1/analysis.c	/^static const float std_feature_bias[9] = {$/;"	v	file:
stereoWidth_Q14	src/hw/audio/opus-1.2.1/control.h	/^    opus_int stereoWidth_Q14;$/;"	m	struct:__anon8
stereo_analysis	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static int stereo_analysis(const CELTMode *m, const celt_norm *X,$/;"	f	file:
stereo_dec_state	src/hw/audio/opus-1.2.1/structs.h	/^} stereo_dec_state;$/;"	t	typeref:struct:__anon31
stereo_enc_state	src/hw/audio/opus-1.2.1/structs.h	/^} stereo_enc_state;$/;"	t	typeref:struct:__anon30
stereo_fade	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static void stereo_fade(const opus_val16 *in, opus_val16 *out, opus_val16 g1, opus_val16 g2,$/;"	f	file:
stereo_itheta	src/hw/audio/opus-1.2.1/vq.c	/^int stereo_itheta(const celt_norm *X, const celt_norm *Y, int stereo, int N, int arch)$/;"	f
stereo_merge	src/hw/audio/opus-1.2.1/bands.c	/^static void stereo_merge(celt_norm * OPUS_RESTRICT X, celt_norm * OPUS_RESTRICT Y, opus_val16 mid, int N, int arch)$/;"	f	file:
stereo_music_bandwidth_thresholds	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static const opus_int32 stereo_music_bandwidth_thresholds[8] = {$/;"	v	file:
stereo_music_threshold	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static const opus_int32 stereo_music_threshold = 24000;$/;"	v	file:
stereo_saving	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_val16 stereo_saving;$/;"	m	struct:OpusCustomEncoder	file:
stereo_split	src/hw/audio/opus-1.2.1/bands.c	/^static void stereo_split(celt_norm * OPUS_RESTRICT X, celt_norm * OPUS_RESTRICT Y, int N)$/;"	f	file:
stereo_voice_bandwidth_thresholds	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static const opus_int32 stereo_voice_bandwidth_thresholds[8] = {$/;"	v	file:
stereo_voice_threshold	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static const opus_int32 stereo_voice_threshold = 24000;$/;"	v	file:
stop_listening	src/hw/audio/codec2.c	/^int stop_listening( void ) {$/;"	f
stop_listening	src/hw/audio/codec2_pdm_mic.c	/^int stop_listening( void ) {$/;"	f
stop_listening	src/hw/old-codec.c	/^int stop_listening( void ) {$/;"	f
stop_tx	src/hw/audio/codec2.c	/^int stop_tx( void ) {$/;"	f
stop_tx	src/hw/old-codec.c	/^int stop_tx( void ) {$/;"	f
storage	src/hw/audio/opus-1.2.1/entcode.h	/^   opus_uint32    storage;$/;"	m	struct:ec_ctx
stream_channels	src/hw/audio/opus-1.2.1/celt_decoder.c	/^   int stream_channels;$/;"	m	struct:OpusCustomDecoder	file:
stream_channels	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int stream_channels;$/;"	m	struct:OpusCustomEncoder	file:
stream_channels	src/hw/audio/opus-1.2.1/opus_decoder.c	/^   int          stream_channels;$/;"	m	struct:OpusDecoder	file:
stream_channels	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          stream_channels;$/;"	m	struct:OpusEncoder	file:
style_username	src/module/ui.c	/^static const lv_style_t *style_username;$/;"	v	file:
sub_state_set	src/main.c	/^static void sub_state_set(enum sub_state_type new_state)$/;"	f	file:
subfr_length	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     subfr_length;                      \/* Subframe length (samples)                                        *\/$/;"	m	struct:__anon33
subfr_length	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    subfr_length;                       \/* Subframe length (samples)                                        *\/$/;"	m	struct:__anon36
subfr_length	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                    subfr_length;$/;"	m	struct:__anon34
submit_cell_update	src/module/modem.c	/^static void submit_cell_update( u32 cell_id, u32 tac )  {$/;"	f	file:
submit_edrx_update	src/module/modem.c	/^static void submit_edrx_update( float edrx, float ptw ) {$/;"	f	file:
submit_psm_update	src/module/modem.c	/^static void submit_psm_update( int tau, int active_time ) {$/;"	f	file:
subscribe	src/module/motorola.c	/^static int subscribe( void ) {$/;"	f	file:
subscriptions	src/module/motorola.c	/^static struct mqtt_topic subscriptions[2];$/;"	v	typeref:struct:mqtt_topic	file:
sum_log_gain_Q7	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                   sum_log_gain_Q7;                   \/* Cumulative max prediction gain                                   *\/$/;"	m	struct:__anon33
surround_analysis	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^void surround_analysis(const CELTMode *celt_mode, const void *pcm, opus_val16 *bandLogE, opus_val32 *mem, opus_val32 *preemph_mem,$/;"	f
surround_rate_allocation	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static void surround_rate_allocation($/;"	f	file:
switchReady	src/hw/audio/opus-1.2.1/control.h	/^    opus_int switchReady;$/;"	m	struct:__anon8
switch_buffers	src/module/old-radio.c	/^void switch_buffers( void ) {$/;"	f
syn_mem	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   celt_sig syn_mem[2][2*MAX_PERIOD+MAX_PERIOD\/2];$/;"	m	struct:OpusCustomEncoder	file:
tac	src/event/modem_event.h	/^  u32 tac;$/;"	m	struct:modem_cell
tansig_approx	src/hw/audio/opus-1.2.1/mlp.c	/^static OPUS_INLINE float tansig_approx(float x)$/;"	f	file:
tansig_table	src/hw/audio/opus-1.2.1/tansig_table.h	/^static const float tansig_table[201] = {$/;"	v
tapset_decision	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int tapset_decision;$/;"	m	struct:OpusCustomEncoder	file:
tapset_icdf	src/hw/audio/opus-1.2.1/celt.h	/^static const unsigned char tapset_icdf[3]={2,1,0};$/;"	v
tau	src/event/modem_event.h	/^  int tau;$/;"	m	struct:modem_psm
tbands	src/hw/audio/opus-1.2.1/analysis.c	/^static const int tbands[NB_TBANDS+1] = {$/;"	v	file:
text_proc	src/hw/uart.c	/^static struct uart_text text_proc;$/;"	v	typeref:struct:uart_text	file:
tf_analysis	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static int tf_analysis(const CELTMode *m, int len, int isTransient,$/;"	f	file:
tf_change	src/hw/audio/opus-1.2.1/bands.c	/^   int tf_change;$/;"	m	struct:band_ctx	file:
tf_decode	src/hw/audio/opus-1.2.1/celt_decoder.c	/^static void tf_decode(int start, int end, int isTransient, int *tf_res, int LM, ec_dec *dec)$/;"	f	file:
tf_encode	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static void tf_encode(int start, int end, int isTransient, int *tf_res, int LM, int tf_select, ec_enc *enc)$/;"	f	file:
tf_select_table	src/hw/audio/opus-1.2.1/celt.c	/^const signed char tf_select_table[4][8] = {$/;"	v
theme	src/module/ui.c	/^static const lv_theme_t *theme;$/;"	v	file:
theta_round	src/hw/audio/opus-1.2.1/bands.c	/^   int theta_round;$/;"	m	struct:band_ctx	file:
thread_fn	src/module/radio.c	/^void thread_fn( void ) {$/;"	f
tiltWeights	src/hw/audio/opus-1.2.1/VAD.c	/^static const opus_int32 tiltWeights[ VAD_N_BANDS ] = { 30000, 6000, -12000, -12000 };$/;"	v	file:
timeSinceSwitchAllowed_ms	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    opus_int                    timeSinceSwitchAllowed_ms;$/;"	m	struct:__anon15
timeout	src/event/app.h	/^	int timeout;$/;"	m	struct:app_module_event
timeout_handler	src/hw/uart.c	/^void timeout_handler( struct k_timer *timer ) {$/;"	f
timer	src/hw/uart.c	/^  struct k_timer timer;$/;"	m	struct:uart_text	typeref:struct:uart_text::k_timer	file:
timestamp	src/event/modem_event.h	/^  i64 timestamp;$/;"	m	struct:modem_battery
timestamp	src/event/modem_event.h	/^  i64 timestamp;$/;"	m	struct:modem_neighbor_cells
toMono	src/hw/audio/opus-1.2.1/control.h	/^    opus_int toMono;$/;"	m	struct:__anon8
toOpus	src/hw/audio/opus-1.2.1/celt.h	/^static OPUS_INLINE int toOpus(unsigned char c)$/;"	f
toOpusTable	src/hw/audio/opus-1.2.1/celt.h	/^static const unsigned char toOpusTable[20] = {$/;"	v
toc	src/hw/audio/opus-1.2.1/opus_private.h	/^   unsigned char toc;$/;"	m	struct:OpusRepacketizer
tonal_average	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int tonal_average;$/;"	m	struct:OpusCustomEncoder	file:
tonality	src/hw/audio/opus-1.2.1/celt.h	/^   float tonality;$/;"	m	struct:__anon10
tonality_analysis	src/hw/audio/opus-1.2.1/analysis.c	/^static void tonality_analysis(TonalityAnalysisState *tonal, const CELTMode *celt_mode, const void *x, int len, int offset, int c1, int c2, int C, int lsb_depth, downmix_func downmix)$/;"	f	file:
tonality_analysis_init	src/hw/audio/opus-1.2.1/analysis.c	/^void tonality_analysis_init(TonalityAnalysisState *tonal, opus_int32 Fs)$/;"	f
tonality_analysis_reset	src/hw/audio/opus-1.2.1/analysis.c	/^void tonality_analysis_reset(TonalityAnalysisState *tonal)$/;"	f
tonality_get_info	src/hw/audio/opus-1.2.1/analysis.c	/^void tonality_get_info(TonalityAnalysisState *tonal, AnalysisInfo *info_out, int len)$/;"	f
tonality_slope	src/hw/audio/opus-1.2.1/celt.h	/^   float tonality_slope;$/;"	m	struct:__anon10
topo	src/hw/audio/opus-1.2.1/mlp.h	/^    const int *topo;$/;"	m	struct:__anon21
topo	src/hw/audio/opus-1.2.1/mlp_data.c	/^static const int topo[3] = {25, 16, 2};$/;"	v	file:
transient_analysis	src/hw/audio/opus-1.2.1/celt_encoder.c	/^static int transient_analysis(const opus_val32 * OPUS_RESTRICT in, int len, int C,$/;"	f	file:
transition_frame_no	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                   transition_frame_no;        \/* Counter which is mapped to a cut-off frequency *\/$/;"	m	struct:__anon28
transmit	src/module/old-radio.c	/^int transmit( void ) {$/;"	f
trig	src/hw/audio/opus-1.2.1/mdct.h	/^   const kiss_twiddle_scalar * OPUS_RESTRICT trig;$/;"	m	struct:__anon40
trim_icdf	src/hw/audio/opus-1.2.1/celt.h	/^static const unsigned char trim_icdf[11] = {126, 124, 119, 109, 87, 41, 19, 9, 4, 2, 0};$/;"	v
twiddles	src/hw/audio/opus-1.2.1/kiss_fft.h	/^    const kiss_twiddle_cpx *twiddles;$/;"	m	struct:kiss_fft_state
tx	src/hw/uart.c	/^  bool tx;$/;"	m	struct:uart_message	file:
tx_buf_req	src/hw/audio/codec-i2s.h	/^    	tx_buf_req_t tx_buf_req;$/;"	m	union:__anon6::__anon7
tx_buf_req_t	src/hw/audio/codec-i2s.h	/^} tx_buf_req_t;$/;"	t	typeref:struct:__anon4
tx_buffer	src/hw/audio/codec2.c	/^static char tx_buffer[AUDIO_FRAME_BUF_BYTES * I2S_PLAY_BUF_COUNT];$/;"	v	file:
tx_buffer	src/hw/old-codec.c	/^static char tx_buffer[AUDIO_FRAME_BUF_BYTES * I2S_PLAY_BUF_COUNT];$/;"	v	file:
tx_config	src/hw/audio/codec2.c	/^static struct i2s_config tx_config;$/;"	v	typeref:struct:i2s_config	file:
tx_config	src/hw/old-codec.c	/^static struct i2s_config tx_config;$/;"	v	typeref:struct:i2s_config	file:
tx_device	src/hw/audio/codec2.c	/^static const struct device *tx_device;$/;"	v	typeref:struct:device	file:
tx_device	src/hw/old-codec.c	/^static const struct device *tx_device;$/;"	v	typeref:struct:device	file:
tx_frame	src/module/motorola.c	/^struct m_audio_frame_t *tx_frame;$/;"	v	typeref:struct:m_audio_frame_t
tx_mem_slab	src/hw/audio/codec2.c	/^static struct k_mem_slab tx_mem_slab;$/;"	v	typeref:struct:k_mem_slab	file:
tx_mem_slab	src/hw/old-codec.c	/^static struct k_mem_slab tx_mem_slab;$/;"	v	typeref:struct:k_mem_slab	file:
tx_publish_param	src/module/motorola.c	/^struct mqtt_publish_param tx_publish_param;$/;"	v	typeref:struct:mqtt_publish_param
tx_speaker	src/hw/audio/codec2.c	/^int tx_speaker ( size_t size ) {$/;"	f
tx_speaker	src/hw/old-codec.c	/^int tx_speaker ( size_t size ) {$/;"	f
type	src/event/app.h	/^	enum app_module_event_type type;$/;"	m	struct:app_module_event	typeref:enum:app_module_event::app_module_event_type
type	src/event/hw_event.h	/^  enum hw_event_type type;$/;"	m	struct:hw_event	typeref:enum:hw_event::hw_event_type
type	src/event/modem_event.h	/^  enum modem_event_type type;$/;"	m	struct:modem_event	typeref:enum:modem_event::modem_event_type
type	src/event/radio_event.h	/^  enum radio_event_type type;$/;"	m	struct:radio_event	typeref:enum:radio_event::radio_event_type
type	src/event/server_event.h	/^  enum server_event_type type;$/;"	m	struct:server_event	typeref:enum:server_event::server_event_type
type	src/hw/audio/codec-i2s.c	/^audio_type_t type;$/;"	v
u16	src/types.h	/^typedef uint16_t u16;$/;"	t
u32	src/types.h	/^typedef uint32_t u32;$/;"	t
u64	src/types.h	/^typedef uint64_t u64;$/;"	t
u8	src/types.h	/^typedef uint8_t u8;$/;"	t
uart	src/hw/uart.c	/^LOG_MODULE_REGISTER( uart );$/;"	v
uart_cb	src/hw/uart.c	/^static void uart_cb( const struct device *dev, struct uart_event *event, void *data ) {$/;"	f	file:
uart_irq_handler	src/hw/uart.c	/^static void uart_irq_handler( const struct device *dev, void *ctx ) {$/;"	f	file:
uart_message	src/hw/uart.c	/^static struct uart_message {$/;"	s	file:
uart_msg	src/hw/uart.c	/^} uart_msg;$/;"	v	typeref:struct:uart_message	file:
uart_text	src/hw/uart.c	/^static struct uart_text {$/;"	s	file:
uart_timer	src/hw/uart.c	/^static struct k_timer uart_timer;$/;"	v	typeref:struct:k_timer	file:
ui	src/main.c	/^		struct ui_event ui;$/;"	m	union:app_msg::__anon53	typeref:struct:app_msg::__anon53::ui_event	file:
ui	src/module/motorola.c	/^    struct ui_event    ui;$/;"	m	union:radio_msg::__anon48	typeref:struct:radio_msg::__anon48::ui_event	file:
ui_input_init	src/ui/ui_input.c	/^int ui_input_init( void ) {$/;"	f
ui_msg	src/module/ui.c	/^struct ui_msg {$/;"	s	file:
unext	src/hw/audio/opus-1.2.1/cwrs.c	/^static OPUS_INLINE void unext(opus_uint32 *_ui,unsigned _len,opus_uint32 _ui0){$/;"	f	file:
unquant_coarse_energy	src/hw/audio/opus-1.2.1/quant_bands.c	/^void unquant_coarse_energy(const CELTMode *m, int start, int end, opus_val16 *oldEBands, int intra, ec_dec *dec, int C, int LM)$/;"	f
unquant_energy_finalise	src/hw/audio/opus-1.2.1/quant_bands.c	/^void unquant_energy_finalise(const CELTMode *m, int start, int end, opus_val16 *oldEBands, int *fine_quant,  int *fine_priority, int bits_left, ec_dec *dec, int C)$/;"	f
unquant_fine_energy	src/hw/audio/opus-1.2.1/quant_bands.c	/^void unquant_fine_energy(const CELTMode *m, int start, int end, opus_val16 *oldEBands, int *fine_quant, ec_dec *dec, int C)$/;"	f
update_neighbor_cell	src/module/modem.c	/^static void update_neighbor_cell( struct lte_lc_cells_info *cell_info ) {$/;"	f	file:
uprev	src/hw/audio/opus-1.2.1/cwrs.c	/^static OPUS_INLINE void uprev(opus_uint32 *_ui,unsigned _n,opus_uint32 _ui0){$/;"	f	file:
upsample	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int upsample;$/;"	m	struct:OpusCustomEncoder	file:
useCBR	src/hw/audio/opus-1.2.1/control.h	/^    opus_int useCBR;$/;"	m	struct:__anon8
useCBR	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     useCBR;                            \/* Flag to enable constant bitrate                                  *\/$/;"	m	struct:__anon33
useDTX	src/hw/audio/opus-1.2.1/control.h	/^    opus_int useDTX;$/;"	m	struct:__anon8
useDTX	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     useDTX;                            \/* Flag to enable DTX                                               *\/$/;"	m	struct:__anon33
useInBandFEC	src/hw/audio/opus-1.2.1/control.h	/^    opus_int useInBandFEC;$/;"	m	struct:__anon8
useInBandFEC	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     useInBandFEC;                      \/* Saves the API setting for query                                  *\/$/;"	m	struct:__anon33
useInterpolatedNLSFs	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     useInterpolatedNLSFs;              \/* Flag for using NLSF interpolation                                *\/$/;"	m	struct:__anon33
use_dtx	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          use_dtx;                 \/* general DTX for both SILK and CELT *\/$/;"	m	struct:OpusEncoder	file:
use_vbr	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          use_vbr;$/;"	m	struct:OpusEncoder	file:
user	src/module/users.c	/^struct user {$/;"	s	file:
user_bandwidth	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          user_bandwidth;$/;"	m	struct:OpusEncoder	file:
user_bitrate_bps	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    opus_int32   user_bitrate_bps;$/;"	m	struct:OpusEncoder	file:
user_bitrate_to_bitrate	src/hw/audio/opus-1.2.1/opus_encoder.c	/^static opus_int32 user_bitrate_to_bitrate(OpusEncoder *st, int frame_size, int max_data_bytes)$/;"	f	file:
user_forced_mode	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          user_forced_mode;$/;"	m	struct:OpusEncoder	file:
user_id_list	src/module/ui.c	/^static const u32 user_id_list[MAX_USERS];$/;"	v	file:
username_list	src/module/ui.c	/^static const char username_list[MAX_USERNAME_LENGTH][MAX_USERS];$/;"	v	file:
util	src/module/sdk_modem.c	/^		struct util_module_event util;$/;"	m	union:modem_msg_data::__anon49	typeref:struct:modem_msg_data::__anon49::util_module_event	file:
vad_prob	src/hw/audio/opus-1.2.1/analysis.h	/^   float vad_prob;$/;"	m	struct:__anon41
vad_prob	src/hw/audio/opus-1.2.1/celt.h	/^   float vad_prob;$/;"	m	struct:__anon10
val	src/hw/audio/opus-1.2.1/entcode.h	/^   opus_uint32    val;$/;"	m	struct:ec_ctx
valid	src/hw/audio/opus-1.2.1/celt.h	/^   int valid;$/;"	m	struct:__anon10
validate_ambisonics	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static int validate_ambisonics(int nb_channels, int *nb_streams, int *nb_coupled_streams)$/;"	f	file:
validate_encoder_layout	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static int validate_encoder_layout(const ChannelLayout *layout)$/;"	f	file:
validate_layout	src/hw/audio/opus-1.2.1/opus_multistream.c	/^int validate_layout(const ChannelLayout *layout)$/;"	f
value	src/event/hw_event.h	/^  u32 value;$/;"	m	struct:button_data
varDefine	src/hw/audio/opus-1.2.1/MacroCount.h	/^#define varDefine /;"	d
varDefine	src/hw/audio/opus-1.2.1/MacroCount.h	/^#define varDefine$/;"	d
variable_HP_smth1_Q15	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                   variable_HP_smth1_Q15;             \/* State of first smoother                                          *\/$/;"	m	struct:__anon33
variable_HP_smth2_Q15	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    opus_int32   variable_HP_smth2_Q15;$/;"	m	struct:OpusEncoder	file:
variable_HP_smth2_Q15	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int32                   variable_HP_smth2_Q15;             \/* State of second smoother                                         *\/$/;"	m	struct:__anon33
variable_duration	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          variable_duration;$/;"	m	struct:OpusEncoder	file:
variable_duration	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^   int variable_duration;$/;"	m	struct:OpusMSEncoder	file:
vbr	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   int vbr;$/;"	m	struct:OpusCustomEncoder	file:
vbr_constraint	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          vbr_constraint;$/;"	m	struct:OpusEncoder	file:
vbr_count	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_int32 vbr_count;$/;"	m	struct:OpusCustomEncoder	file:
vbr_drift	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_int32 vbr_drift;$/;"	m	struct:OpusCustomEncoder	file:
vbr_offset	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_int32 vbr_offset;$/;"	m	struct:OpusCustomEncoder	file:
vbr_reservoir	src/hw/audio/opus-1.2.1/celt_encoder.c	/^   opus_int32 vbr_reservoir;$/;"	m	struct:OpusCustomEncoder	file:
voice_ratio	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    int          voice_ratio;$/;"	m	struct:OpusEncoder	file:
voltage	src/event/modem_event.h	/^  u16 voltage;$/;"	m	struct:modem_battery
vorbis_mappings	src/hw/audio/opus-1.2.1/opus_multistream_encoder.c	/^static const VorbisLayout vorbis_mappings[8] = {$/;"	v	file:
warped_gain	src/hw/audio/opus-1.2.1/noise_shape_analysis_FIX.c	/^static OPUS_INLINE opus_int32 warped_gain( \/* gain in Q16*\/$/;"	f	file:
warping_Q16	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int                     warping_Q16;                       \/* Warping parameter for warped noise shaping                       *\/$/;"	m	struct:__anon33
weights	src/hw/audio/opus-1.2.1/mlp.h	/^    const float *weights;$/;"	m	struct:__anon21
weights	src/hw/audio/opus-1.2.1/mlp_data.c	/^static const float weights[450] = {$/;"	v	file:
width_mem	src/hw/audio/opus-1.2.1/opus_encoder.c	/^    StereoWidthState width_mem;$/;"	m	struct:OpusEncoder	file:
width_prev_Q14	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                   width_prev_Q14;$/;"	m	struct:__anon30
window	src/hw/audio/opus-1.2.1/modes.h	/^   const opus_val16 *window;$/;"	m	struct:OpusCustomMode
window120	src/hw/audio/opus-1.2.1/static_modes_fixed.h	/^static const opus_val16 window120[120] = {$/;"	v
window120	src/hw/audio/opus-1.2.1/static_modes_float.h	/^static const opus_val16 window120[120] = {$/;"	v
work	src/hw/uart.c	/^  struct k_work  work;$/;"	m	struct:uart_text	typeref:struct:uart_text::k_work	file:
write_pos	src/hw/audio/opus-1.2.1/analysis.h	/^   int write_pos;$/;"	m	struct:__anon41
x_buf	src/hw/audio/opus-1.2.1/structs_FIX.h	/^    silk_DWORD_ALIGN opus_int16 x_buf[ 2 * MAX_FRAME_LENGTH + LA_SHAPE_MAX ];\/* Buffer for find pitch and noise shape analysis  *\/$/;"	m	struct:__anon13
xcorr_kernel	src/hw/audio/opus-1.2.1/arm/pitch_arm.h	/^#   define xcorr_kernel(/;"	d
xcorr_kernel	src/hw/audio/opus-1.2.1/pitch.h	/^#define xcorr_kernel(/;"	d
xcorr_kernel_c	src/hw/audio/opus-1.2.1/pitch.h	/^static OPUS_INLINE void xcorr_kernel_c(const opus_val16 * x, const opus_val16 * y, opus_val32 sum[4], int len)$/;"	f
xcorr_kernel_edsp	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^xcorr_kernel_edsp:$/;"	l
xcorr_kernel_edsp	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^xcorr_kernel_edsp PROC$/;"	l
xcorr_kernel_edsp_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^xcorr_kernel_edsp_done:$/;"	l
xcorr_kernel_edsp_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^xcorr_kernel_edsp_done$/;"	l
xcorr_kernel_edsp_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^xcorr_kernel_edsp_done$/;"	l
xcorr_kernel_edsp_process4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^xcorr_kernel_edsp_process4:$/;"	l
xcorr_kernel_edsp_process4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^xcorr_kernel_edsp_process4$/;"	l
xcorr_kernel_edsp_process4	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^xcorr_kernel_edsp_process4$/;"	l
xcorr_kernel_edsp_process4_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^xcorr_kernel_edsp_process4_done:$/;"	l
xcorr_kernel_edsp_process4_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^xcorr_kernel_edsp_process4_done$/;"	l
xcorr_kernel_edsp_process4_done	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^xcorr_kernel_edsp_process4_done$/;"	l
xcorr_kernel_edsp_start	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_gcc.s	/^xcorr_kernel_edsp_start:$/;"	l
xcorr_kernel_edsp_start	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_iar.s	/^xcorr_kernel_edsp_start$/;"	l
xcorr_kernel_edsp_start	src/hw/audio/opus-1.2.1/arm/celt_pitch_xcorr_arm_keil.s	/^xcorr_kernel_edsp_start$/;"	l
xq	src/hw/audio/opus-1.2.1/structs.h	/^    opus_int16                  xq[           2 * MAX_FRAME_LENGTH ]; \/* Buffer for quantized output signal                             *\/$/;"	m	struct:__anon26
xq_Q14	src/hw/audio/opus-1.2.1/NSQ_del_dec.c	/^    opus_int32 xq_Q14;$/;"	m	struct:__anon20	file:
